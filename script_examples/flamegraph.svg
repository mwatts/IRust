<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="773.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="1267"><g><title>ASN1_OCTET_STRING_it (1 samples, 0.08%)</title><rect x="0.0000%" y="709" width="0.0789%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50"></text></g><g><title>asn1_primitive_new (1 samples, 0.08%)</title><rect x="0.0000%" y="693" width="0.0789%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>CRYPTO_THREAD_write_lock (1 samples, 0.08%)</title><rect x="0.0789%" y="709" width="0.0789%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.3289%" y="719.50"></text></g><g><title>[rustup] (11 samples, 0.87%)</title><rect x="0.1579%" y="693" width="0.8682%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="11"/><text x="0.4079%" y="703.50"></text></g><g><title>__memcmp_sse4_1 (2 samples, 0.16%)</title><rect x="1.0260%" y="693" width="0.1579%" height="15" fill="rgb(208,68,35)" fg:x="13" fg:w="2"/><text x="1.2760%" y="703.50"></text></g><g><title>[[heap]] (14 samples, 1.10%)</title><rect x="0.1579%" y="709" width="1.1050%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="14"/><text x="0.4079%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.08%)</title><rect x="1.1839%" y="693" width="0.0789%" height="15" fill="rgb(207,160,47)" fg:x="15" fg:w="1"/><text x="1.4339%" y="703.50"></text></g><g><title>[rustup] (6 samples, 0.47%)</title><rect x="1.2628%" y="693" width="0.4736%" height="15" fill="rgb(228,23,34)" fg:x="16" fg:w="6"/><text x="1.5128%" y="703.50"></text></g><g><title>[[stack]] (7 samples, 0.55%)</title><rect x="1.2628%" y="709" width="0.5525%" height="15" fill="rgb(218,30,26)" fg:x="16" fg:w="7"/><text x="1.5128%" y="719.50"></text></g><g><title>_int_free (1 samples, 0.08%)</title><rect x="1.7364%" y="693" width="0.0789%" height="15" fill="rgb(220,122,19)" fg:x="22" fg:w="1"/><text x="1.9864%" y="703.50"></text></g><g><title>[anon] (4 samples, 0.32%)</title><rect x="1.8153%" y="709" width="0.3157%" height="15" fill="rgb(250,228,42)" fg:x="23" fg:w="4"/><text x="2.0653%" y="719.50"></text></g><g><title>[rustup] (4 samples, 0.32%)</title><rect x="1.8153%" y="693" width="0.3157%" height="15" fill="rgb(240,193,28)" fg:x="23" fg:w="4"/><text x="2.0653%" y="703.50"></text></g><g><title>[rustup] (1 samples, 0.08%)</title><rect x="2.3678%" y="549" width="0.0789%" height="15" fill="rgb(216,20,37)" fg:x="30" fg:w="1"/><text x="2.6178%" y="559.50"></text></g><g><title>[rustup] (1 samples, 0.08%)</title><rect x="2.3678%" y="533" width="0.0789%" height="15" fill="rgb(206,188,39)" fg:x="30" fg:w="1"/><text x="2.6178%" y="543.50"></text></g><g><title>[rustup] (1 samples, 0.08%)</title><rect x="2.3678%" y="517" width="0.0789%" height="15" fill="rgb(217,207,13)" fg:x="30" fg:w="1"/><text x="2.6178%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.08%)</title><rect x="2.3678%" y="501" width="0.0789%" height="15" fill="rgb(231,73,38)" fg:x="30" fg:w="1"/><text x="2.6178%" y="511.50"></text></g><g><title>_int_realloc (1 samples, 0.08%)</title><rect x="2.3678%" y="485" width="0.0789%" height="15" fill="rgb(225,20,46)" fg:x="30" fg:w="1"/><text x="2.6178%" y="495.50"></text></g><g><title>__GI___libc_free (1 samples, 0.08%)</title><rect x="2.4467%" y="549" width="0.0789%" height="15" fill="rgb(210,31,41)" fg:x="31" fg:w="1"/><text x="2.6967%" y="559.50"></text></g><g><title>[rustup] (5 samples, 0.39%)</title><rect x="2.2099%" y="565" width="0.3946%" height="15" fill="rgb(221,200,47)" fg:x="28" fg:w="5"/><text x="2.4599%" y="575.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="2.5257%" y="549" width="0.0789%" height="15" fill="rgb(226,26,5)" fg:x="32" fg:w="1"/><text x="2.7757%" y="559.50"></text></g><g><title>__GI___libc_free (3 samples, 0.24%)</title><rect x="2.6046%" y="565" width="0.2368%" height="15" fill="rgb(249,33,26)" fg:x="33" fg:w="3"/><text x="2.8546%" y="575.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.24%)</title><rect x="2.8414%" y="565" width="0.2368%" height="15" fill="rgb(235,183,28)" fg:x="36" fg:w="3"/><text x="3.0914%" y="575.50"></text></g><g><title>_int_realloc (3 samples, 0.24%)</title><rect x="2.8414%" y="549" width="0.2368%" height="15" fill="rgb(221,5,38)" fg:x="36" fg:w="3"/><text x="3.0914%" y="559.50"></text></g><g><title>_int_malloc (3 samples, 0.24%)</title><rect x="2.8414%" y="533" width="0.2368%" height="15" fill="rgb(247,18,42)" fg:x="36" fg:w="3"/><text x="3.0914%" y="543.50"></text></g><g><title>malloc_consolidate (3 samples, 0.24%)</title><rect x="2.8414%" y="517" width="0.2368%" height="15" fill="rgb(241,131,45)" fg:x="36" fg:w="3"/><text x="3.0914%" y="527.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.08%)</title><rect x="2.9992%" y="501" width="0.0789%" height="15" fill="rgb(249,31,29)" fg:x="38" fg:w="1"/><text x="3.2492%" y="511.50"></text></g><g><title>[rustup] (14 samples, 1.10%)</title><rect x="2.1310%" y="661" width="1.1050%" height="15" fill="rgb(225,111,53)" fg:x="27" fg:w="14"/><text x="2.3810%" y="671.50"></text></g><g><title>[rustup] (13 samples, 1.03%)</title><rect x="2.2099%" y="645" width="1.0260%" height="15" fill="rgb(238,160,17)" fg:x="28" fg:w="13"/><text x="2.4599%" y="655.50"></text></g><g><title>[rustup] (13 samples, 1.03%)</title><rect x="2.2099%" y="629" width="1.0260%" height="15" fill="rgb(214,148,48)" fg:x="28" fg:w="13"/><text x="2.4599%" y="639.50"></text></g><g><title>[rustup] (13 samples, 1.03%)</title><rect x="2.2099%" y="613" width="1.0260%" height="15" fill="rgb(232,36,49)" fg:x="28" fg:w="13"/><text x="2.4599%" y="623.50"></text></g><g><title>[rustup] (13 samples, 1.03%)</title><rect x="2.2099%" y="597" width="1.0260%" height="15" fill="rgb(209,103,24)" fg:x="28" fg:w="13"/><text x="2.4599%" y="607.50"></text></g><g><title>[rustup] (13 samples, 1.03%)</title><rect x="2.2099%" y="581" width="1.0260%" height="15" fill="rgb(229,88,8)" fg:x="28" fg:w="13"/><text x="2.4599%" y="591.50"></text></g><g><title>__libc_read (2 samples, 0.16%)</title><rect x="3.0781%" y="565" width="0.1579%" height="15" fill="rgb(213,181,19)" fg:x="39" fg:w="2"/><text x="3.3281%" y="575.50"></text></g><g><title>[rustup] (15 samples, 1.18%)</title><rect x="2.1310%" y="709" width="1.1839%" height="15" fill="rgb(254,191,54)" fg:x="27" fg:w="15"/><text x="2.3810%" y="719.50"></text></g><g><title>__libc_start_main (15 samples, 1.18%)</title><rect x="2.1310%" y="693" width="1.1839%" height="15" fill="rgb(241,83,37)" fg:x="27" fg:w="15"/><text x="2.3810%" y="703.50"></text></g><g><title>[rustup] (15 samples, 1.18%)</title><rect x="2.1310%" y="677" width="1.1839%" height="15" fill="rgb(233,36,39)" fg:x="27" fg:w="15"/><text x="2.3810%" y="687.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.08%)</title><rect x="3.2360%" y="661" width="0.0789%" height="15" fill="rgb(226,3,54)" fg:x="41" fg:w="1"/><text x="3.4860%" y="671.50"></text></g><g><title>_IO_getdelim (1 samples, 0.08%)</title><rect x="3.2360%" y="645" width="0.0789%" height="15" fill="rgb(245,192,40)" fg:x="41" fg:w="1"/><text x="3.4860%" y="655.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.08%)</title><rect x="3.2360%" y="629" width="0.0789%" height="15" fill="rgb(238,167,29)" fg:x="41" fg:w="1"/><text x="3.4860%" y="639.50"></text></g><g><title>__GI___read_nocancel (1 samples, 0.08%)</title><rect x="3.2360%" y="613" width="0.0789%" height="15" fill="rgb(232,182,51)" fg:x="41" fg:w="1"/><text x="3.4860%" y="623.50"></text></g><g><title>ASN1_STRING_set (1 samples, 0.08%)</title><rect x="3.3149%" y="693" width="0.0789%" height="15" fill="rgb(231,60,39)" fg:x="42" fg:w="1"/><text x="3.5649%" y="703.50"></text></g><g><title>[rustup] (11 samples, 0.87%)</title><rect x="21.7048%" y="485" width="0.8682%" height="15" fill="rgb(208,69,12)" fg:x="275" fg:w="11"/><text x="21.9548%" y="495.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.39%)</title><rect x="22.1784%" y="469" width="0.3946%" height="15" fill="rgb(235,93,37)" fg:x="281" fg:w="5"/><text x="22.4284%" y="479.50"></text></g><g><title>_int_malloc (5 samples, 0.39%)</title><rect x="22.1784%" y="453" width="0.3946%" height="15" fill="rgb(213,116,39)" fg:x="281" fg:w="5"/><text x="22.4284%" y="463.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.08%)</title><rect x="22.4941%" y="437" width="0.0789%" height="15" fill="rgb(222,207,29)" fg:x="285" fg:w="1"/><text x="22.7441%" y="447.50"></text></g><g><title>__memcmp_sse4_1 (1 samples, 0.08%)</title><rect x="22.5730%" y="485" width="0.0789%" height="15" fill="rgb(206,96,30)" fg:x="286" fg:w="1"/><text x="22.8230%" y="495.50"></text></g><g><title>[rustup] (31 samples, 2.45%)</title><rect x="20.2841%" y="501" width="2.4467%" height="15" fill="rgb(218,138,4)" fg:x="257" fg:w="31"/><text x="20.5341%" y="511.50">[r..</text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="22.6519%" y="485" width="0.0789%" height="15" fill="rgb(250,191,14)" fg:x="287" fg:w="1"/><text x="22.9019%" y="495.50"></text></g><g><title>__GI___libc_free (1 samples, 0.08%)</title><rect x="22.7309%" y="501" width="0.0789%" height="15" fill="rgb(239,60,40)" fg:x="288" fg:w="1"/><text x="22.9809%" y="511.50"></text></g><g><title>_int_free (1 samples, 0.08%)</title><rect x="22.7309%" y="485" width="0.0789%" height="15" fill="rgb(206,27,48)" fg:x="288" fg:w="1"/><text x="22.9809%" y="495.50"></text></g><g><title>__GI___libc_malloc (14 samples, 1.10%)</title><rect x="22.8098%" y="501" width="1.1050%" height="15" fill="rgb(225,35,8)" fg:x="289" fg:w="14"/><text x="23.0598%" y="511.50"></text></g><g><title>_int_malloc (13 samples, 1.03%)</title><rect x="22.8887%" y="485" width="1.0260%" height="15" fill="rgb(250,213,24)" fg:x="290" fg:w="13"/><text x="23.1387%" y="495.50"></text></g><g><title>sysmalloc (1 samples, 0.08%)</title><rect x="23.8358%" y="469" width="0.0789%" height="15" fill="rgb(247,123,22)" fg:x="302" fg:w="1"/><text x="24.0858%" y="479.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.08%)</title><rect x="23.9148%" y="501" width="0.0789%" height="15" fill="rgb(231,138,38)" fg:x="303" fg:w="1"/><text x="24.1648%" y="511.50"></text></g><g><title>[rustup] (61 samples, 4.81%)</title><rect x="19.2581%" y="517" width="4.8145%" height="15" fill="rgb(231,145,46)" fg:x="244" fg:w="61"/><text x="19.5081%" y="527.50">[rustu..</text></g><g><title>__memcmp_sse4_1 (1 samples, 0.08%)</title><rect x="23.9937%" y="501" width="0.0789%" height="15" fill="rgb(251,118,11)" fg:x="304" fg:w="1"/><text x="24.2437%" y="511.50"></text></g><g><title>[rustup] (84 samples, 6.63%)</title><rect x="17.7585%" y="533" width="6.6298%" height="15" fill="rgb(217,147,25)" fg:x="225" fg:w="84"/><text x="18.0085%" y="543.50">[rustup]</text></g><g><title>__GI___libc_malloc (4 samples, 0.32%)</title><rect x="24.0726%" y="517" width="0.3157%" height="15" fill="rgb(247,81,37)" fg:x="305" fg:w="4"/><text x="24.3226%" y="527.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="24.2305%" y="501" width="0.1579%" height="15" fill="rgb(209,12,38)" fg:x="307" fg:w="2"/><text x="24.4805%" y="511.50"></text></g><g><title>__GI___libc_free (3 samples, 0.24%)</title><rect x="24.3883%" y="533" width="0.2368%" height="15" fill="rgb(227,1,9)" fg:x="309" fg:w="3"/><text x="24.6383%" y="543.50"></text></g><g><title>_int_free (3 samples, 0.24%)</title><rect x="24.3883%" y="517" width="0.2368%" height="15" fill="rgb(248,47,43)" fg:x="309" fg:w="3"/><text x="24.6383%" y="527.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.55%)</title><rect x="24.6251%" y="533" width="0.5525%" height="15" fill="rgb(221,10,30)" fg:x="312" fg:w="7"/><text x="24.8751%" y="543.50"></text></g><g><title>_int_malloc (7 samples, 0.55%)</title><rect x="24.6251%" y="517" width="0.5525%" height="15" fill="rgb(210,229,1)" fg:x="312" fg:w="7"/><text x="24.8751%" y="527.50"></text></g><g><title>sysmalloc (1 samples, 0.08%)</title><rect x="25.0987%" y="501" width="0.0789%" height="15" fill="rgb(222,148,37)" fg:x="318" fg:w="1"/><text x="25.3487%" y="511.50"></text></g><g><title>__GI___default_morecore (1 samples, 0.08%)</title><rect x="25.0987%" y="485" width="0.0789%" height="15" fill="rgb(234,67,33)" fg:x="318" fg:w="1"/><text x="25.3487%" y="495.50"></text></g><g><title>__GI___sbrk (1 samples, 0.08%)</title><rect x="25.0987%" y="469" width="0.0789%" height="15" fill="rgb(247,98,35)" fg:x="318" fg:w="1"/><text x="25.3487%" y="479.50"></text></g><g><title>__brk (1 samples, 0.08%)</title><rect x="25.0987%" y="453" width="0.0789%" height="15" fill="rgb(247,138,52)" fg:x="318" fg:w="1"/><text x="25.3487%" y="463.50"></text></g><g><title>[rustup] (121 samples, 9.55%)</title><rect x="15.7064%" y="549" width="9.5501%" height="15" fill="rgb(213,79,30)" fg:x="199" fg:w="121"/><text x="15.9564%" y="559.50">[rustup]</text></g><g><title>__memcmp_sse4_1 (1 samples, 0.08%)</title><rect x="25.1776%" y="533" width="0.0789%" height="15" fill="rgb(246,177,23)" fg:x="319" fg:w="1"/><text x="25.4276%" y="543.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="25.3354%" y="517" width="0.0789%" height="15" fill="rgb(230,62,27)" fg:x="321" fg:w="1"/><text x="25.5854%" y="527.50"></text></g><g><title>[rustup] (171 samples, 13.50%)</title><rect x="12.1547%" y="565" width="13.4964%" height="15" fill="rgb(216,154,8)" fg:x="154" fg:w="171"/><text x="12.4047%" y="575.50">[rustup]</text></g><g><title>__GI___libc_realloc (5 samples, 0.39%)</title><rect x="25.2565%" y="549" width="0.3946%" height="15" fill="rgb(244,35,45)" fg:x="320" fg:w="5"/><text x="25.5065%" y="559.50"></text></g><g><title>_int_realloc (4 samples, 0.32%)</title><rect x="25.3354%" y="533" width="0.3157%" height="15" fill="rgb(251,115,12)" fg:x="321" fg:w="4"/><text x="25.5854%" y="543.50"></text></g><g><title>_int_malloc (3 samples, 0.24%)</title><rect x="25.4144%" y="517" width="0.2368%" height="15" fill="rgb(240,54,50)" fg:x="322" fg:w="3"/><text x="25.6644%" y="527.50"></text></g><g><title>alloc_perturb (1 samples, 0.08%)</title><rect x="25.5722%" y="501" width="0.0789%" height="15" fill="rgb(233,84,52)" fg:x="324" fg:w="1"/><text x="25.8222%" y="511.50"></text></g><g><title>__GI___libc_free (7 samples, 0.55%)</title><rect x="25.6511%" y="565" width="0.5525%" height="15" fill="rgb(207,117,47)" fg:x="325" fg:w="7"/><text x="25.9011%" y="575.50"></text></g><g><title>_int_free (7 samples, 0.55%)</title><rect x="25.6511%" y="549" width="0.5525%" height="15" fill="rgb(249,43,39)" fg:x="325" fg:w="7"/><text x="25.9011%" y="559.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="26.2036%" y="565" width="0.1579%" height="15" fill="rgb(209,38,44)" fg:x="332" fg:w="2"/><text x="26.4536%" y="575.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="26.2036%" y="549" width="0.1579%" height="15" fill="rgb(236,212,23)" fg:x="332" fg:w="2"/><text x="26.4536%" y="559.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.08%)</title><rect x="26.3615%" y="565" width="0.0789%" height="15" fill="rgb(242,79,21)" fg:x="334" fg:w="1"/><text x="26.6115%" y="575.50"></text></g><g><title>_int_realloc (1 samples, 0.08%)</title><rect x="26.3615%" y="549" width="0.0789%" height="15" fill="rgb(211,96,35)" fg:x="334" fg:w="1"/><text x="26.6115%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="26.3615%" y="533" width="0.0789%" height="15" fill="rgb(253,215,40)" fg:x="334" fg:w="1"/><text x="26.6115%" y="543.50"></text></g><g><title>[rustup] (239 samples, 18.86%)</title><rect x="7.8927%" y="581" width="18.8635%" height="15" fill="rgb(211,81,21)" fg:x="100" fg:w="239"/><text x="8.1427%" y="591.50">[rustup]</text></g><g><title>__memcmp_sse4_1 (4 samples, 0.32%)</title><rect x="26.4404%" y="565" width="0.3157%" height="15" fill="rgb(208,190,38)" fg:x="335" fg:w="4"/><text x="26.6904%" y="575.50"></text></g><g><title>__GI___libc_free (4 samples, 0.32%)</title><rect x="26.7561%" y="581" width="0.3157%" height="15" fill="rgb(235,213,38)" fg:x="339" fg:w="4"/><text x="27.0061%" y="591.50"></text></g><g><title>_int_free (3 samples, 0.24%)</title><rect x="26.8350%" y="565" width="0.2368%" height="15" fill="rgb(237,122,38)" fg:x="340" fg:w="3"/><text x="27.0850%" y="575.50"></text></g><g><title>malloc_consolidate (1 samples, 0.08%)</title><rect x="26.9929%" y="549" width="0.0789%" height="15" fill="rgb(244,218,35)" fg:x="342" fg:w="1"/><text x="27.2429%" y="559.50"></text></g><g><title>[rustup] (271 samples, 21.39%)</title><rect x="5.7616%" y="597" width="21.3891%" height="15" fill="rgb(240,68,47)" fg:x="73" fg:w="271"/><text x="6.0116%" y="607.50">[rustup]</text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="27.0718%" y="581" width="0.0789%" height="15" fill="rgb(210,16,53)" fg:x="343" fg:w="1"/><text x="27.3218%" y="591.50"></text></g><g><title>__GI___libc_free (2 samples, 0.16%)</title><rect x="27.1507%" y="597" width="0.1579%" height="15" fill="rgb(235,124,12)" fg:x="344" fg:w="2"/><text x="27.4007%" y="607.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="27.1507%" y="581" width="0.1579%" height="15" fill="rgb(224,169,11)" fg:x="344" fg:w="2"/><text x="27.4007%" y="591.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.08%)</title><rect x="27.2297%" y="565" width="0.0789%" height="15" fill="rgb(250,166,2)" fg:x="345" fg:w="1"/><text x="27.4797%" y="575.50"></text></g><g><title>[rustup] (274 samples, 21.63%)</title><rect x="5.7616%" y="613" width="21.6259%" height="15" fill="rgb(242,216,29)" fg:x="73" fg:w="274"/><text x="6.0116%" y="623.50">[rustup]</text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="27.3086%" y="597" width="0.0789%" height="15" fill="rgb(230,116,27)" fg:x="346" fg:w="1"/><text x="27.5586%" y="607.50"></text></g><g><title>[rustup] (275 samples, 21.70%)</title><rect x="5.7616%" y="629" width="21.7048%" height="15" fill="rgb(228,99,48)" fg:x="73" fg:w="275"/><text x="6.0116%" y="639.50">[rustup]</text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="27.3875%" y="613" width="0.0789%" height="15" fill="rgb(253,11,6)" fg:x="347" fg:w="1"/><text x="27.6375%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="27.3875%" y="597" width="0.0789%" height="15" fill="rgb(247,143,39)" fg:x="347" fg:w="1"/><text x="27.6375%" y="607.50"></text></g><g><title>[rustup] (306 samples, 24.15%)</title><rect x="3.3938%" y="693" width="24.1515%" height="15" fill="rgb(236,97,10)" fg:x="43" fg:w="306"/><text x="3.6438%" y="703.50">[rustup]</text></g><g><title>[rustup] (276 samples, 21.78%)</title><rect x="5.7616%" y="677" width="21.7837%" height="15" fill="rgb(233,208,19)" fg:x="73" fg:w="276"/><text x="6.0116%" y="687.50">[rustup]</text></g><g><title>[rustup] (276 samples, 21.78%)</title><rect x="5.7616%" y="661" width="21.7837%" height="15" fill="rgb(216,164,2)" fg:x="73" fg:w="276"/><text x="6.0116%" y="671.50">[rustup]</text></g><g><title>[rustup] (276 samples, 21.78%)</title><rect x="5.7616%" y="645" width="21.7837%" height="15" fill="rgb(220,129,5)" fg:x="73" fg:w="276"/><text x="6.0116%" y="655.50">[rustup]</text></g><g><title>__GI___libc_realloc (1 samples, 0.08%)</title><rect x="27.4665%" y="629" width="0.0789%" height="15" fill="rgb(242,17,10)" fg:x="348" fg:w="1"/><text x="27.7165%" y="639.50"></text></g><g><title>_int_realloc (1 samples, 0.08%)</title><rect x="27.4665%" y="613" width="0.0789%" height="15" fill="rgb(242,107,0)" fg:x="348" fg:w="1"/><text x="27.7165%" y="623.50"></text></g><g><title>__GI___libc_free (1 samples, 0.08%)</title><rect x="27.5454%" y="693" width="0.0789%" height="15" fill="rgb(251,28,31)" fg:x="349" fg:w="1"/><text x="27.7954%" y="703.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.24%)</title><rect x="27.6243%" y="693" width="0.2368%" height="15" fill="rgb(233,223,10)" fg:x="350" fg:w="3"/><text x="27.8743%" y="703.50"></text></g><g><title>asn1_template_ex_d2i (1 samples, 0.08%)</title><rect x="27.8611%" y="133" width="0.0789%" height="15" fill="rgb(215,21,27)" fg:x="353" fg:w="1"/><text x="28.1111%" y="143.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.08%)</title><rect x="27.8611%" y="117" width="0.0789%" height="15" fill="rgb(232,23,21)" fg:x="353" fg:w="1"/><text x="28.1111%" y="127.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.08%)</title><rect x="27.8611%" y="101" width="0.0789%" height="15" fill="rgb(244,5,23)" fg:x="353" fg:w="1"/><text x="28.1111%" y="111.50"></text></g><g><title>asn1_d2i_ex_primitive (1 samples, 0.08%)</title><rect x="27.8611%" y="85" width="0.0789%" height="15" fill="rgb(226,81,46)" fg:x="353" fg:w="1"/><text x="28.1111%" y="95.50"></text></g><g><title>ASN1_STRING_set (1 samples, 0.08%)</title><rect x="27.8611%" y="69" width="0.0789%" height="15" fill="rgb(247,70,30)" fg:x="353" fg:w="1"/><text x="28.1111%" y="79.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="27.8611%" y="53" width="0.0789%" height="15" fill="rgb(212,68,19)" fg:x="353" fg:w="1"/><text x="28.1111%" y="63.50"></text></g><g><title>cargo::ops::registry::needs_custom_http_transport (2 samples, 0.16%)</title><rect x="27.8611%" y="453" width="0.1579%" height="15" fill="rgb(240,187,13)" fg:x="353" fg:w="2"/><text x="28.1111%" y="463.50"></text></g><g><title>cargo::ops::registry::http_proxy (2 samples, 0.16%)</title><rect x="27.8611%" y="437" width="0.1579%" height="15" fill="rgb(223,113,26)" fg:x="353" fg:w="2"/><text x="28.1111%" y="447.50"></text></g><g><title>git2::config::Config::open_default (2 samples, 0.16%)</title><rect x="27.8611%" y="421" width="0.1579%" height="15" fill="rgb(206,192,2)" fg:x="353" fg:w="2"/><text x="28.1111%" y="431.50"></text></g><g><title>libgit2_sys::init (2 samples, 0.16%)</title><rect x="27.8611%" y="405" width="0.1579%" height="15" fill="rgb(241,108,4)" fg:x="353" fg:w="2"/><text x="28.1111%" y="415.50"></text></g><g><title>std::sync::once::Once::call_inner (2 samples, 0.16%)</title><rect x="27.8611%" y="389" width="0.1579%" height="15" fill="rgb(247,173,49)" fg:x="353" fg:w="2"/><text x="28.1111%" y="399.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (2 samples, 0.16%)</title><rect x="27.8611%" y="373" width="0.1579%" height="15" fill="rgb(224,114,35)" fg:x="353" fg:w="2"/><text x="28.1111%" y="383.50"></text></g><g><title>git_runtime_init (2 samples, 0.16%)</title><rect x="27.8611%" y="357" width="0.1579%" height="15" fill="rgb(245,159,27)" fg:x="353" fg:w="2"/><text x="28.1111%" y="367.50"></text></g><g><title>git_openssl_stream_global_init (2 samples, 0.16%)</title><rect x="27.8611%" y="341" width="0.1579%" height="15" fill="rgb(245,172,44)" fg:x="353" fg:w="2"/><text x="28.1111%" y="351.50"></text></g><g><title>X509_STORE_set_default_paths (2 samples, 0.16%)</title><rect x="27.8611%" y="325" width="0.1579%" height="15" fill="rgb(236,23,11)" fg:x="353" fg:w="2"/><text x="28.1111%" y="335.50"></text></g><g><title>by_file_ctrl (2 samples, 0.16%)</title><rect x="27.8611%" y="309" width="0.1579%" height="15" fill="rgb(205,117,38)" fg:x="353" fg:w="2"/><text x="28.1111%" y="319.50"></text></g><g><title>X509_load_cert_crl_file (2 samples, 0.16%)</title><rect x="27.8611%" y="293" width="0.1579%" height="15" fill="rgb(237,72,25)" fg:x="353" fg:w="2"/><text x="28.1111%" y="303.50"></text></g><g><title>PEM_X509_INFO_read_bio (2 samples, 0.16%)</title><rect x="27.8611%" y="277" width="0.1579%" height="15" fill="rgb(244,70,9)" fg:x="353" fg:w="2"/><text x="28.1111%" y="287.50"></text></g><g><title>ASN1_item_d2i (2 samples, 0.16%)</title><rect x="27.8611%" y="261" width="0.1579%" height="15" fill="rgb(217,125,39)" fg:x="353" fg:w="2"/><text x="28.1111%" y="271.50"></text></g><g><title>asn1_item_embed_d2i (2 samples, 0.16%)</title><rect x="27.8611%" y="245" width="0.1579%" height="15" fill="rgb(235,36,10)" fg:x="353" fg:w="2"/><text x="28.1111%" y="255.50"></text></g><g><title>asn1_template_ex_d2i (2 samples, 0.16%)</title><rect x="27.8611%" y="229" width="0.1579%" height="15" fill="rgb(251,123,47)" fg:x="353" fg:w="2"/><text x="28.1111%" y="239.50"></text></g><g><title>asn1_template_noexp_d2i (2 samples, 0.16%)</title><rect x="27.8611%" y="213" width="0.1579%" height="15" fill="rgb(221,13,13)" fg:x="353" fg:w="2"/><text x="28.1111%" y="223.50"></text></g><g><title>asn1_item_embed_d2i (2 samples, 0.16%)</title><rect x="27.8611%" y="197" width="0.1579%" height="15" fill="rgb(238,131,9)" fg:x="353" fg:w="2"/><text x="28.1111%" y="207.50"></text></g><g><title>asn1_template_ex_d2i (2 samples, 0.16%)</title><rect x="27.8611%" y="181" width="0.1579%" height="15" fill="rgb(211,50,8)" fg:x="353" fg:w="2"/><text x="28.1111%" y="191.50"></text></g><g><title>asn1_template_noexp_d2i (2 samples, 0.16%)</title><rect x="27.8611%" y="165" width="0.1579%" height="15" fill="rgb(245,182,24)" fg:x="353" fg:w="2"/><text x="28.1111%" y="175.50"></text></g><g><title>asn1_item_embed_d2i (2 samples, 0.16%)</title><rect x="27.8611%" y="149" width="0.1579%" height="15" fill="rgb(242,14,37)" fg:x="353" fg:w="2"/><text x="28.1111%" y="159.50"></text></g><g><title>x509_name_ex_d2i (1 samples, 0.08%)</title><rect x="27.9400%" y="133" width="0.0789%" height="15" fill="rgb(246,228,12)" fg:x="354" fg:w="1"/><text x="28.1900%" y="143.50"></text></g><g><title>x509_name_canon (1 samples, 0.08%)</title><rect x="27.9400%" y="117" width="0.0789%" height="15" fill="rgb(213,55,15)" fg:x="354" fg:w="1"/><text x="28.1900%" y="127.50"></text></g><g><title>ASN1_STRING_to_UTF8 (1 samples, 0.08%)</title><rect x="27.9400%" y="101" width="0.0789%" height="15" fill="rgb(209,9,3)" fg:x="354" fg:w="1"/><text x="28.1900%" y="111.50"></text></g><g><title>ASN1_mbstring_copy (1 samples, 0.08%)</title><rect x="27.9400%" y="85" width="0.0789%" height="15" fill="rgb(230,59,30)" fg:x="354" fg:w="1"/><text x="28.1900%" y="95.50"></text></g><g><title>ASN1_mbstring_ncopy (1 samples, 0.08%)</title><rect x="27.9400%" y="69" width="0.0789%" height="15" fill="rgb(209,121,21)" fg:x="354" fg:w="1"/><text x="28.1900%" y="79.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="27.9400%" y="53" width="0.0789%" height="15" fill="rgb(220,109,13)" fg:x="354" fg:w="1"/><text x="28.1900%" y="63.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="27.9400%" y="37" width="0.0789%" height="15" fill="rgb(232,18,1)" fg:x="354" fg:w="1"/><text x="28.1900%" y="47.50"></text></g><g><title>__libc_start_main (3 samples, 0.24%)</title><rect x="27.8611%" y="693" width="0.2368%" height="15" fill="rgb(215,41,42)" fg:x="353" fg:w="3"/><text x="28.1111%" y="703.50"></text></g><g><title>main (3 samples, 0.24%)</title><rect x="27.8611%" y="677" width="0.2368%" height="15" fill="rgb(224,123,36)" fg:x="353" fg:w="3"/><text x="28.1111%" y="687.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.24%)</title><rect x="27.8611%" y="661" width="0.2368%" height="15" fill="rgb(240,125,3)" fg:x="353" fg:w="3"/><text x="28.1111%" y="671.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.24%)</title><rect x="27.8611%" y="645" width="0.2368%" height="15" fill="rgb(205,98,50)" fg:x="353" fg:w="3"/><text x="28.1111%" y="655.50"></text></g><g><title>std::panicking::try (3 samples, 0.24%)</title><rect x="27.8611%" y="629" width="0.2368%" height="15" fill="rgb(205,185,37)" fg:x="353" fg:w="3"/><text x="28.1111%" y="639.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.24%)</title><rect x="27.8611%" y="613" width="0.2368%" height="15" fill="rgb(238,207,15)" fg:x="353" fg:w="3"/><text x="28.1111%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (3 samples, 0.24%)</title><rect x="27.8611%" y="597" width="0.2368%" height="15" fill="rgb(213,199,42)" fg:x="353" fg:w="3"/><text x="28.1111%" y="607.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.24%)</title><rect x="27.8611%" y="581" width="0.2368%" height="15" fill="rgb(235,201,11)" fg:x="353" fg:w="3"/><text x="28.1111%" y="591.50"></text></g><g><title>std::panicking::try (3 samples, 0.24%)</title><rect x="27.8611%" y="565" width="0.2368%" height="15" fill="rgb(207,46,11)" fg:x="353" fg:w="3"/><text x="28.1111%" y="575.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.24%)</title><rect x="27.8611%" y="549" width="0.2368%" height="15" fill="rgb(241,35,35)" fg:x="353" fg:w="3"/><text x="28.1111%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.24%)</title><rect x="27.8611%" y="533" width="0.2368%" height="15" fill="rgb(243,32,47)" fg:x="353" fg:w="3"/><text x="28.1111%" y="543.50"></text></g><g><title>std::rt::lang_start::{{closure}} (3 samples, 0.24%)</title><rect x="27.8611%" y="517" width="0.2368%" height="15" fill="rgb(247,202,23)" fg:x="353" fg:w="3"/><text x="28.1111%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.24%)</title><rect x="27.8611%" y="501" width="0.2368%" height="15" fill="rgb(219,102,11)" fg:x="353" fg:w="3"/><text x="28.1111%" y="511.50"></text></g><g><title>cargo::main (3 samples, 0.24%)</title><rect x="27.8611%" y="485" width="0.2368%" height="15" fill="rgb(243,110,44)" fg:x="353" fg:w="3"/><text x="28.1111%" y="495.50"></text></g><g><title>cargo::cli::main (3 samples, 0.24%)</title><rect x="27.8611%" y="469" width="0.2368%" height="15" fill="rgb(222,74,54)" fg:x="353" fg:w="3"/><text x="28.1111%" y="479.50"></text></g><g><title>clap::app::App::get_matches_safe (1 samples, 0.08%)</title><rect x="28.0189%" y="453" width="0.0789%" height="15" fill="rgb(216,99,12)" fg:x="355" fg:w="1"/><text x="28.2689%" y="463.50"></text></g><g><title>clap::app::App::get_matches_from_safe_borrow (1 samples, 0.08%)</title><rect x="28.0189%" y="437" width="0.0789%" height="15" fill="rgb(226,22,26)" fg:x="355" fg:w="1"/><text x="28.2689%" y="447.50"></text></g><g><title>clap::app::parser::Parser::propagate_globals (1 samples, 0.08%)</title><rect x="28.0189%" y="421" width="0.0789%" height="15" fill="rgb(217,163,10)" fg:x="355" fg:w="1"/><text x="28.2689%" y="431.50"></text></g><g><title>clap::app::parser::Parser::add_arg_ref (1 samples, 0.08%)</title><rect x="28.0189%" y="405" width="0.0789%" height="15" fill="rgb(213,25,53)" fg:x="355" fg:w="1"/><text x="28.2689%" y="415.50"></text></g><g><title>&lt;clap::args::arg_builder::base::Base as core::convert::From&lt;&amp;clap::args::arg::Arg&gt;&gt;::from (1 samples, 0.08%)</title><rect x="28.0189%" y="389" width="0.0789%" height="15" fill="rgb(252,105,26)" fg:x="355" fg:w="1"/><text x="28.2689%" y="399.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="28.0979%" y="693" width="0.1579%" height="15" fill="rgb(220,39,43)" fg:x="356" fg:w="2"/><text x="28.3479%" y="703.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="28.2557%" y="693" width="0.1579%" height="15" fill="rgb(229,68,48)" fg:x="358" fg:w="2"/><text x="28.5057%" y="703.50"></text></g><g><title>bn_c2i (1 samples, 0.08%)</title><rect x="28.4136%" y="693" width="0.0789%" height="15" fill="rgb(252,8,32)" fg:x="360" fg:w="1"/><text x="28.6636%" y="703.50"></text></g><g><title>cargo::commands::build::cli (1 samples, 0.08%)</title><rect x="28.4925%" y="693" width="0.0789%" height="15" fill="rgb(223,20,43)" fg:x="361" fg:w="1"/><text x="28.7425%" y="703.50"></text></g><g><title>cargo::util::command_prelude::AppExt::arg_targets_all (1 samples, 0.08%)</title><rect x="28.4925%" y="677" width="0.0789%" height="15" fill="rgb(229,81,49)" fg:x="361" fg:w="1"/><text x="28.7425%" y="687.50"></text></g><g><title>cargo::util::command_prelude::AppExt::arg_targets_lib_bin_example (1 samples, 0.08%)</title><rect x="28.4925%" y="661" width="0.0789%" height="15" fill="rgb(236,28,36)" fg:x="361" fg:w="1"/><text x="28.7425%" y="671.50"></text></g><g><title>&lt;clap::app::App as cargo::util::command_prelude::AppExt&gt;::_arg (1 samples, 0.08%)</title><rect x="28.4925%" y="645" width="0.0789%" height="15" fill="rgb(249,185,26)" fg:x="361" fg:w="1"/><text x="28.7425%" y="655.50"></text></g><g><title>clap::app::parser::Parser::add_arg (1 samples, 0.08%)</title><rect x="28.4925%" y="629" width="0.0789%" height="15" fill="rgb(249,174,33)" fg:x="361" fg:w="1"/><text x="28.7425%" y="639.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="28.4925%" y="613" width="0.0789%" height="15" fill="rgb(233,201,37)" fg:x="361" fg:w="1"/><text x="28.7425%" y="623.50"></text></g><g><title>cargo::core::compiler::job_queue::JobQueue::execute (1 samples, 0.08%)</title><rect x="28.5714%" y="693" width="0.0789%" height="15" fill="rgb(221,78,26)" fg:x="362" fg:w="1"/><text x="28.8214%" y="703.50"></text></g><g><title>crossbeam_utils::thread::scope (1 samples, 0.08%)</title><rect x="28.5714%" y="677" width="0.0789%" height="15" fill="rgb(250,127,30)" fg:x="362" fg:w="1"/><text x="28.8214%" y="687.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="28.5714%" y="661" width="0.0789%" height="15" fill="rgb(230,49,44)" fg:x="362" fg:w="1"/><text x="28.8214%" y="671.50"></text></g><g><title>cargo::core::compiler::job_queue::DrainState::drain_the_queue (1 samples, 0.08%)</title><rect x="28.5714%" y="645" width="0.0789%" height="15" fill="rgb(229,67,23)" fg:x="362" fg:w="1"/><text x="28.8214%" y="655.50"></text></g><g><title>asn1_template_ex_d2i (1 samples, 0.08%)</title><rect x="28.6504%" y="341" width="0.0789%" height="15" fill="rgb(249,83,47)" fg:x="363" fg:w="1"/><text x="28.9004%" y="351.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.08%)</title><rect x="28.6504%" y="325" width="0.0789%" height="15" fill="rgb(215,43,3)" fg:x="363" fg:w="1"/><text x="28.9004%" y="335.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.08%)</title><rect x="28.6504%" y="309" width="0.0789%" height="15" fill="rgb(238,154,13)" fg:x="363" fg:w="1"/><text x="28.9004%" y="319.50"></text></g><g><title>asn1_template_ex_d2i (1 samples, 0.08%)</title><rect x="28.6504%" y="293" width="0.0789%" height="15" fill="rgb(219,56,2)" fg:x="363" fg:w="1"/><text x="28.9004%" y="303.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.08%)</title><rect x="28.6504%" y="277" width="0.0789%" height="15" fill="rgb(233,0,4)" fg:x="363" fg:w="1"/><text x="28.9004%" y="287.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.08%)</title><rect x="28.6504%" y="261" width="0.0789%" height="15" fill="rgb(235,30,7)" fg:x="363" fg:w="1"/><text x="28.9004%" y="271.50"></text></g><g><title>asn1_d2i_ex_primitive (1 samples, 0.08%)</title><rect x="28.6504%" y="245" width="0.0789%" height="15" fill="rgb(250,79,13)" fg:x="363" fg:w="1"/><text x="28.9004%" y="255.50"></text></g><g><title>c2i_ASN1_OBJECT (1 samples, 0.08%)</title><rect x="28.6504%" y="229" width="0.0789%" height="15" fill="rgb(211,146,34)" fg:x="363" fg:w="1"/><text x="28.9004%" y="239.50"></text></g><g><title>OBJ_obj2nid (1 samples, 0.08%)</title><rect x="28.6504%" y="213" width="0.0789%" height="15" fill="rgb(228,22,38)" fg:x="363" fg:w="1"/><text x="28.9004%" y="223.50"></text></g><g><title>cargo::cli::main (2 samples, 0.16%)</title><rect x="28.6504%" y="677" width="0.1579%" height="15" fill="rgb(235,168,5)" fg:x="363" fg:w="2"/><text x="28.9004%" y="687.50"></text></g><g><title>cargo::ops::registry::needs_custom_http_transport (2 samples, 0.16%)</title><rect x="28.6504%" y="661" width="0.1579%" height="15" fill="rgb(221,155,16)" fg:x="363" fg:w="2"/><text x="28.9004%" y="671.50"></text></g><g><title>cargo::ops::registry::http_proxy (2 samples, 0.16%)</title><rect x="28.6504%" y="645" width="0.1579%" height="15" fill="rgb(215,215,53)" fg:x="363" fg:w="2"/><text x="28.9004%" y="655.50"></text></g><g><title>git2::config::Config::open_default (2 samples, 0.16%)</title><rect x="28.6504%" y="629" width="0.1579%" height="15" fill="rgb(223,4,10)" fg:x="363" fg:w="2"/><text x="28.9004%" y="639.50"></text></g><g><title>libgit2_sys::init (2 samples, 0.16%)</title><rect x="28.6504%" y="613" width="0.1579%" height="15" fill="rgb(234,103,6)" fg:x="363" fg:w="2"/><text x="28.9004%" y="623.50"></text></g><g><title>std::sync::once::Once::call_inner (2 samples, 0.16%)</title><rect x="28.6504%" y="597" width="0.1579%" height="15" fill="rgb(227,97,0)" fg:x="363" fg:w="2"/><text x="28.9004%" y="607.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (2 samples, 0.16%)</title><rect x="28.6504%" y="581" width="0.1579%" height="15" fill="rgb(234,150,53)" fg:x="363" fg:w="2"/><text x="28.9004%" y="591.50"></text></g><g><title>git_runtime_init (2 samples, 0.16%)</title><rect x="28.6504%" y="565" width="0.1579%" height="15" fill="rgb(228,201,54)" fg:x="363" fg:w="2"/><text x="28.9004%" y="575.50"></text></g><g><title>git_openssl_stream_global_init (2 samples, 0.16%)</title><rect x="28.6504%" y="549" width="0.1579%" height="15" fill="rgb(222,22,37)" fg:x="363" fg:w="2"/><text x="28.9004%" y="559.50"></text></g><g><title>X509_STORE_set_default_paths (2 samples, 0.16%)</title><rect x="28.6504%" y="533" width="0.1579%" height="15" fill="rgb(237,53,32)" fg:x="363" fg:w="2"/><text x="28.9004%" y="543.50"></text></g><g><title>by_file_ctrl (2 samples, 0.16%)</title><rect x="28.6504%" y="517" width="0.1579%" height="15" fill="rgb(233,25,53)" fg:x="363" fg:w="2"/><text x="28.9004%" y="527.50"></text></g><g><title>X509_load_cert_crl_file (2 samples, 0.16%)</title><rect x="28.6504%" y="501" width="0.1579%" height="15" fill="rgb(210,40,34)" fg:x="363" fg:w="2"/><text x="28.9004%" y="511.50"></text></g><g><title>PEM_X509_INFO_read_bio (2 samples, 0.16%)</title><rect x="28.6504%" y="485" width="0.1579%" height="15" fill="rgb(241,220,44)" fg:x="363" fg:w="2"/><text x="28.9004%" y="495.50"></text></g><g><title>ASN1_item_d2i (2 samples, 0.16%)</title><rect x="28.6504%" y="469" width="0.1579%" height="15" fill="rgb(235,28,35)" fg:x="363" fg:w="2"/><text x="28.9004%" y="479.50"></text></g><g><title>asn1_item_embed_d2i (2 samples, 0.16%)</title><rect x="28.6504%" y="453" width="0.1579%" height="15" fill="rgb(210,56,17)" fg:x="363" fg:w="2"/><text x="28.9004%" y="463.50"></text></g><g><title>asn1_template_ex_d2i (2 samples, 0.16%)</title><rect x="28.6504%" y="437" width="0.1579%" height="15" fill="rgb(224,130,29)" fg:x="363" fg:w="2"/><text x="28.9004%" y="447.50"></text></g><g><title>asn1_template_noexp_d2i (2 samples, 0.16%)</title><rect x="28.6504%" y="421" width="0.1579%" height="15" fill="rgb(235,212,8)" fg:x="363" fg:w="2"/><text x="28.9004%" y="431.50"></text></g><g><title>asn1_item_embed_d2i (2 samples, 0.16%)</title><rect x="28.6504%" y="405" width="0.1579%" height="15" fill="rgb(223,33,50)" fg:x="363" fg:w="2"/><text x="28.9004%" y="415.50"></text></g><g><title>asn1_template_ex_d2i (2 samples, 0.16%)</title><rect x="28.6504%" y="389" width="0.1579%" height="15" fill="rgb(219,149,13)" fg:x="363" fg:w="2"/><text x="28.9004%" y="399.50"></text></g><g><title>asn1_template_noexp_d2i (2 samples, 0.16%)</title><rect x="28.6504%" y="373" width="0.1579%" height="15" fill="rgb(250,156,29)" fg:x="363" fg:w="2"/><text x="28.9004%" y="383.50"></text></g><g><title>asn1_item_embed_d2i (2 samples, 0.16%)</title><rect x="28.6504%" y="357" width="0.1579%" height="15" fill="rgb(216,193,19)" fg:x="363" fg:w="2"/><text x="28.9004%" y="367.50"></text></g><g><title>x509_name_ex_d2i (1 samples, 0.08%)</title><rect x="28.7293%" y="341" width="0.0789%" height="15" fill="rgb(216,135,14)" fg:x="364" fg:w="1"/><text x="28.9793%" y="351.50"></text></g><g><title>ASN1_item_ex_d2i (1 samples, 0.08%)</title><rect x="28.7293%" y="325" width="0.0789%" height="15" fill="rgb(241,47,5)" fg:x="364" fg:w="1"/><text x="28.9793%" y="335.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.08%)</title><rect x="28.7293%" y="309" width="0.0789%" height="15" fill="rgb(233,42,35)" fg:x="364" fg:w="1"/><text x="28.9793%" y="319.50"></text></g><g><title>asn1_template_ex_d2i (1 samples, 0.08%)</title><rect x="28.7293%" y="293" width="0.0789%" height="15" fill="rgb(231,13,6)" fg:x="364" fg:w="1"/><text x="28.9793%" y="303.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.08%)</title><rect x="28.7293%" y="277" width="0.0789%" height="15" fill="rgb(207,181,40)" fg:x="364" fg:w="1"/><text x="28.9793%" y="287.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.08%)</title><rect x="28.7293%" y="261" width="0.0789%" height="15" fill="rgb(254,173,49)" fg:x="364" fg:w="1"/><text x="28.9793%" y="271.50"></text></g><g><title>asn1_template_ex_d2i (1 samples, 0.08%)</title><rect x="28.7293%" y="245" width="0.0789%" height="15" fill="rgb(221,1,38)" fg:x="364" fg:w="1"/><text x="28.9793%" y="255.50"></text></g><g><title>asn1_template_noexp_d2i (1 samples, 0.08%)</title><rect x="28.7293%" y="229" width="0.0789%" height="15" fill="rgb(206,124,46)" fg:x="364" fg:w="1"/><text x="28.9793%" y="239.50"></text></g><g><title>asn1_item_embed_d2i (1 samples, 0.08%)</title><rect x="28.7293%" y="213" width="0.0789%" height="15" fill="rgb(249,21,11)" fg:x="364" fg:w="1"/><text x="28.9793%" y="223.50"></text></g><g><title>cargo::main (3 samples, 0.24%)</title><rect x="28.6504%" y="693" width="0.2368%" height="15" fill="rgb(222,201,40)" fg:x="363" fg:w="3"/><text x="28.9004%" y="703.50"></text></g><g><title>cargo::util::config::Config::default (1 samples, 0.08%)</title><rect x="28.8082%" y="677" width="0.0789%" height="15" fill="rgb(235,61,29)" fg:x="365" fg:w="1"/><text x="29.0582%" y="687.50"></text></g><g><title>cargo::util::config::Config::new (1 samples, 0.08%)</title><rect x="28.8082%" y="661" width="0.0789%" height="15" fill="rgb(219,207,3)" fg:x="365" fg:w="1"/><text x="29.0582%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="28.8082%" y="645" width="0.0789%" height="15" fill="rgb(222,56,46)" fg:x="365" fg:w="1"/><text x="29.0582%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="28.8082%" y="629" width="0.0789%" height="15" fill="rgb(239,76,54)" fg:x="365" fg:w="1"/><text x="29.0582%" y="639.50"></text></g><g><title>cargo::ops::cargo_compile::create_bcx (1 samples, 0.08%)</title><rect x="28.8871%" y="693" width="0.0789%" height="15" fill="rgb(231,124,27)" fg:x="366" fg:w="1"/><text x="29.1371%" y="703.50"></text></g><g><title>cargo::core::profiles::Profiles::new (1 samples, 0.08%)</title><rect x="28.8871%" y="677" width="0.0789%" height="15" fill="rgb(249,195,6)" fg:x="366" fg:w="1"/><text x="29.1371%" y="687.50"></text></g><g><title>[unknown] (326 samples, 25.73%)</title><rect x="3.3149%" y="709" width="25.7301%" height="15" fill="rgb(237,174,47)" fg:x="42" fg:w="326"/><text x="3.5649%" y="719.50">[unknown]</text></g><g><title>cargo::ops::resolve::resolve_ws_with_opts (1 samples, 0.08%)</title><rect x="28.9661%" y="693" width="0.0789%" height="15" fill="rgb(206,201,31)" fg:x="367" fg:w="1"/><text x="29.2161%" y="703.50"></text></g><g><title>cargo::ops::resolve::resolve_with_registry (1 samples, 0.08%)</title><rect x="28.9661%" y="677" width="0.0789%" height="15" fill="rgb(231,57,52)" fg:x="367" fg:w="1"/><text x="29.2161%" y="687.50"></text></g><g><title>cargo::ops::lockfile::load_pkg_lockfile (1 samples, 0.08%)</title><rect x="28.9661%" y="661" width="0.0789%" height="15" fill="rgb(248,177,22)" fg:x="367" fg:w="1"/><text x="29.2161%" y="671.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="28.9661%" y="645" width="0.0789%" height="15" fill="rgb(215,211,37)" fg:x="367" fg:w="1"/><text x="29.2161%" y="655.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="28.9661%" y="629" width="0.0789%" height="15" fill="rgb(241,128,51)" fg:x="367" fg:w="1"/><text x="29.2161%" y="639.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="28.9661%" y="613" width="0.0789%" height="15" fill="rgb(227,165,31)" fg:x="367" fg:w="1"/><text x="29.2161%" y="623.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="28.9661%" y="597" width="0.0789%" height="15" fill="rgb(228,167,24)" fg:x="367" fg:w="1"/><text x="29.2161%" y="607.50"></text></g><g><title>&lt;toml::value::Value as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="28.9661%" y="581" width="0.0789%" height="15" fill="rgb(228,143,12)" fg:x="367" fg:w="1"/><text x="29.2161%" y="591.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="28.9661%" y="565" width="0.0789%" height="15" fill="rgb(249,149,8)" fg:x="367" fg:w="1"/><text x="29.2161%" y="575.50"></text></g><g><title>&lt;cargo::core::resolver::encode::EncodablePackageId as serde::de::Deserialize&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.9661%" y="549" width="0.0789%" height="15" fill="rgb(243,35,44)" fg:x="367" fg:w="1"/><text x="29.2161%" y="559.50"></text></g><g><title>&lt;cargo::core::resolver::encode::EncodablePackageId as core::str::traits::FromStr&gt;::from_str (1 samples, 0.08%)</title><rect x="28.9661%" y="533" width="0.0789%" height="15" fill="rgb(246,89,9)" fg:x="367" fg:w="1"/><text x="29.2161%" y="543.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.08%)</title><rect x="29.5975%" y="613" width="0.0789%" height="15" fill="rgb(233,213,13)" fg:x="375" fg:w="1"/><text x="29.8475%" y="623.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.08%)</title><rect x="29.5975%" y="597" width="0.0789%" height="15" fill="rgb(233,141,41)" fg:x="375" fg:w="1"/><text x="29.8475%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="29.5975%" y="581" width="0.0789%" height="15" fill="rgb(239,167,4)" fg:x="375" fg:w="1"/><text x="29.8475%" y="591.50"></text></g><g><title>tcache_init.part.0 (1 samples, 0.08%)</title><rect x="29.5975%" y="565" width="0.0789%" height="15" fill="rgb(209,217,16)" fg:x="375" fg:w="1"/><text x="29.8475%" y="575.50"></text></g><g><title>arena_get2.part.0 (1 samples, 0.08%)</title><rect x="29.5975%" y="549" width="0.0789%" height="15" fill="rgb(219,88,35)" fg:x="375" fg:w="1"/><text x="29.8475%" y="559.50"></text></g><g><title>new_heap (1 samples, 0.08%)</title><rect x="29.5975%" y="533" width="0.0789%" height="15" fill="rgb(220,193,23)" fg:x="375" fg:w="1"/><text x="29.8475%" y="543.50"></text></g><g><title>__GI_munmap (1 samples, 0.08%)</title><rect x="29.5975%" y="517" width="0.0789%" height="15" fill="rgb(230,90,52)" fg:x="375" fg:w="1"/><text x="29.8475%" y="527.50"></text></g><g><title>__GI___poll (6 samples, 0.47%)</title><rect x="29.6764%" y="485" width="0.4736%" height="15" fill="rgb(252,106,19)" fg:x="376" fg:w="6"/><text x="29.9264%" y="495.50"></text></g><g><title>cargo_util::read2::imp::read2 (7 samples, 0.55%)</title><rect x="29.6764%" y="501" width="0.5525%" height="15" fill="rgb(206,74,20)" fg:x="376" fg:w="7"/><text x="29.9264%" y="511.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.08%)</title><rect x="30.1500%" y="485" width="0.0789%" height="15" fill="rgb(230,138,44)" fg:x="382" fg:w="1"/><text x="30.4000%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.1500%" y="469" width="0.0789%" height="15" fill="rgb(235,182,43)" fg:x="382" fg:w="1"/><text x="30.4000%" y="479.50"></text></g><g><title>std::process::Child::wait (1 samples, 0.08%)</title><rect x="30.2289%" y="501" width="0.0789%" height="15" fill="rgb(242,16,51)" fg:x="383" fg:w="1"/><text x="30.4789%" y="511.50"></text></g><g><title>std::sys::unix::process::process_inner::Process::wait (1 samples, 0.08%)</title><rect x="30.2289%" y="485" width="0.0789%" height="15" fill="rgb(248,9,4)" fg:x="383" fg:w="1"/><text x="30.4789%" y="495.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.08%)</title><rect x="30.2289%" y="469" width="0.0789%" height="15" fill="rgb(210,31,22)" fg:x="383" fg:w="1"/><text x="30.4789%" y="479.50"></text></g><g><title>std::sys::unix::process::process_inner::Process::wait::{{closure}} (1 samples, 0.08%)</title><rect x="30.2289%" y="453" width="0.0789%" height="15" fill="rgb(239,54,39)" fg:x="383" fg:w="1"/><text x="30.4789%" y="463.50"></text></g><g><title>__wait4 (1 samples, 0.08%)</title><rect x="30.2289%" y="437" width="0.0789%" height="15" fill="rgb(230,99,41)" fg:x="383" fg:w="1"/><text x="30.4789%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::process::process_common::ChildPipes&gt; (1 samples, 0.08%)</title><rect x="30.3078%" y="469" width="0.0789%" height="15" fill="rgb(253,106,12)" fg:x="384" fg:w="1"/><text x="30.5578%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::process::process_common::ChildStdio&gt; (1 samples, 0.08%)</title><rect x="30.3078%" y="453" width="0.0789%" height="15" fill="rgb(213,46,41)" fg:x="384" fg:w="1"/><text x="30.5578%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.08%)</title><rect x="30.3078%" y="437" width="0.0789%" height="15" fill="rgb(215,133,35)" fg:x="384" fg:w="1"/><text x="30.5578%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.08%)</title><rect x="30.3078%" y="421" width="0.0789%" height="15" fill="rgb(213,28,5)" fg:x="384" fg:w="1"/><text x="30.5578%" y="431.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="30.3078%" y="405" width="0.0789%" height="15" fill="rgb(215,77,49)" fg:x="384" fg:w="1"/><text x="30.5578%" y="415.50"></text></g><g><title>__libc_close (1 samples, 0.08%)</title><rect x="30.3078%" y="389" width="0.0789%" height="15" fill="rgb(248,100,22)" fg:x="384" fg:w="1"/><text x="30.5578%" y="399.50"></text></g><g><title>std::sys::unix::pipe::AnonPipe::read (6 samples, 0.47%)</title><rect x="30.3867%" y="469" width="0.4736%" height="15" fill="rgb(208,67,9)" fg:x="385" fg:w="6"/><text x="30.6367%" y="479.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (6 samples, 0.47%)</title><rect x="30.3867%" y="453" width="0.4736%" height="15" fill="rgb(219,133,21)" fg:x="385" fg:w="6"/><text x="30.6367%" y="463.50"></text></g><g><title>__libc_read (6 samples, 0.47%)</title><rect x="30.3867%" y="437" width="0.4736%" height="15" fill="rgb(246,46,29)" fg:x="385" fg:w="6"/><text x="30.6367%" y="447.50"></text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::do_exec (1 samples, 0.08%)</title><rect x="30.8603%" y="469" width="0.0789%" height="15" fill="rgb(246,185,52)" fg:x="391" fg:w="1"/><text x="31.1103%" y="479.50"></text></g><g><title>__execvpe_common (1 samples, 0.08%)</title><rect x="30.8603%" y="453" width="0.0789%" height="15" fill="rgb(252,136,11)" fg:x="391" fg:w="1"/><text x="31.1103%" y="463.50"></text></g><g><title>__GI_execve (1 samples, 0.08%)</title><rect x="30.8603%" y="437" width="0.0789%" height="15" fill="rgb(219,138,53)" fg:x="391" fg:w="1"/><text x="31.1103%" y="447.50"></text></g><g><title>&lt;cargo::core::compiler::DefaultExecutor as cargo::core::compiler::Executor&gt;::exec (23 samples, 1.82%)</title><rect x="29.6764%" y="533" width="1.8153%" height="15" fill="rgb(211,51,23)" fg:x="376" fg:w="23"/><text x="29.9264%" y="543.50">&lt;..</text></g><g><title>cargo_util::process_builder::ProcessBuilder::exec_with_streaming (23 samples, 1.82%)</title><rect x="29.6764%" y="517" width="1.8153%" height="15" fill="rgb(247,221,28)" fg:x="376" fg:w="23"/><text x="29.9264%" y="527.50">c..</text></g><g><title>std::process::Command::spawn (15 samples, 1.18%)</title><rect x="30.3078%" y="501" width="1.1839%" height="15" fill="rgb(251,222,45)" fg:x="384" fg:w="15"/><text x="30.5578%" y="511.50"></text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::spawn (15 samples, 1.18%)</title><rect x="30.3078%" y="485" width="1.1839%" height="15" fill="rgb(217,162,53)" fg:x="384" fg:w="15"/><text x="30.5578%" y="495.50"></text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::do_fork (7 samples, 0.55%)</title><rect x="30.9392%" y="469" width="0.5525%" height="15" fill="rgb(229,93,14)" fg:x="392" fg:w="7"/><text x="31.1892%" y="479.50"></text></g><g><title>__GI___fork (7 samples, 0.55%)</title><rect x="30.9392%" y="453" width="0.5525%" height="15" fill="rgb(209,67,49)" fg:x="392" fg:w="7"/><text x="31.1892%" y="463.50"></text></g><g><title>__GI___clone (32 samples, 2.53%)</title><rect x="29.0450%" y="709" width="2.5257%" height="15" fill="rgb(213,87,29)" fg:x="368" fg:w="32"/><text x="29.2950%" y="719.50">__..</text></g><g><title>start_thread (26 samples, 2.05%)</title><rect x="29.5185%" y="693" width="2.0521%" height="15" fill="rgb(205,151,52)" fg:x="374" fg:w="26"/><text x="29.7685%" y="703.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (25 samples, 1.97%)</title><rect x="29.5975%" y="677" width="1.9732%" height="15" fill="rgb(253,215,39)" fg:x="375" fg:w="25"/><text x="29.8475%" y="687.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 1.97%)</title><rect x="29.5975%" y="661" width="1.9732%" height="15" fill="rgb(221,220,41)" fg:x="375" fg:w="25"/><text x="29.8475%" y="671.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 1.97%)</title><rect x="29.5975%" y="645" width="1.9732%" height="15" fill="rgb(218,133,21)" fg:x="375" fg:w="25"/><text x="29.8475%" y="655.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (25 samples, 1.97%)</title><rect x="29.5975%" y="629" width="1.9732%" height="15" fill="rgb(221,193,43)" fg:x="375" fg:w="25"/><text x="29.8475%" y="639.50">c..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (24 samples, 1.89%)</title><rect x="29.6764%" y="613" width="1.8942%" height="15" fill="rgb(240,128,52)" fg:x="376" fg:w="24"/><text x="29.9264%" y="623.50">s..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (24 samples, 1.89%)</title><rect x="29.6764%" y="597" width="1.8942%" height="15" fill="rgb(253,114,12)" fg:x="376" fg:w="24"/><text x="29.9264%" y="607.50">c..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (24 samples, 1.89%)</title><rect x="29.6764%" y="581" width="1.8942%" height="15" fill="rgb(215,223,47)" fg:x="376" fg:w="24"/><text x="29.9264%" y="591.50">c..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (24 samples, 1.89%)</title><rect x="29.6764%" y="565" width="1.8942%" height="15" fill="rgb(248,225,23)" fg:x="376" fg:w="24"/><text x="29.9264%" y="575.50">c..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (24 samples, 1.89%)</title><rect x="29.6764%" y="549" width="1.8942%" height="15" fill="rgb(250,108,0)" fg:x="376" fg:w="24"/><text x="29.9264%" y="559.50">c..</text></g><g><title>cargo::core::compiler::fingerprint::translate_dep_info (1 samples, 0.08%)</title><rect x="31.4917%" y="533" width="0.0789%" height="15" fill="rgb(228,208,7)" fg:x="399" fg:w="1"/><text x="31.7417%" y="543.50"></text></g><g><title>std::fs::write::inner (1 samples, 0.08%)</title><rect x="31.4917%" y="517" width="0.0789%" height="15" fill="rgb(244,45,10)" fg:x="399" fg:w="1"/><text x="31.7417%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1 samples, 0.08%)</title><rect x="31.4917%" y="501" width="0.0789%" height="15" fill="rgb(207,125,25)" fg:x="399" fg:w="1"/><text x="31.7417%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (1 samples, 0.08%)</title><rect x="31.4917%" y="485" width="0.0789%" height="15" fill="rgb(210,195,18)" fg:x="399" fg:w="1"/><text x="31.7417%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.08%)</title><rect x="31.4917%" y="469" width="0.0789%" height="15" fill="rgb(249,80,12)" fg:x="399" fg:w="1"/><text x="31.7417%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.08%)</title><rect x="31.4917%" y="453" width="0.0789%" height="15" fill="rgb(221,65,9)" fg:x="399" fg:w="1"/><text x="31.7417%" y="463.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="31.4917%" y="437" width="0.0789%" height="15" fill="rgb(235,49,36)" fg:x="399" fg:w="1"/><text x="31.7417%" y="447.50"></text></g><g><title>__libc_close (1 samples, 0.08%)</title><rect x="31.4917%" y="421" width="0.0789%" height="15" fill="rgb(225,32,20)" fg:x="399" fg:w="1"/><text x="31.7417%" y="431.50"></text></g><g><title>ERR_load_ENGINE_strings (1 samples, 0.08%)</title><rect x="31.7285%" y="309" width="0.0789%" height="15" fill="rgb(215,141,46)" fg:x="402" fg:w="1"/><text x="31.9785%" y="319.50"></text></g><g><title>ERR_load_strings_const (1 samples, 0.08%)</title><rect x="31.7285%" y="293" width="0.0789%" height="15" fill="rgb(250,160,47)" fg:x="402" fg:w="1"/><text x="31.9785%" y="303.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.08%)</title><rect x="31.7285%" y="277" width="0.0789%" height="15" fill="rgb(216,222,40)" fg:x="402" fg:w="1"/><text x="31.9785%" y="287.50"></text></g><g><title>ERR_load_ERR_strings (1 samples, 0.08%)</title><rect x="31.8074%" y="309" width="0.0789%" height="15" fill="rgb(234,217,39)" fg:x="403" fg:w="1"/><text x="32.0574%" y="319.50"></text></g><g><title>__libc_csu_init (3 samples, 0.24%)</title><rect x="31.7285%" y="677" width="0.2368%" height="15" fill="rgb(207,178,40)" fg:x="402" fg:w="3"/><text x="31.9785%" y="687.50"></text></g><g><title>curl::init::init_inner (3 samples, 0.24%)</title><rect x="31.7285%" y="661" width="0.2368%" height="15" fill="rgb(221,136,13)" fg:x="402" fg:w="3"/><text x="31.9785%" y="671.50"></text></g><g><title>std::sync::once::Once::call_inner (3 samples, 0.24%)</title><rect x="31.7285%" y="645" width="0.2368%" height="15" fill="rgb(249,199,10)" fg:x="402" fg:w="3"/><text x="31.9785%" y="655.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (3 samples, 0.24%)</title><rect x="31.7285%" y="629" width="0.2368%" height="15" fill="rgb(249,222,13)" fg:x="402" fg:w="3"/><text x="31.9785%" y="639.50"></text></g><g><title>curl_global_init (3 samples, 0.24%)</title><rect x="31.7285%" y="613" width="0.2368%" height="15" fill="rgb(244,185,38)" fg:x="402" fg:w="3"/><text x="31.9785%" y="623.50"></text></g><g><title>ossl_init (3 samples, 0.24%)</title><rect x="31.7285%" y="597" width="0.2368%" height="15" fill="rgb(236,202,9)" fg:x="402" fg:w="3"/><text x="31.9785%" y="607.50"></text></g><g><title>OPENSSL_init_ssl (3 samples, 0.24%)</title><rect x="31.7285%" y="581" width="0.2368%" height="15" fill="rgb(250,229,37)" fg:x="402" fg:w="3"/><text x="31.9785%" y="591.50"></text></g><g><title>OPENSSL_init_crypto (3 samples, 0.24%)</title><rect x="31.7285%" y="565" width="0.2368%" height="15" fill="rgb(206,174,23)" fg:x="402" fg:w="3"/><text x="31.9785%" y="575.50"></text></g><g><title>CRYPTO_THREAD_run_once (3 samples, 0.24%)</title><rect x="31.7285%" y="549" width="0.2368%" height="15" fill="rgb(211,33,43)" fg:x="402" fg:w="3"/><text x="31.9785%" y="559.50"></text></g><g><title>__pthread_once_slow (3 samples, 0.24%)</title><rect x="31.7285%" y="533" width="0.2368%" height="15" fill="rgb(245,58,50)" fg:x="402" fg:w="3"/><text x="31.9785%" y="543.50"></text></g><g><title>ossl_init_config_ossl_ (3 samples, 0.24%)</title><rect x="31.7285%" y="517" width="0.2368%" height="15" fill="rgb(244,68,36)" fg:x="402" fg:w="3"/><text x="31.9785%" y="527.50"></text></g><g><title>openssl_config_int (3 samples, 0.24%)</title><rect x="31.7285%" y="501" width="0.2368%" height="15" fill="rgb(232,229,15)" fg:x="402" fg:w="3"/><text x="31.9785%" y="511.50"></text></g><g><title>OPENSSL_init_crypto (3 samples, 0.24%)</title><rect x="31.7285%" y="485" width="0.2368%" height="15" fill="rgb(254,30,23)" fg:x="402" fg:w="3"/><text x="31.9785%" y="495.50"></text></g><g><title>CRYPTO_THREAD_run_once (3 samples, 0.24%)</title><rect x="31.7285%" y="469" width="0.2368%" height="15" fill="rgb(235,160,14)" fg:x="402" fg:w="3"/><text x="31.9785%" y="479.50"></text></g><g><title>__pthread_once_slow (3 samples, 0.24%)</title><rect x="31.7285%" y="453" width="0.2368%" height="15" fill="rgb(212,155,44)" fg:x="402" fg:w="3"/><text x="31.9785%" y="463.50"></text></g><g><title>ossl_init_engine_dynamic_ossl_ (3 samples, 0.24%)</title><rect x="31.7285%" y="437" width="0.2368%" height="15" fill="rgb(226,2,50)" fg:x="402" fg:w="3"/><text x="31.9785%" y="447.50"></text></g><g><title>ERR_clear_error (3 samples, 0.24%)</title><rect x="31.7285%" y="421" width="0.2368%" height="15" fill="rgb(234,177,6)" fg:x="402" fg:w="3"/><text x="31.9785%" y="431.50"></text></g><g><title>ERR_get_state (3 samples, 0.24%)</title><rect x="31.7285%" y="405" width="0.2368%" height="15" fill="rgb(217,24,9)" fg:x="402" fg:w="3"/><text x="31.9785%" y="415.50"></text></g><g><title>OPENSSL_init_crypto (3 samples, 0.24%)</title><rect x="31.7285%" y="389" width="0.2368%" height="15" fill="rgb(220,13,46)" fg:x="402" fg:w="3"/><text x="31.9785%" y="399.50"></text></g><g><title>CRYPTO_THREAD_run_once (3 samples, 0.24%)</title><rect x="31.7285%" y="373" width="0.2368%" height="15" fill="rgb(239,221,27)" fg:x="402" fg:w="3"/><text x="31.9785%" y="383.50"></text></g><g><title>__pthread_once_slow (3 samples, 0.24%)</title><rect x="31.7285%" y="357" width="0.2368%" height="15" fill="rgb(222,198,25)" fg:x="402" fg:w="3"/><text x="31.9785%" y="367.50"></text></g><g><title>ossl_init_load_crypto_strings_ossl_ (3 samples, 0.24%)</title><rect x="31.7285%" y="341" width="0.2368%" height="15" fill="rgb(211,99,13)" fg:x="402" fg:w="3"/><text x="31.9785%" y="351.50"></text></g><g><title>err_load_crypto_strings_int (3 samples, 0.24%)</title><rect x="31.7285%" y="325" width="0.2368%" height="15" fill="rgb(232,111,31)" fg:x="402" fg:w="3"/><text x="31.9785%" y="335.50"></text></g><g><title>ERR_load_OSSL_STORE_strings (1 samples, 0.08%)</title><rect x="31.8863%" y="309" width="0.0789%" height="15" fill="rgb(245,82,37)" fg:x="404" fg:w="1"/><text x="32.1363%" y="319.50"></text></g><g><title>ERR_load_strings_const (1 samples, 0.08%)</title><rect x="31.8863%" y="293" width="0.0789%" height="15" fill="rgb(227,149,46)" fg:x="404" fg:w="1"/><text x="32.1363%" y="303.50"></text></g><g><title>ERR_load_ERR_strings (1 samples, 0.08%)</title><rect x="31.8863%" y="277" width="0.0789%" height="15" fill="rgb(218,36,50)" fg:x="404" fg:w="1"/><text x="32.1363%" y="287.50"></text></g><g><title>OPENSSL_LH_insert (1 samples, 0.08%)</title><rect x="31.8863%" y="261" width="0.0789%" height="15" fill="rgb(226,80,48)" fg:x="404" fg:w="1"/><text x="32.1363%" y="271.50"></text></g><g><title>git_config_open_default (1 samples, 0.08%)</title><rect x="31.9653%" y="405" width="0.0789%" height="15" fill="rgb(238,224,15)" fg:x="405" fg:w="1"/><text x="32.2153%" y="415.50"></text></g><g><title>git_sysdir_find_in_dirlist (1 samples, 0.08%)</title><rect x="31.9653%" y="389" width="0.0789%" height="15" fill="rgb(241,136,10)" fg:x="405" fg:w="1"/><text x="32.2153%" y="399.50"></text></g><g><title>git_path_exists (1 samples, 0.08%)</title><rect x="31.9653%" y="373" width="0.0789%" height="15" fill="rgb(208,32,45)" fg:x="405" fg:w="1"/><text x="32.2153%" y="383.50"></text></g><g><title>__access (1 samples, 0.08%)</title><rect x="31.9653%" y="357" width="0.0789%" height="15" fill="rgb(207,135,9)" fg:x="405" fg:w="1"/><text x="32.2153%" y="367.50"></text></g><g><title>pubkey_cb (1 samples, 0.08%)</title><rect x="32.0442%" y="133" width="0.0789%" height="15" fill="rgb(206,86,44)" fg:x="406" fg:w="1"/><text x="32.2942%" y="143.50"></text></g><g><title>x509_pubkey_decode (1 samples, 0.08%)</title><rect x="32.0442%" y="117" width="0.0789%" height="15" fill="rgb(245,177,15)" fg:x="406" fg:w="1"/><text x="32.2942%" y="127.50"></text></g><g><title>eckey_pub_decode (1 samples, 0.08%)</title><rect x="32.0442%" y="101" width="0.0789%" height="15" fill="rgb(206,64,50)" fg:x="406" fg:w="1"/><text x="32.2942%" y="111.50"></text></g><g><title>eckey_type2param (1 samples, 0.08%)</title><rect x="32.0442%" y="85" width="0.0789%" height="15" fill="rgb(234,36,40)" fg:x="406" fg:w="1"/><text x="32.2942%" y="95.50"></text></g><g><title>EC_GROUP_new_by_curve_name (1 samples, 0.08%)</title><rect x="32.0442%" y="69" width="0.0789%" height="15" fill="rgb(213,64,8)" fg:x="406" fg:w="1"/><text x="32.2942%" y="79.50"></text></g><g><title>EC_GROUP_new_curve_GFp (1 samples, 0.08%)</title><rect x="32.0442%" y="53" width="0.0789%" height="15" fill="rgb(210,75,36)" fg:x="406" fg:w="1"/><text x="32.2942%" y="63.50"></text></g><g><title>EC_GROUP_set_curve (1 samples, 0.08%)</title><rect x="32.0442%" y="37" width="0.0789%" height="15" fill="rgb(229,88,21)" fg:x="406" fg:w="1"/><text x="32.2942%" y="47.50"></text></g><g><title>BUF_MEM_grow (1 samples, 0.08%)</title><rect x="32.1231%" y="117" width="0.0789%" height="15" fill="rgb(252,204,47)" fg:x="407" fg:w="1"/><text x="32.3731%" y="127.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="32.1231%" y="101" width="0.0789%" height="15" fill="rgb(208,77,27)" fg:x="407" fg:w="1"/><text x="32.3731%" y="111.50"></text></g><g><title>ASN1_item_d2i (3 samples, 0.24%)</title><rect x="32.0442%" y="261" width="0.2368%" height="15" fill="rgb(221,76,26)" fg:x="406" fg:w="3"/><text x="32.2942%" y="271.50"></text></g><g><title>asn1_item_embed_d2i (3 samples, 0.24%)</title><rect x="32.0442%" y="245" width="0.2368%" height="15" fill="rgb(225,139,18)" fg:x="406" fg:w="3"/><text x="32.2942%" y="255.50"></text></g><g><title>asn1_template_ex_d2i (3 samples, 0.24%)</title><rect x="32.0442%" y="229" width="0.2368%" height="15" fill="rgb(230,137,11)" fg:x="406" fg:w="3"/><text x="32.2942%" y="239.50"></text></g><g><title>asn1_template_noexp_d2i (3 samples, 0.24%)</title><rect x="32.0442%" y="213" width="0.2368%" height="15" fill="rgb(212,28,1)" fg:x="406" fg:w="3"/><text x="32.2942%" y="223.50"></text></g><g><title>asn1_item_embed_d2i (3 samples, 0.24%)</title><rect x="32.0442%" y="197" width="0.2368%" height="15" fill="rgb(248,164,17)" fg:x="406" fg:w="3"/><text x="32.2942%" y="207.50"></text></g><g><title>asn1_template_ex_d2i (3 samples, 0.24%)</title><rect x="32.0442%" y="181" width="0.2368%" height="15" fill="rgb(222,171,42)" fg:x="406" fg:w="3"/><text x="32.2942%" y="191.50"></text></g><g><title>asn1_template_noexp_d2i (3 samples, 0.24%)</title><rect x="32.0442%" y="165" width="0.2368%" height="15" fill="rgb(243,84,45)" fg:x="406" fg:w="3"/><text x="32.2942%" y="175.50"></text></g><g><title>asn1_item_embed_d2i (3 samples, 0.24%)</title><rect x="32.0442%" y="149" width="0.2368%" height="15" fill="rgb(252,49,23)" fg:x="406" fg:w="3"/><text x="32.2942%" y="159.50"></text></g><g><title>x509_name_ex_d2i (2 samples, 0.16%)</title><rect x="32.1231%" y="133" width="0.1579%" height="15" fill="rgb(215,19,7)" fg:x="407" fg:w="2"/><text x="32.3731%" y="143.50"></text></g><g><title>x509_name_ex_new (1 samples, 0.08%)</title><rect x="32.2021%" y="117" width="0.0789%" height="15" fill="rgb(238,81,41)" fg:x="408" fg:w="1"/><text x="32.4521%" y="127.50"></text></g><g><title>OPENSSL_sk_new_null (1 samples, 0.08%)</title><rect x="32.2021%" y="101" width="0.0789%" height="15" fill="rgb(210,199,37)" fg:x="408" fg:w="1"/><text x="32.4521%" y="111.50"></text></g><g><title>CRYPTO_zalloc (1 samples, 0.08%)</title><rect x="32.2021%" y="85" width="0.0789%" height="15" fill="rgb(244,192,49)" fg:x="408" fg:w="1"/><text x="32.4521%" y="95.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="32.2021%" y="69" width="0.0789%" height="15" fill="rgb(226,211,11)" fg:x="408" fg:w="1"/><text x="32.4521%" y="79.50"></text></g><g><title>git_openssl_stream_global_init (4 samples, 0.32%)</title><rect x="32.0442%" y="341" width="0.3157%" height="15" fill="rgb(236,162,54)" fg:x="406" fg:w="4"/><text x="32.2942%" y="351.50"></text></g><g><title>X509_STORE_set_default_paths (4 samples, 0.32%)</title><rect x="32.0442%" y="325" width="0.3157%" height="15" fill="rgb(220,229,9)" fg:x="406" fg:w="4"/><text x="32.2942%" y="335.50"></text></g><g><title>by_file_ctrl (4 samples, 0.32%)</title><rect x="32.0442%" y="309" width="0.3157%" height="15" fill="rgb(250,87,22)" fg:x="406" fg:w="4"/><text x="32.2942%" y="319.50"></text></g><g><title>X509_load_cert_crl_file (4 samples, 0.32%)</title><rect x="32.0442%" y="293" width="0.3157%" height="15" fill="rgb(239,43,17)" fg:x="406" fg:w="4"/><text x="32.2942%" y="303.50"></text></g><g><title>PEM_X509_INFO_read_bio (4 samples, 0.32%)</title><rect x="32.0442%" y="277" width="0.3157%" height="15" fill="rgb(231,177,25)" fg:x="406" fg:w="4"/><text x="32.2942%" y="287.50"></text></g><g><title>PEM_read_bio_ex (1 samples, 0.08%)</title><rect x="32.2810%" y="261" width="0.0789%" height="15" fill="rgb(219,179,1)" fg:x="409" fg:w="1"/><text x="32.5310%" y="271.50"></text></g><g><title>BIO_gets (1 samples, 0.08%)</title><rect x="32.2810%" y="245" width="0.0789%" height="15" fill="rgb(238,219,53)" fg:x="409" fg:w="1"/><text x="32.5310%" y="255.50"></text></g><g><title>file_gets (1 samples, 0.08%)</title><rect x="32.2810%" y="229" width="0.0789%" height="15" fill="rgb(232,167,36)" fg:x="409" fg:w="1"/><text x="32.5310%" y="239.50"></text></g><g><title>fgets (1 samples, 0.08%)</title><rect x="32.2810%" y="213" width="0.0789%" height="15" fill="rgb(244,19,51)" fg:x="409" fg:w="1"/><text x="32.5310%" y="223.50"></text></g><g><title>__GI__IO_getline_info (1 samples, 0.08%)</title><rect x="32.2810%" y="197" width="0.0789%" height="15" fill="rgb(224,6,22)" fg:x="409" fg:w="1"/><text x="32.5310%" y="207.50"></text></g><g><title>__GI__IO_default_uflow (1 samples, 0.08%)</title><rect x="32.2810%" y="181" width="0.0789%" height="15" fill="rgb(224,145,5)" fg:x="409" fg:w="1"/><text x="32.5310%" y="191.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.08%)</title><rect x="32.2810%" y="165" width="0.0789%" height="15" fill="rgb(234,130,49)" fg:x="409" fg:w="1"/><text x="32.5310%" y="175.50"></text></g><g><title>__GI___read (1 samples, 0.08%)</title><rect x="32.2810%" y="149" width="0.0789%" height="15" fill="rgb(254,6,2)" fg:x="409" fg:w="1"/><text x="32.5310%" y="159.50"></text></g><g><title>cargo::ops::registry::needs_custom_http_transport (6 samples, 0.47%)</title><rect x="31.9653%" y="453" width="0.4736%" height="15" fill="rgb(208,96,46)" fg:x="405" fg:w="6"/><text x="32.2153%" y="463.50"></text></g><g><title>cargo::ops::registry::http_proxy (6 samples, 0.47%)</title><rect x="31.9653%" y="437" width="0.4736%" height="15" fill="rgb(239,3,39)" fg:x="405" fg:w="6"/><text x="32.2153%" y="447.50"></text></g><g><title>git2::config::Config::open_default (6 samples, 0.47%)</title><rect x="31.9653%" y="421" width="0.4736%" height="15" fill="rgb(233,210,1)" fg:x="405" fg:w="6"/><text x="32.2153%" y="431.50"></text></g><g><title>libgit2_sys::init (5 samples, 0.39%)</title><rect x="32.0442%" y="405" width="0.3946%" height="15" fill="rgb(244,137,37)" fg:x="406" fg:w="5"/><text x="32.2942%" y="415.50"></text></g><g><title>std::sync::once::Once::call_inner (5 samples, 0.39%)</title><rect x="32.0442%" y="389" width="0.3946%" height="15" fill="rgb(240,136,2)" fg:x="406" fg:w="5"/><text x="32.2942%" y="399.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (5 samples, 0.39%)</title><rect x="32.0442%" y="373" width="0.3946%" height="15" fill="rgb(239,18,37)" fg:x="406" fg:w="5"/><text x="32.2942%" y="383.50"></text></g><g><title>git_runtime_init (5 samples, 0.39%)</title><rect x="32.0442%" y="357" width="0.3946%" height="15" fill="rgb(218,185,22)" fg:x="406" fg:w="5"/><text x="32.2942%" y="367.50"></text></g><g><title>git_threadstate_global_init (1 samples, 0.08%)</title><rect x="32.3599%" y="341" width="0.0789%" height="15" fill="rgb(225,218,4)" fg:x="410" fg:w="1"/><text x="32.6099%" y="351.50"></text></g><g><title>__libc_start_main (10 samples, 0.79%)</title><rect x="31.7285%" y="693" width="0.7893%" height="15" fill="rgb(230,182,32)" fg:x="402" fg:w="10"/><text x="31.9785%" y="703.50"></text></g><g><title>main (7 samples, 0.55%)</title><rect x="31.9653%" y="677" width="0.5525%" height="15" fill="rgb(242,56,43)" fg:x="405" fg:w="7"/><text x="32.2153%" y="687.50"></text></g><g><title>std::rt::lang_start_internal (7 samples, 0.55%)</title><rect x="31.9653%" y="661" width="0.5525%" height="15" fill="rgb(233,99,24)" fg:x="405" fg:w="7"/><text x="32.2153%" y="671.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.55%)</title><rect x="31.9653%" y="645" width="0.5525%" height="15" fill="rgb(234,209,42)" fg:x="405" fg:w="7"/><text x="32.2153%" y="655.50"></text></g><g><title>std::panicking::try (7 samples, 0.55%)</title><rect x="31.9653%" y="629" width="0.5525%" height="15" fill="rgb(227,7,12)" fg:x="405" fg:w="7"/><text x="32.2153%" y="639.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.55%)</title><rect x="31.9653%" y="613" width="0.5525%" height="15" fill="rgb(245,203,43)" fg:x="405" fg:w="7"/><text x="32.2153%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (7 samples, 0.55%)</title><rect x="31.9653%" y="597" width="0.5525%" height="15" fill="rgb(238,205,33)" fg:x="405" fg:w="7"/><text x="32.2153%" y="607.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.55%)</title><rect x="31.9653%" y="581" width="0.5525%" height="15" fill="rgb(231,56,7)" fg:x="405" fg:w="7"/><text x="32.2153%" y="591.50"></text></g><g><title>std::panicking::try (7 samples, 0.55%)</title><rect x="31.9653%" y="565" width="0.5525%" height="15" fill="rgb(244,186,29)" fg:x="405" fg:w="7"/><text x="32.2153%" y="575.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.55%)</title><rect x="31.9653%" y="549" width="0.5525%" height="15" fill="rgb(234,111,31)" fg:x="405" fg:w="7"/><text x="32.2153%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7 samples, 0.55%)</title><rect x="31.9653%" y="533" width="0.5525%" height="15" fill="rgb(241,149,10)" fg:x="405" fg:w="7"/><text x="32.2153%" y="543.50"></text></g><g><title>std::rt::lang_start::{{closure}} (7 samples, 0.55%)</title><rect x="31.9653%" y="517" width="0.5525%" height="15" fill="rgb(249,206,44)" fg:x="405" fg:w="7"/><text x="32.2153%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.55%)</title><rect x="31.9653%" y="501" width="0.5525%" height="15" fill="rgb(251,153,30)" fg:x="405" fg:w="7"/><text x="32.2153%" y="511.50"></text></g><g><title>cargo::main (7 samples, 0.55%)</title><rect x="31.9653%" y="485" width="0.5525%" height="15" fill="rgb(239,152,38)" fg:x="405" fg:w="7"/><text x="32.2153%" y="495.50"></text></g><g><title>cargo::cli::main (7 samples, 0.55%)</title><rect x="31.9653%" y="469" width="0.5525%" height="15" fill="rgb(249,139,47)" fg:x="405" fg:w="7"/><text x="32.2153%" y="479.50"></text></g><g><title>clap::app::App::get_matches_safe (1 samples, 0.08%)</title><rect x="32.4388%" y="453" width="0.0789%" height="15" fill="rgb(244,64,35)" fg:x="411" fg:w="1"/><text x="32.6888%" y="463.50"></text></g><g><title>clap::app::App::get_matches_from_safe_borrow (1 samples, 0.08%)</title><rect x="32.4388%" y="437" width="0.0789%" height="15" fill="rgb(216,46,15)" fg:x="411" fg:w="1"/><text x="32.6888%" y="447.50"></text></g><g><title>clap::app::parser::Parser::propagate_settings (1 samples, 0.08%)</title><rect x="32.4388%" y="421" width="0.0789%" height="15" fill="rgb(250,74,19)" fg:x="411" fg:w="1"/><text x="32.6888%" y="431.50"></text></g><g><title>clap::app::settings::AppFlags::is_set (1 samples, 0.08%)</title><rect x="32.4388%" y="405" width="0.0789%" height="15" fill="rgb(249,42,33)" fg:x="411" fg:w="1"/><text x="32.6888%" y="415.50"></text></g><g><title>_dl_load_cache_lookup (1 samples, 0.08%)</title><rect x="32.5178%" y="581" width="0.0789%" height="15" fill="rgb(242,149,17)" fg:x="412" fg:w="1"/><text x="32.7678%" y="591.50"></text></g><g><title>_dl_sysdep_read_whole_file (1 samples, 0.08%)</title><rect x="32.5178%" y="565" width="0.0789%" height="15" fill="rgb(244,29,21)" fg:x="412" fg:w="1"/><text x="32.7678%" y="575.50"></text></g><g><title>__GI___close_nocancel (1 samples, 0.08%)</title><rect x="32.5178%" y="549" width="0.0789%" height="15" fill="rgb(220,130,37)" fg:x="412" fg:w="1"/><text x="32.7678%" y="559.50"></text></g><g><title>__mmap (3 samples, 0.24%)</title><rect x="32.5967%" y="565" width="0.2368%" height="15" fill="rgb(211,67,2)" fg:x="413" fg:w="3"/><text x="32.8467%" y="575.50"></text></g><g><title>__mprotect (1 samples, 0.08%)</title><rect x="32.8335%" y="565" width="0.0789%" height="15" fill="rgb(235,68,52)" fg:x="416" fg:w="1"/><text x="33.0835%" y="575.50"></text></g><g><title>_dl_map_object_from_fd (5 samples, 0.39%)</title><rect x="32.5967%" y="581" width="0.3946%" height="15" fill="rgb(246,142,3)" fg:x="413" fg:w="5"/><text x="32.8467%" y="591.50"></text></g><g><title>fstatat (1 samples, 0.08%)</title><rect x="32.9124%" y="565" width="0.0789%" height="15" fill="rgb(241,25,7)" fg:x="417" fg:w="1"/><text x="33.1624%" y="575.50"></text></g><g><title>_dl_map_object_deps (7 samples, 0.55%)</title><rect x="32.5178%" y="645" width="0.5525%" height="15" fill="rgb(242,119,39)" fg:x="412" fg:w="7"/><text x="32.7678%" y="655.50"></text></g><g><title>_dl_catch_exception (7 samples, 0.55%)</title><rect x="32.5178%" y="629" width="0.5525%" height="15" fill="rgb(241,98,45)" fg:x="412" fg:w="7"/><text x="32.7678%" y="639.50"></text></g><g><title>openaux (7 samples, 0.55%)</title><rect x="32.5178%" y="613" width="0.5525%" height="15" fill="rgb(254,28,30)" fg:x="412" fg:w="7"/><text x="32.7678%" y="623.50"></text></g><g><title>_dl_map_object (7 samples, 0.55%)</title><rect x="32.5178%" y="597" width="0.5525%" height="15" fill="rgb(241,142,54)" fg:x="412" fg:w="7"/><text x="32.7678%" y="607.50"></text></g><g><title>_dl_name_match_p (1 samples, 0.08%)</title><rect x="32.9913%" y="581" width="0.0789%" height="15" fill="rgb(222,85,15)" fg:x="418" fg:w="1"/><text x="33.2413%" y="591.50"></text></g><g><title>__x86_cacheinfo_ifunc (1 samples, 0.08%)</title><rect x="33.6227%" y="629" width="0.0789%" height="15" fill="rgb(210,85,47)" fg:x="426" fg:w="1"/><text x="33.8727%" y="639.50"></text></g><g><title>_dl_lookup_symbol_x (5 samples, 0.39%)</title><rect x="33.7017%" y="629" width="0.3946%" height="15" fill="rgb(224,206,25)" fg:x="427" fg:w="5"/><text x="33.9517%" y="639.50"></text></g><g><title>do_lookup_x (5 samples, 0.39%)</title><rect x="33.7017%" y="613" width="0.3946%" height="15" fill="rgb(243,201,19)" fg:x="427" fg:w="5"/><text x="33.9517%" y="623.50"></text></g><g><title>check_match (1 samples, 0.08%)</title><rect x="34.0174%" y="597" width="0.0789%" height="15" fill="rgb(236,59,4)" fg:x="431" fg:w="1"/><text x="34.2674%" y="607.50"></text></g><g><title>strcmp (1 samples, 0.08%)</title><rect x="34.0174%" y="581" width="0.0789%" height="15" fill="rgb(254,179,45)" fg:x="431" fg:w="1"/><text x="34.2674%" y="591.50"></text></g><g><title>dl_main (21 samples, 1.66%)</title><rect x="32.5178%" y="661" width="1.6575%" height="15" fill="rgb(226,14,10)" fg:x="412" fg:w="21"/><text x="32.7678%" y="671.50"></text></g><g><title>_dl_relocate_object (14 samples, 1.10%)</title><rect x="33.0702%" y="645" width="1.1050%" height="15" fill="rgb(244,27,41)" fg:x="419" fg:w="14"/><text x="33.3202%" y="655.50"></text></g><g><title>_dl_protect_relro (1 samples, 0.08%)</title><rect x="34.0963%" y="629" width="0.0789%" height="15" fill="rgb(235,35,32)" fg:x="432" fg:w="1"/><text x="34.3463%" y="639.50"></text></g><g><title>__mprotect (1 samples, 0.08%)</title><rect x="34.0963%" y="613" width="0.0789%" height="15" fill="rgb(218,68,31)" fg:x="432" fg:w="1"/><text x="34.3463%" y="623.50"></text></g><g><title>cargo (434 samples, 34.25%)</title><rect x="0.0000%" y="725" width="34.2541%" height="15" fill="rgb(207,120,37)" fg:x="0" fg:w="434"/><text x="0.2500%" y="735.50">cargo</text></g><g><title>_start (34 samples, 2.68%)</title><rect x="31.5706%" y="709" width="2.6835%" height="15" fill="rgb(227,98,0)" fg:x="400" fg:w="34"/><text x="31.8206%" y="719.50">_s..</text></g><g><title>_dl_start (22 samples, 1.74%)</title><rect x="32.5178%" y="693" width="1.7364%" height="15" fill="rgb(207,7,3)" fg:x="412" fg:w="22"/><text x="32.7678%" y="703.50"></text></g><g><title>_dl_sysdep_start (22 samples, 1.74%)</title><rect x="32.5178%" y="677" width="1.7364%" height="15" fill="rgb(206,98,19)" fg:x="412" fg:w="22"/><text x="32.7678%" y="687.50"></text></g><g><title>init_cpu_features.constprop.0 (1 samples, 0.08%)</title><rect x="34.1752%" y="661" width="0.0789%" height="15" fill="rgb(217,5,26)" fg:x="433" fg:w="1"/><text x="34.4252%" y="671.50"></text></g><g><title>handle_intel.constprop.0 (1 samples, 0.08%)</title><rect x="34.1752%" y="645" width="0.0789%" height="15" fill="rgb(235,190,38)" fg:x="433" fg:w="1"/><text x="34.4252%" y="655.50"></text></g><g><title>intel_check_word.constprop.0 (1 samples, 0.08%)</title><rect x="34.1752%" y="629" width="0.0789%" height="15" fill="rgb(247,86,24)" fg:x="433" fg:w="1"/><text x="34.4252%" y="639.50"></text></g><g><title>[[stack]] (1 samples, 0.08%)</title><rect x="34.2541%" y="709" width="0.0789%" height="15" fill="rgb(205,101,16)" fg:x="434" fg:w="1"/><text x="34.5041%" y="719.50"></text></g><g><title>do_lookup_x (1 samples, 0.08%)</title><rect x="34.2541%" y="693" width="0.0789%" height="15" fill="rgb(246,168,33)" fg:x="434" fg:w="1"/><text x="34.5041%" y="703.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="34.3331%" y="693" width="0.0789%" height="15" fill="rgb(231,114,1)" fg:x="435" fg:w="1"/><text x="34.5831%" y="703.50"></text></g><g><title>llvm::orc::MachOPlatform::notifyRemoving (1 samples, 0.08%)</title><rect x="34.4120%" y="693" width="0.0789%" height="15" fill="rgb(207,184,53)" fg:x="436" fg:w="1"/><text x="34.6620%" y="703.50"></text></g><g><title>llvm::sys::fs::getMainExecutable[abi:cxx11] (1 samples, 0.08%)</title><rect x="34.4909%" y="693" width="0.0789%" height="15" fill="rgb(224,95,51)" fg:x="437" fg:w="1"/><text x="34.7409%" y="703.50"></text></g><g><title>__access (1 samples, 0.08%)</title><rect x="34.4909%" y="677" width="0.0789%" height="15" fill="rgb(212,188,45)" fg:x="437" fg:w="1"/><text x="34.7409%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.32%)</title><rect x="34.3331%" y="709" width="0.3157%" height="15" fill="rgb(223,154,38)" fg:x="435" fg:w="4"/><text x="34.5831%" y="719.50"></text></g><g><title>main (1 samples, 0.08%)</title><rect x="34.5699%" y="693" width="0.0789%" height="15" fill="rgb(251,22,52)" fg:x="438" fg:w="1"/><text x="34.8199%" y="703.50"></text></g><g><title>clang::driver::Driver::BuildCompilation (1 samples, 0.08%)</title><rect x="34.5699%" y="677" width="0.0789%" height="15" fill="rgb(229,209,22)" fg:x="438" fg:w="1"/><text x="34.8199%" y="687.50"></text></g><g><title>clang::driver::Driver::getToolChain (1 samples, 0.08%)</title><rect x="34.5699%" y="661" width="0.0789%" height="15" fill="rgb(234,138,34)" fg:x="438" fg:w="1"/><text x="34.8199%" y="671.50"></text></g><g><title>[libclang-cpp.so.13] (1 samples, 0.08%)</title><rect x="34.5699%" y="645" width="0.0789%" height="15" fill="rgb(212,95,11)" fg:x="438" fg:w="1"/><text x="34.8199%" y="655.50"></text></g><g><title>[libclang-cpp.so.13] (1 samples, 0.08%)</title><rect x="34.5699%" y="629" width="0.0789%" height="15" fill="rgb(240,179,47)" fg:x="438" fg:w="1"/><text x="34.8199%" y="639.50"></text></g><g><title>[libclang-cpp.so.13] (1 samples, 0.08%)</title><rect x="34.5699%" y="613" width="0.0789%" height="15" fill="rgb(240,163,11)" fg:x="438" fg:w="1"/><text x="34.8199%" y="623.50"></text></g><g><title>[libLLVM-13.so] (1 samples, 0.08%)</title><rect x="34.5699%" y="597" width="0.0789%" height="15" fill="rgb(236,37,12)" fg:x="438" fg:w="1"/><text x="34.8199%" y="607.50"></text></g><g><title>llvm::sys::fs::detail::directory_iterator_construct (1 samples, 0.08%)</title><rect x="34.5699%" y="581" width="0.0789%" height="15" fill="rgb(232,164,16)" fg:x="438" fg:w="1"/><text x="34.8199%" y="591.50"></text></g><g><title>__opendir (1 samples, 0.08%)</title><rect x="34.5699%" y="565" width="0.0789%" height="15" fill="rgb(244,205,15)" fg:x="438" fg:w="1"/><text x="34.8199%" y="575.50"></text></g><g><title>__GI___open64_nocancel (1 samples, 0.08%)</title><rect x="34.5699%" y="549" width="0.0789%" height="15" fill="rgb(223,117,47)" fg:x="438" fg:w="1"/><text x="34.8199%" y="559.50"></text></g><g><title>clang::format::BreakableStringLiteral::getRangeLength (1 samples, 0.08%)</title><rect x="34.6488%" y="661" width="0.0789%" height="15" fill="rgb(244,107,35)" fg:x="439" fg:w="1"/><text x="34.8988%" y="671.50"></text></g><g><title>llvm::cl::Option::addArgument (1 samples, 0.08%)</title><rect x="34.6488%" y="645" width="0.0789%" height="15" fill="rgb(205,140,8)" fg:x="439" fg:w="1"/><text x="34.8988%" y="655.50"></text></g><g><title>[libLLVM-13.so] (1 samples, 0.08%)</title><rect x="34.6488%" y="629" width="0.0789%" height="15" fill="rgb(228,84,46)" fg:x="439" fg:w="1"/><text x="34.8988%" y="639.50"></text></g><g><title>[libLLVM-13.so] (1 samples, 0.08%)</title><rect x="34.6488%" y="613" width="0.0789%" height="15" fill="rgb(254,188,9)" fg:x="439" fg:w="1"/><text x="34.8988%" y="623.50"></text></g><g><title>llvm::StringMapImpl::LookupBucketFor (1 samples, 0.08%)</title><rect x="34.6488%" y="597" width="0.0789%" height="15" fill="rgb(206,112,54)" fg:x="439" fg:w="1"/><text x="34.8988%" y="607.50"></text></g><g><title>[libLLVM-13.so] (1 samples, 0.08%)</title><rect x="34.7277%" y="645" width="0.0789%" height="15" fill="rgb(216,84,49)" fg:x="440" fg:w="1"/><text x="34.9777%" y="655.50"></text></g><g><title>_dl_start_user (3 samples, 0.24%)</title><rect x="34.6488%" y="709" width="0.2368%" height="15" fill="rgb(214,194,35)" fg:x="439" fg:w="3"/><text x="34.8988%" y="719.50"></text></g><g><title>_dl_init (3 samples, 0.24%)</title><rect x="34.6488%" y="693" width="0.2368%" height="15" fill="rgb(249,28,3)" fg:x="439" fg:w="3"/><text x="34.8988%" y="703.50"></text></g><g><title>call_init (3 samples, 0.24%)</title><rect x="34.6488%" y="677" width="0.2368%" height="15" fill="rgb(222,56,52)" fg:x="439" fg:w="3"/><text x="34.8988%" y="687.50"></text></g><g><title>llvm::orc::MachOPlatform::notifyRemoving (2 samples, 0.16%)</title><rect x="34.7277%" y="661" width="0.1579%" height="15" fill="rgb(245,217,50)" fg:x="440" fg:w="2"/><text x="34.9777%" y="671.50"></text></g><g><title>llvm::cl::Option::addArgument (1 samples, 0.08%)</title><rect x="34.8066%" y="645" width="0.0789%" height="15" fill="rgb(213,201,24)" fg:x="441" fg:w="1"/><text x="35.0566%" y="655.50"></text></g><g><title>[libLLVM-13.so] (1 samples, 0.08%)</title><rect x="34.8066%" y="629" width="0.0789%" height="15" fill="rgb(248,116,28)" fg:x="441" fg:w="1"/><text x="35.0566%" y="639.50"></text></g><g><title>[libLLVM-13.so] (1 samples, 0.08%)</title><rect x="34.8066%" y="613" width="0.0789%" height="15" fill="rgb(219,72,43)" fg:x="441" fg:w="1"/><text x="35.0566%" y="623.50"></text></g><g><title>llvm::StringMapImpl::LookupBucketFor (1 samples, 0.08%)</title><rect x="34.8066%" y="597" width="0.0789%" height="15" fill="rgb(209,138,14)" fg:x="441" fg:w="1"/><text x="35.0566%" y="607.50"></text></g><g><title>__GI_exit (1 samples, 0.08%)</title><rect x="34.9645%" y="677" width="0.0789%" height="15" fill="rgb(222,18,33)" fg:x="443" fg:w="1"/><text x="35.2145%" y="687.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.08%)</title><rect x="34.9645%" y="661" width="0.0789%" height="15" fill="rgb(213,199,7)" fg:x="443" fg:w="1"/><text x="35.2145%" y="671.50"></text></g><g><title>_dl_fini (1 samples, 0.08%)</title><rect x="34.9645%" y="645" width="0.0789%" height="15" fill="rgb(250,110,10)" fg:x="443" fg:w="1"/><text x="35.2145%" y="655.50"></text></g><g><title>llvm::orc::MachOPlatform::notifyRemoving (1 samples, 0.08%)</title><rect x="34.9645%" y="629" width="0.0789%" height="15" fill="rgb(248,123,6)" fg:x="443" fg:w="1"/><text x="35.2145%" y="639.50"></text></g><g><title>__cxa_finalize (1 samples, 0.08%)</title><rect x="34.9645%" y="613" width="0.0789%" height="15" fill="rgb(206,91,31)" fg:x="443" fg:w="1"/><text x="35.2145%" y="623.50"></text></g><g><title>clang::driver::Driver::BuildCompilation (1 samples, 0.08%)</title><rect x="35.0434%" y="661" width="0.0789%" height="15" fill="rgb(211,154,13)" fg:x="444" fg:w="1"/><text x="35.2934%" y="671.50"></text></g><g><title>clang::driver::Driver::ParseArgStrings (1 samples, 0.08%)</title><rect x="35.0434%" y="645" width="0.0789%" height="15" fill="rgb(225,148,7)" fg:x="444" fg:w="1"/><text x="35.2934%" y="655.50"></text></g><g><title>llvm::opt::OptTable::ParseArgs (1 samples, 0.08%)</title><rect x="35.0434%" y="629" width="0.0789%" height="15" fill="rgb(220,160,43)" fg:x="444" fg:w="1"/><text x="35.2934%" y="639.50"></text></g><g><title>[libLLVM-13.so] (1 samples, 0.08%)</title><rect x="35.0434%" y="613" width="0.0789%" height="15" fill="rgb(213,52,39)" fg:x="444" fg:w="1"/><text x="35.2934%" y="623.50"></text></g><g><title>__libc_start_main (3 samples, 0.24%)</title><rect x="34.9645%" y="693" width="0.2368%" height="15" fill="rgb(243,137,7)" fg:x="443" fg:w="3"/><text x="35.2145%" y="703.50"></text></g><g><title>main (2 samples, 0.16%)</title><rect x="35.0434%" y="677" width="0.1579%" height="15" fill="rgb(230,79,13)" fg:x="444" fg:w="2"/><text x="35.2934%" y="687.50"></text></g><g><title>llvm::opt::OptTable::ParseArgs (1 samples, 0.08%)</title><rect x="35.1223%" y="661" width="0.0789%" height="15" fill="rgb(247,105,23)" fg:x="445" fg:w="1"/><text x="35.3723%" y="671.50"></text></g><g><title>[libLLVM-13.so] (1 samples, 0.08%)</title><rect x="35.1223%" y="645" width="0.0789%" height="15" fill="rgb(223,179,41)" fg:x="445" fg:w="1"/><text x="35.3723%" y="655.50"></text></g><g><title>__memcmp_sse4_1 (1 samples, 0.08%)</title><rect x="35.1223%" y="629" width="0.0789%" height="15" fill="rgb(218,9,34)" fg:x="445" fg:w="1"/><text x="35.3723%" y="639.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.08%)</title><rect x="35.2013%" y="645" width="0.0789%" height="15" fill="rgb(222,106,8)" fg:x="446" fg:w="1"/><text x="35.4513%" y="655.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="35.2013%" y="629" width="0.0789%" height="15" fill="rgb(211,220,0)" fg:x="446" fg:w="1"/><text x="35.4513%" y="639.50"></text></g><g><title>openaux (1 samples, 0.08%)</title><rect x="35.2013%" y="613" width="0.0789%" height="15" fill="rgb(229,52,16)" fg:x="446" fg:w="1"/><text x="35.4513%" y="623.50"></text></g><g><title>_dl_map_object (1 samples, 0.08%)</title><rect x="35.2013%" y="597" width="0.0789%" height="15" fill="rgb(212,155,18)" fg:x="446" fg:w="1"/><text x="35.4513%" y="607.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.08%)</title><rect x="35.2013%" y="581" width="0.0789%" height="15" fill="rgb(242,21,14)" fg:x="446" fg:w="1"/><text x="35.4513%" y="591.50"></text></g><g><title>memset (1 samples, 0.08%)</title><rect x="35.2013%" y="565" width="0.0789%" height="15" fill="rgb(222,19,48)" fg:x="446" fg:w="1"/><text x="35.4513%" y="575.50"></text></g><g><title>clang (28 samples, 2.21%)</title><rect x="34.2541%" y="725" width="2.2099%" height="15" fill="rgb(232,45,27)" fg:x="434" fg:w="28"/><text x="34.5041%" y="735.50">c..</text></g><g><title>_start (20 samples, 1.58%)</title><rect x="34.8856%" y="709" width="1.5785%" height="15" fill="rgb(249,103,42)" fg:x="442" fg:w="20"/><text x="35.1356%" y="719.50"></text></g><g><title>_dl_start (16 samples, 1.26%)</title><rect x="35.2013%" y="693" width="1.2628%" height="15" fill="rgb(246,81,33)" fg:x="446" fg:w="16"/><text x="35.4513%" y="703.50"></text></g><g><title>_dl_sysdep_start (16 samples, 1.26%)</title><rect x="35.2013%" y="677" width="1.2628%" height="15" fill="rgb(252,33,42)" fg:x="446" fg:w="16"/><text x="35.4513%" y="687.50"></text></g><g><title>dl_main (16 samples, 1.26%)</title><rect x="35.2013%" y="661" width="1.2628%" height="15" fill="rgb(209,212,41)" fg:x="446" fg:w="16"/><text x="35.4513%" y="671.50"></text></g><g><title>_dl_relocate_object (15 samples, 1.18%)</title><rect x="35.2802%" y="645" width="1.1839%" height="15" fill="rgb(207,154,6)" fg:x="447" fg:w="15"/><text x="35.5302%" y="655.50"></text></g><g><title>_dl_lookup_symbol_x (4 samples, 0.32%)</title><rect x="36.1484%" y="629" width="0.3157%" height="15" fill="rgb(223,64,47)" fg:x="458" fg:w="4"/><text x="36.3984%" y="639.50"></text></g><g><title>copy_1bu5txwf2v (1 samples, 0.08%)</title><rect x="36.4641%" y="725" width="0.0789%" height="15" fill="rgb(211,161,38)" fg:x="462" fg:w="1"/><text x="36.7141%" y="735.50"></text></g><g><title>__GI___clone (1 samples, 0.08%)</title><rect x="36.4641%" y="709" width="0.0789%" height="15" fill="rgb(219,138,40)" fg:x="462" fg:w="1"/><text x="36.7141%" y="719.50"></text></g><g><title>start_thread (1 samples, 0.08%)</title><rect x="36.4641%" y="693" width="0.0789%" height="15" fill="rgb(241,228,46)" fg:x="462" fg:w="1"/><text x="36.7141%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.08%)</title><rect x="36.4641%" y="677" width="0.0789%" height="15" fill="rgb(223,209,38)" fg:x="462" fg:w="1"/><text x="36.7141%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="36.4641%" y="661" width="0.0789%" height="15" fill="rgb(236,164,45)" fg:x="462" fg:w="1"/><text x="36.7141%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="36.4641%" y="645" width="0.0789%" height="15" fill="rgb(231,15,5)" fg:x="462" fg:w="1"/><text x="36.7141%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="36.4641%" y="629" width="0.0789%" height="15" fill="rgb(252,35,15)" fg:x="462" fg:w="1"/><text x="36.7141%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.08%)</title><rect x="36.4641%" y="613" width="0.0789%" height="15" fill="rgb(248,181,18)" fg:x="462" fg:w="1"/><text x="36.7141%" y="623.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item (1 samples, 0.08%)</title><rect x="36.4641%" y="597" width="0.0789%" height="15" fill="rgb(233,39,42)" fg:x="462" fg:w="1"/><text x="36.7141%" y="607.50"></text></g><g><title>rustc_fs_util::link_or_copy (1 samples, 0.08%)</title><rect x="36.4641%" y="581" width="0.0789%" height="15" fill="rgb(238,110,33)" fg:x="462" fg:w="1"/><text x="36.7141%" y="591.50"></text></g><g><title>std::sys::unix::fs::link (1 samples, 0.08%)</title><rect x="36.4641%" y="565" width="0.0789%" height="15" fill="rgb(233,195,10)" fg:x="462" fg:w="1"/><text x="36.7141%" y="575.50"></text></g><g><title>__GI_linkat (1 samples, 0.08%)</title><rect x="36.4641%" y="549" width="0.0789%" height="15" fill="rgb(254,105,3)" fg:x="462" fg:w="1"/><text x="36.7141%" y="559.50"></text></g><g><title>copy_1zijwtm6xb (1 samples, 0.08%)</title><rect x="36.5430%" y="725" width="0.0789%" height="15" fill="rgb(221,225,9)" fg:x="463" fg:w="1"/><text x="36.7930%" y="735.50"></text></g><g><title>__GI___clone (1 samples, 0.08%)</title><rect x="36.5430%" y="709" width="0.0789%" height="15" fill="rgb(224,227,45)" fg:x="463" fg:w="1"/><text x="36.7930%" y="719.50"></text></g><g><title>start_thread (1 samples, 0.08%)</title><rect x="36.5430%" y="693" width="0.0789%" height="15" fill="rgb(229,198,43)" fg:x="463" fg:w="1"/><text x="36.7930%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.08%)</title><rect x="36.5430%" y="677" width="0.0789%" height="15" fill="rgb(206,209,35)" fg:x="463" fg:w="1"/><text x="36.7930%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="36.5430%" y="661" width="0.0789%" height="15" fill="rgb(245,195,53)" fg:x="463" fg:w="1"/><text x="36.7930%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="36.5430%" y="645" width="0.0789%" height="15" fill="rgb(240,92,26)" fg:x="463" fg:w="1"/><text x="36.7930%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="36.5430%" y="629" width="0.0789%" height="15" fill="rgb(207,40,23)" fg:x="463" fg:w="1"/><text x="36.7930%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.08%)</title><rect x="36.5430%" y="613" width="0.0789%" height="15" fill="rgb(223,111,35)" fg:x="463" fg:w="1"/><text x="36.7930%" y="623.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item (1 samples, 0.08%)</title><rect x="36.5430%" y="597" width="0.0789%" height="15" fill="rgb(229,147,28)" fg:x="463" fg:w="1"/><text x="36.7930%" y="607.50"></text></g><g><title>rustc_session::config::OutputFilenames::temp_path (1 samples, 0.08%)</title><rect x="36.5430%" y="581" width="0.0789%" height="15" fill="rgb(211,29,28)" fg:x="463" fg:w="1"/><text x="36.7930%" y="591.50"></text></g><g><title>rustc_session::config::OutputFilenames::temp_path_ext (1 samples, 0.08%)</title><rect x="36.5430%" y="565" width="0.0789%" height="15" fill="rgb(228,72,33)" fg:x="463" fg:w="1"/><text x="36.7930%" y="575.50"></text></g><g><title>std::path::Path::_join (1 samples, 0.08%)</title><rect x="36.5430%" y="549" width="0.0789%" height="15" fill="rgb(205,214,31)" fg:x="463" fg:w="1"/><text x="36.7930%" y="559.50"></text></g><g><title>std::path::Path::to_path_buf (1 samples, 0.08%)</title><rect x="36.5430%" y="533" width="0.0789%" height="15" fill="rgb(224,111,15)" fg:x="463" fg:w="1"/><text x="36.7930%" y="543.50"></text></g><g><title>std::ffi::os_str::OsStr::to_os_string (1 samples, 0.08%)</title><rect x="36.5430%" y="517" width="0.0789%" height="15" fill="rgb(253,21,26)" fg:x="463" fg:w="1"/><text x="36.7930%" y="527.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_owned (1 samples, 0.08%)</title><rect x="36.5430%" y="501" width="0.0789%" height="15" fill="rgb(245,139,43)" fg:x="463" fg:w="1"/><text x="36.7930%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.5430%" y="485" width="0.0789%" height="15" fill="rgb(252,170,7)" fg:x="463" fg:w="1"/><text x="36.7930%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.5430%" y="469" width="0.0789%" height="15" fill="rgb(231,118,14)" fg:x="463" fg:w="1"/><text x="36.7930%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.5430%" y="453" width="0.0789%" height="15" fill="rgb(238,83,0)" fg:x="463" fg:w="1"/><text x="36.7930%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.5430%" y="437" width="0.0789%" height="15" fill="rgb(221,39,39)" fg:x="463" fg:w="1"/><text x="36.7930%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="36.5430%" y="421" width="0.0789%" height="15" fill="rgb(222,119,46)" fg:x="463" fg:w="1"/><text x="36.7930%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="36.5430%" y="405" width="0.0789%" height="15" fill="rgb(222,165,49)" fg:x="463" fg:w="1"/><text x="36.7930%" y="415.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="36.5430%" y="389" width="0.0789%" height="15" fill="rgb(219,113,52)" fg:x="463" fg:w="1"/><text x="36.7930%" y="399.50"></text></g><g><title>copy_21mw0m9vu8 (1 samples, 0.08%)</title><rect x="36.6219%" y="725" width="0.0789%" height="15" fill="rgb(214,7,15)" fg:x="464" fg:w="1"/><text x="36.8719%" y="735.50"></text></g><g><title>__GI___clone (1 samples, 0.08%)</title><rect x="36.6219%" y="709" width="0.0789%" height="15" fill="rgb(235,32,4)" fg:x="464" fg:w="1"/><text x="36.8719%" y="719.50"></text></g><g><title>start_thread (1 samples, 0.08%)</title><rect x="36.6219%" y="693" width="0.0789%" height="15" fill="rgb(238,90,54)" fg:x="464" fg:w="1"/><text x="36.8719%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.08%)</title><rect x="36.6219%" y="677" width="0.0789%" height="15" fill="rgb(213,208,19)" fg:x="464" fg:w="1"/><text x="36.8719%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="36.6219%" y="661" width="0.0789%" height="15" fill="rgb(233,156,4)" fg:x="464" fg:w="1"/><text x="36.8719%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="36.6219%" y="645" width="0.0789%" height="15" fill="rgb(207,194,5)" fg:x="464" fg:w="1"/><text x="36.8719%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="36.6219%" y="629" width="0.0789%" height="15" fill="rgb(206,111,30)" fg:x="464" fg:w="1"/><text x="36.8719%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.08%)</title><rect x="36.6219%" y="613" width="0.0789%" height="15" fill="rgb(243,70,54)" fg:x="464" fg:w="1"/><text x="36.8719%" y="623.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item (1 samples, 0.08%)</title><rect x="36.6219%" y="597" width="0.0789%" height="15" fill="rgb(242,28,8)" fg:x="464" fg:w="1"/><text x="36.8719%" y="607.50"></text></g><g><title>rustc_fs_util::link_or_copy (1 samples, 0.08%)</title><rect x="36.6219%" y="581" width="0.0789%" height="15" fill="rgb(219,106,18)" fg:x="464" fg:w="1"/><text x="36.8719%" y="591.50"></text></g><g><title>std::sys::unix::fs::link (1 samples, 0.08%)</title><rect x="36.6219%" y="565" width="0.0789%" height="15" fill="rgb(244,222,10)" fg:x="464" fg:w="1"/><text x="36.8719%" y="575.50"></text></g><g><title>__GI_linkat (1 samples, 0.08%)</title><rect x="36.6219%" y="549" width="0.0789%" height="15" fill="rgb(236,179,52)" fg:x="464" fg:w="1"/><text x="36.8719%" y="559.50"></text></g><g><title>copy_25f42iz873 (1 samples, 0.08%)</title><rect x="36.7009%" y="725" width="0.0789%" height="15" fill="rgb(213,23,39)" fg:x="465" fg:w="1"/><text x="36.9509%" y="735.50"></text></g><g><title>__GI___clone (1 samples, 0.08%)</title><rect x="36.7009%" y="709" width="0.0789%" height="15" fill="rgb(238,48,10)" fg:x="465" fg:w="1"/><text x="36.9509%" y="719.50"></text></g><g><title>start_thread (1 samples, 0.08%)</title><rect x="36.7009%" y="693" width="0.0789%" height="15" fill="rgb(251,196,23)" fg:x="465" fg:w="1"/><text x="36.9509%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.08%)</title><rect x="36.7009%" y="677" width="0.0789%" height="15" fill="rgb(250,152,24)" fg:x="465" fg:w="1"/><text x="36.9509%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="36.7009%" y="661" width="0.0789%" height="15" fill="rgb(209,150,17)" fg:x="465" fg:w="1"/><text x="36.9509%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="36.7009%" y="645" width="0.0789%" height="15" fill="rgb(234,202,34)" fg:x="465" fg:w="1"/><text x="36.9509%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="36.7009%" y="629" width="0.0789%" height="15" fill="rgb(253,148,53)" fg:x="465" fg:w="1"/><text x="36.9509%" y="639.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.08%)</title><rect x="36.7009%" y="613" width="0.0789%" height="15" fill="rgb(218,129,16)" fg:x="465" fg:w="1"/><text x="36.9509%" y="623.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.08%)</title><rect x="36.7009%" y="597" width="0.0789%" height="15" fill="rgb(216,85,19)" fg:x="465" fg:w="1"/><text x="36.9509%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="36.7009%" y="581" width="0.0789%" height="15" fill="rgb(235,228,7)" fg:x="465" fg:w="1"/><text x="36.9509%" y="591.50"></text></g><g><title>imalloc (1 samples, 0.08%)</title><rect x="36.7009%" y="565" width="0.0789%" height="15" fill="rgb(245,175,0)" fg:x="465" fg:w="1"/><text x="36.9509%" y="575.50"></text></g><g><title>tsd_fetch (1 samples, 0.08%)</title><rect x="36.7009%" y="549" width="0.0789%" height="15" fill="rgb(208,168,36)" fg:x="465" fg:w="1"/><text x="36.9509%" y="559.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.08%)</title><rect x="36.7009%" y="533" width="0.0789%" height="15" fill="rgb(246,171,24)" fg:x="465" fg:w="1"/><text x="36.9509%" y="543.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (1 samples, 0.08%)</title><rect x="36.7009%" y="517" width="0.0789%" height="15" fill="rgb(215,142,24)" fg:x="465" fg:w="1"/><text x="36.9509%" y="527.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (1 samples, 0.08%)</title><rect x="36.7009%" y="501" width="0.0789%" height="15" fill="rgb(250,187,7)" fg:x="465" fg:w="1"/><text x="36.9509%" y="511.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (1 samples, 0.08%)</title><rect x="36.7009%" y="485" width="0.0789%" height="15" fill="rgb(228,66,33)" fg:x="465" fg:w="1"/><text x="36.9509%" y="495.50"></text></g><g><title>arena_choose (1 samples, 0.08%)</title><rect x="36.7009%" y="469" width="0.0789%" height="15" fill="rgb(234,215,21)" fg:x="465" fg:w="1"/><text x="36.9509%" y="479.50"></text></g><g><title>arena_choose_impl (1 samples, 0.08%)</title><rect x="36.7009%" y="453" width="0.0789%" height="15" fill="rgb(222,191,20)" fg:x="465" fg:w="1"/><text x="36.9509%" y="463.50"></text></g><g><title>_rjem_je_arena_choose_hard (1 samples, 0.08%)</title><rect x="36.7009%" y="437" width="0.0789%" height="15" fill="rgb(245,79,54)" fg:x="465" fg:w="1"/><text x="36.9509%" y="447.50"></text></g><g><title>arena_init_locked (1 samples, 0.08%)</title><rect x="36.7009%" y="421" width="0.0789%" height="15" fill="rgb(240,10,37)" fg:x="465" fg:w="1"/><text x="36.9509%" y="431.50"></text></g><g><title>_rjem_je_arena_new (1 samples, 0.08%)</title><rect x="36.7009%" y="405" width="0.0789%" height="15" fill="rgb(214,192,32)" fg:x="465" fg:w="1"/><text x="36.9509%" y="415.50"></text></g><g><title>_rjem_je_base_new (1 samples, 0.08%)</title><rect x="36.7009%" y="389" width="0.0789%" height="15" fill="rgb(209,36,54)" fg:x="465" fg:w="1"/><text x="36.9509%" y="399.50"></text></g><g><title>base_block_alloc (1 samples, 0.08%)</title><rect x="36.7009%" y="373" width="0.0789%" height="15" fill="rgb(220,10,11)" fg:x="465" fg:w="1"/><text x="36.9509%" y="383.50"></text></g><g><title>base_map (1 samples, 0.08%)</title><rect x="36.7009%" y="357" width="0.0789%" height="15" fill="rgb(221,106,17)" fg:x="465" fg:w="1"/><text x="36.9509%" y="367.50"></text></g><g><title>_rjem_je_extent_alloc_mmap (1 samples, 0.08%)</title><rect x="36.7009%" y="341" width="0.0789%" height="15" fill="rgb(251,142,44)" fg:x="465" fg:w="1"/><text x="36.9509%" y="351.50"></text></g><g><title>_rjem_je_pages_map (1 samples, 0.08%)</title><rect x="36.7009%" y="325" width="0.0789%" height="15" fill="rgb(238,13,15)" fg:x="465" fg:w="1"/><text x="36.9509%" y="335.50"></text></g><g><title>os_pages_unmap (1 samples, 0.08%)</title><rect x="36.7009%" y="309" width="0.0789%" height="15" fill="rgb(208,107,27)" fg:x="465" fg:w="1"/><text x="36.9509%" y="319.50"></text></g><g><title>__GI_munmap (1 samples, 0.08%)</title><rect x="36.7009%" y="293" width="0.0789%" height="15" fill="rgb(205,136,37)" fg:x="465" fg:w="1"/><text x="36.9509%" y="303.50"></text></g><g><title>copy_40zgngpdde (1 samples, 0.08%)</title><rect x="36.7798%" y="725" width="0.0789%" height="15" fill="rgb(250,205,27)" fg:x="466" fg:w="1"/><text x="37.0298%" y="735.50"></text></g><g><title>__GI___clone (1 samples, 0.08%)</title><rect x="36.7798%" y="709" width="0.0789%" height="15" fill="rgb(210,80,43)" fg:x="466" fg:w="1"/><text x="37.0298%" y="719.50"></text></g><g><title>start_thread (1 samples, 0.08%)</title><rect x="36.7798%" y="693" width="0.0789%" height="15" fill="rgb(247,160,36)" fg:x="466" fg:w="1"/><text x="37.0298%" y="703.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.08%)</title><rect x="36.7798%" y="677" width="0.0789%" height="15" fill="rgb(234,13,49)" fg:x="466" fg:w="1"/><text x="37.0298%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="36.7798%" y="661" width="0.0789%" height="15" fill="rgb(234,122,0)" fg:x="466" fg:w="1"/><text x="37.0298%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="36.7798%" y="645" width="0.0789%" height="15" fill="rgb(207,146,38)" fg:x="466" fg:w="1"/><text x="37.0298%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="36.7798%" y="629" width="0.0789%" height="15" fill="rgb(207,177,25)" fg:x="466" fg:w="1"/><text x="37.0298%" y="639.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.08%)</title><rect x="36.7798%" y="613" width="0.0789%" height="15" fill="rgb(211,178,42)" fg:x="466" fg:w="1"/><text x="37.0298%" y="623.50"></text></g><g><title>rustc_codegen_ssa::back::write::execute_work_item (1 samples, 0.08%)</title><rect x="36.7798%" y="597" width="0.0789%" height="15" fill="rgb(230,69,54)" fg:x="466" fg:w="1"/><text x="37.0298%" y="607.50"></text></g><g><title>rustc_fs_util::link_or_copy (1 samples, 0.08%)</title><rect x="36.7798%" y="581" width="0.0789%" height="15" fill="rgb(214,135,41)" fg:x="466" fg:w="1"/><text x="37.0298%" y="591.50"></text></g><g><title>std::sys::unix::fs::link (1 samples, 0.08%)</title><rect x="36.7798%" y="565" width="0.0789%" height="15" fill="rgb(237,67,25)" fg:x="466" fg:w="1"/><text x="37.0298%" y="575.50"></text></g><g><title>__GI_linkat (1 samples, 0.08%)</title><rect x="36.7798%" y="549" width="0.0789%" height="15" fill="rgb(222,189,50)" fg:x="466" fg:w="1"/><text x="37.0298%" y="559.50"></text></g><g><title>copy_t93varc55p (1 samples, 0.08%)</title><rect x="36.8587%" y="725" width="0.0789%" height="15" fill="rgb(245,148,34)" fg:x="467" fg:w="1"/><text x="37.1087%" y="735.50"></text></g><g><title>__GI___clone (1 samples, 0.08%)</title><rect x="36.8587%" y="709" width="0.0789%" height="15" fill="rgb(222,29,6)" fg:x="467" fg:w="1"/><text x="37.1087%" y="719.50"></text></g><g><title>start_thread (1 samples, 0.08%)</title><rect x="36.8587%" y="693" width="0.0789%" height="15" fill="rgb(221,189,43)" fg:x="467" fg:w="1"/><text x="37.1087%" y="703.50"></text></g><g><title>__nptl_deallocate_tsd.part.0 (1 samples, 0.08%)</title><rect x="36.8587%" y="677" width="0.0789%" height="15" fill="rgb(207,36,27)" fg:x="467" fg:w="1"/><text x="37.1087%" y="687.50"></text></g><g><title>_rjem_je_tsd_cleanup (1 samples, 0.08%)</title><rect x="36.8587%" y="661" width="0.0789%" height="15" fill="rgb(217,90,24)" fg:x="467" fg:w="1"/><text x="37.1087%" y="671.50"></text></g><g><title>tsd_do_data_cleanup (1 samples, 0.08%)</title><rect x="36.8587%" y="645" width="0.0789%" height="15" fill="rgb(224,66,35)" fg:x="467" fg:w="1"/><text x="37.1087%" y="655.50"></text></g><g><title>tcache_destroy (1 samples, 0.08%)</title><rect x="36.8587%" y="629" width="0.0789%" height="15" fill="rgb(221,13,50)" fg:x="467" fg:w="1"/><text x="37.1087%" y="639.50"></text></g><g><title>_rjem_je_arena_decay (1 samples, 0.08%)</title><rect x="36.8587%" y="613" width="0.0789%" height="15" fill="rgb(236,68,49)" fg:x="467" fg:w="1"/><text x="37.1087%" y="623.50"></text></g><g><title>arena_decay_dirty (1 samples, 0.08%)</title><rect x="36.8587%" y="597" width="0.0789%" height="15" fill="rgb(229,146,28)" fg:x="467" fg:w="1"/><text x="37.1087%" y="607.50"></text></g><g><title>arena_decay_impl (1 samples, 0.08%)</title><rect x="36.8587%" y="581" width="0.0789%" height="15" fill="rgb(225,31,38)" fg:x="467" fg:w="1"/><text x="37.1087%" y="591.50"></text></g><g><title>arena_decay_to_limit (1 samples, 0.08%)</title><rect x="36.8587%" y="565" width="0.0789%" height="15" fill="rgb(250,208,3)" fg:x="467" fg:w="1"/><text x="37.1087%" y="575.50"></text></g><g><title>arena_decay_stashed (1 samples, 0.08%)</title><rect x="36.8587%" y="549" width="0.0789%" height="15" fill="rgb(246,54,23)" fg:x="467" fg:w="1"/><text x="37.1087%" y="559.50"></text></g><g><title>_rjem_je_extent_dalloc_wrapper (1 samples, 0.08%)</title><rect x="36.8587%" y="533" width="0.0789%" height="15" fill="rgb(243,76,11)" fg:x="467" fg:w="1"/><text x="37.1087%" y="543.50"></text></g><g><title>_rjem_je_pages_purge_forced (1 samples, 0.08%)</title><rect x="36.8587%" y="517" width="0.0789%" height="15" fill="rgb(245,21,50)" fg:x="467" fg:w="1"/><text x="37.1087%" y="527.50"></text></g><g><title>__GI_madvise (1 samples, 0.08%)</title><rect x="36.8587%" y="501" width="0.0789%" height="15" fill="rgb(228,9,43)" fg:x="467" fg:w="1"/><text x="37.1087%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.08%)</title><rect x="36.9376%" y="709" width="0.0789%" height="15" fill="rgb(208,100,47)" fg:x="468" fg:w="1"/><text x="37.1876%" y="719.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.08%)</title><rect x="36.9376%" y="693" width="0.0789%" height="15" fill="rgb(232,26,8)" fg:x="468" fg:w="1"/><text x="37.1876%" y="703.50"></text></g><g><title>dirs::config_dir (1 samples, 0.08%)</title><rect x="36.9376%" y="677" width="0.0789%" height="15" fill="rgb(216,166,38)" fg:x="468" fg:w="1"/><text x="37.1876%" y="687.50"></text></g><g><title>&lt;rscript::_::&lt;impl serde::de::Deserialize for rscript::Message&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_enum (8 samples, 0.63%)</title><rect x="37.0166%" y="469" width="0.6314%" height="15" fill="rgb(251,202,51)" fg:x="469" fg:w="8"/><text x="37.2666%" y="479.50"></text></g><g><title>&lt;std::io::stdio::Stdin as std::io::Read&gt;::read_exact (8 samples, 0.63%)</title><rect x="37.0166%" y="453" width="0.6314%" height="15" fill="rgb(254,216,34)" fg:x="469" fg:w="8"/><text x="37.2666%" y="463.50"></text></g><g><title>&lt;std::io::stdio::StdinLock as std::io::Read&gt;::read_exact (8 samples, 0.63%)</title><rect x="37.0166%" y="437" width="0.6314%" height="15" fill="rgb(251,32,27)" fg:x="469" fg:w="8"/><text x="37.2666%" y="447.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (8 samples, 0.63%)</title><rect x="37.0166%" y="421" width="0.6314%" height="15" fill="rgb(208,127,28)" fg:x="469" fg:w="8"/><text x="37.2666%" y="431.50"></text></g><g><title>std::io::default_read_exact (8 samples, 0.63%)</title><rect x="37.0166%" y="405" width="0.6314%" height="15" fill="rgb(224,137,22)" fg:x="469" fg:w="8"/><text x="37.2666%" y="415.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 0.63%)</title><rect x="37.0166%" y="389" width="0.6314%" height="15" fill="rgb(254,70,32)" fg:x="469" fg:w="8"/><text x="37.2666%" y="399.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (8 samples, 0.63%)</title><rect x="37.0166%" y="373" width="0.6314%" height="15" fill="rgb(229,75,37)" fg:x="469" fg:w="8"/><text x="37.2666%" y="383.50"></text></g><g><title>&lt;std::io::stdio::StdinRaw as std::io::Read&gt;::read (8 samples, 0.63%)</title><rect x="37.0166%" y="357" width="0.6314%" height="15" fill="rgb(252,64,23)" fg:x="469" fg:w="8"/><text x="37.2666%" y="367.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdin as std::io::Read&gt;::read (8 samples, 0.63%)</title><rect x="37.0166%" y="341" width="0.6314%" height="15" fill="rgb(232,162,48)" fg:x="469" fg:w="8"/><text x="37.2666%" y="351.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (8 samples, 0.63%)</title><rect x="37.0166%" y="325" width="0.6314%" height="15" fill="rgb(246,160,12)" fg:x="469" fg:w="8"/><text x="37.2666%" y="335.50"></text></g><g><title>__libc_read (8 samples, 0.63%)</title><rect x="37.0166%" y="309" width="0.6314%" height="15" fill="rgb(247,166,0)" fg:x="469" fg:w="8"/><text x="37.2666%" y="319.50"></text></g><g><title>__libc_start_main (9 samples, 0.71%)</title><rect x="37.0166%" y="693" width="0.7103%" height="15" fill="rgb(249,219,21)" fg:x="469" fg:w="9"/><text x="37.2666%" y="703.50"></text></g><g><title>main (9 samples, 0.71%)</title><rect x="37.0166%" y="677" width="0.7103%" height="15" fill="rgb(205,209,3)" fg:x="469" fg:w="9"/><text x="37.2666%" y="687.50"></text></g><g><title>std::rt::lang_start_internal (9 samples, 0.71%)</title><rect x="37.0166%" y="661" width="0.7103%" height="15" fill="rgb(243,44,1)" fg:x="469" fg:w="9"/><text x="37.2666%" y="671.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.71%)</title><rect x="37.0166%" y="645" width="0.7103%" height="15" fill="rgb(206,159,16)" fg:x="469" fg:w="9"/><text x="37.2666%" y="655.50"></text></g><g><title>std::panicking::try (9 samples, 0.71%)</title><rect x="37.0166%" y="629" width="0.7103%" height="15" fill="rgb(244,77,30)" fg:x="469" fg:w="9"/><text x="37.2666%" y="639.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.71%)</title><rect x="37.0166%" y="613" width="0.7103%" height="15" fill="rgb(218,69,12)" fg:x="469" fg:w="9"/><text x="37.2666%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (9 samples, 0.71%)</title><rect x="37.0166%" y="597" width="0.7103%" height="15" fill="rgb(212,87,7)" fg:x="469" fg:w="9"/><text x="37.2666%" y="607.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.71%)</title><rect x="37.0166%" y="581" width="0.7103%" height="15" fill="rgb(245,114,25)" fg:x="469" fg:w="9"/><text x="37.2666%" y="591.50"></text></g><g><title>std::panicking::try (9 samples, 0.71%)</title><rect x="37.0166%" y="565" width="0.7103%" height="15" fill="rgb(210,61,42)" fg:x="469" fg:w="9"/><text x="37.2666%" y="575.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.71%)</title><rect x="37.0166%" y="549" width="0.7103%" height="15" fill="rgb(211,52,33)" fg:x="469" fg:w="9"/><text x="37.2666%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (9 samples, 0.71%)</title><rect x="37.0166%" y="533" width="0.7103%" height="15" fill="rgb(234,58,33)" fg:x="469" fg:w="9"/><text x="37.2666%" y="543.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (9 samples, 0.71%)</title><rect x="37.0166%" y="517" width="0.7103%" height="15" fill="rgb(220,115,36)" fg:x="469" fg:w="9"/><text x="37.2666%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.71%)</title><rect x="37.0166%" y="501" width="0.7103%" height="15" fill="rgb(243,153,54)" fg:x="469" fg:w="9"/><text x="37.2666%" y="511.50"></text></g><g><title>fun::main (9 samples, 0.71%)</title><rect x="37.0166%" y="485" width="0.7103%" height="15" fill="rgb(251,47,18)" fg:x="469" fg:w="9"/><text x="37.2666%" y="495.50"></text></g><g><title>std::fs::write::inner (1 samples, 0.08%)</title><rect x="37.6480%" y="469" width="0.0789%" height="15" fill="rgb(242,102,42)" fg:x="477" fg:w="1"/><text x="37.8980%" y="479.50"></text></g><g><title>std::fs::File::create (1 samples, 0.08%)</title><rect x="37.6480%" y="453" width="0.0789%" height="15" fill="rgb(234,31,38)" fg:x="477" fg:w="1"/><text x="37.8980%" y="463.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.08%)</title><rect x="37.6480%" y="437" width="0.0789%" height="15" fill="rgb(221,117,51)" fg:x="477" fg:w="1"/><text x="37.8980%" y="447.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.08%)</title><rect x="37.6480%" y="421" width="0.0789%" height="15" fill="rgb(212,20,18)" fg:x="477" fg:w="1"/><text x="37.8980%" y="431.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.08%)</title><rect x="37.6480%" y="405" width="0.0789%" height="15" fill="rgb(245,133,36)" fg:x="477" fg:w="1"/><text x="37.8980%" y="415.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.08%)</title><rect x="37.6480%" y="389" width="0.0789%" height="15" fill="rgb(212,6,19)" fg:x="477" fg:w="1"/><text x="37.8980%" y="399.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.08%)</title><rect x="37.6480%" y="373" width="0.0789%" height="15" fill="rgb(218,1,36)" fg:x="477" fg:w="1"/><text x="37.8980%" y="383.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.08%)</title><rect x="37.6480%" y="357" width="0.0789%" height="15" fill="rgb(246,84,54)" fg:x="477" fg:w="1"/><text x="37.8980%" y="367.50"></text></g><g><title>__libc_open64 (1 samples, 0.08%)</title><rect x="37.6480%" y="341" width="0.0789%" height="15" fill="rgb(242,110,6)" fg:x="477" fg:w="1"/><text x="37.8980%" y="351.50"></text></g><g><title>_dl_map_object_deps (2 samples, 0.16%)</title><rect x="37.7269%" y="645" width="0.1579%" height="15" fill="rgb(214,47,5)" fg:x="478" fg:w="2"/><text x="37.9769%" y="655.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="37.7269%" y="629" width="0.1579%" height="15" fill="rgb(218,159,25)" fg:x="478" fg:w="2"/><text x="37.9769%" y="639.50"></text></g><g><title>openaux (2 samples, 0.16%)</title><rect x="37.7269%" y="613" width="0.1579%" height="15" fill="rgb(215,211,28)" fg:x="478" fg:w="2"/><text x="37.9769%" y="623.50"></text></g><g><title>_dl_map_object (2 samples, 0.16%)</title><rect x="37.7269%" y="597" width="0.1579%" height="15" fill="rgb(238,59,32)" fg:x="478" fg:w="2"/><text x="37.9769%" y="607.50"></text></g><g><title>_dl_load_cache_lookup (1 samples, 0.08%)</title><rect x="37.8058%" y="581" width="0.0789%" height="15" fill="rgb(226,82,3)" fg:x="479" fg:w="1"/><text x="38.0558%" y="591.50"></text></g><g><title>search_cache (1 samples, 0.08%)</title><rect x="37.8058%" y="565" width="0.0789%" height="15" fill="rgb(240,164,32)" fg:x="479" fg:w="1"/><text x="38.0558%" y="575.50"></text></g><g><title>_dl_cache_libcmp (1 samples, 0.08%)</title><rect x="37.8058%" y="549" width="0.0789%" height="15" fill="rgb(232,46,7)" fg:x="479" fg:w="1"/><text x="38.0558%" y="559.50"></text></g><g><title>fun (13 samples, 1.03%)</title><rect x="36.9376%" y="725" width="1.0260%" height="15" fill="rgb(229,129,53)" fg:x="468" fg:w="13"/><text x="37.1876%" y="735.50"></text></g><g><title>_start (12 samples, 0.95%)</title><rect x="37.0166%" y="709" width="0.9471%" height="15" fill="rgb(234,188,29)" fg:x="469" fg:w="12"/><text x="37.2666%" y="719.50"></text></g><g><title>_dl_start (3 samples, 0.24%)</title><rect x="37.7269%" y="693" width="0.2368%" height="15" fill="rgb(246,141,4)" fg:x="478" fg:w="3"/><text x="37.9769%" y="703.50"></text></g><g><title>_dl_sysdep_start (3 samples, 0.24%)</title><rect x="37.7269%" y="677" width="0.2368%" height="15" fill="rgb(229,23,39)" fg:x="478" fg:w="3"/><text x="37.9769%" y="687.50"></text></g><g><title>dl_main (3 samples, 0.24%)</title><rect x="37.7269%" y="661" width="0.2368%" height="15" fill="rgb(206,12,3)" fg:x="478" fg:w="3"/><text x="37.9769%" y="671.50"></text></g><g><title>_dl_unload_cache (1 samples, 0.08%)</title><rect x="37.8848%" y="645" width="0.0789%" height="15" fill="rgb(252,226,20)" fg:x="480" fg:w="1"/><text x="38.1348%" y="655.50"></text></g><g><title>munmap (1 samples, 0.08%)</title><rect x="37.8848%" y="629" width="0.0789%" height="15" fill="rgb(216,123,35)" fg:x="480" fg:w="1"/><text x="38.1348%" y="639.50"></text></g><g><title>ipython (2 samples, 0.16%)</title><rect x="37.9637%" y="725" width="0.1579%" height="15" fill="rgb(212,68,40)" fg:x="481" fg:w="2"/><text x="38.2137%" y="735.50"></text></g><g><title>_start (2 samples, 0.16%)</title><rect x="37.9637%" y="709" width="0.1579%" height="15" fill="rgb(254,125,32)" fg:x="481" fg:w="2"/><text x="38.2137%" y="719.50"></text></g><g><title>_dl_start (1 samples, 0.08%)</title><rect x="38.0426%" y="693" width="0.0789%" height="15" fill="rgb(253,97,22)" fg:x="482" fg:w="1"/><text x="38.2926%" y="703.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.08%)</title><rect x="38.0426%" y="677" width="0.0789%" height="15" fill="rgb(241,101,14)" fg:x="482" fg:w="1"/><text x="38.2926%" y="687.50"></text></g><g><title>dl_main (1 samples, 0.08%)</title><rect x="38.0426%" y="661" width="0.0789%" height="15" fill="rgb(238,103,29)" fg:x="482" fg:w="1"/><text x="38.2926%" y="671.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.08%)</title><rect x="38.0426%" y="645" width="0.0789%" height="15" fill="rgb(233,195,47)" fg:x="482" fg:w="1"/><text x="38.2926%" y="655.50"></text></g><g><title>_dl_protect_relro (1 samples, 0.08%)</title><rect x="38.0426%" y="629" width="0.0789%" height="15" fill="rgb(246,218,30)" fg:x="482" fg:w="1"/><text x="38.2926%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.08%)</title><rect x="38.1215%" y="693" width="0.0789%" height="15" fill="rgb(219,145,47)" fg:x="483" fg:w="1"/><text x="38.3715%" y="703.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_start_matches (1 samples, 0.08%)</title><rect x="38.2005%" y="693" width="0.0789%" height="15" fill="rgb(243,12,26)" fg:x="484" fg:w="1"/><text x="38.4505%" y="703.50"></text></g><g><title>printer::printer::Printer&lt;W&gt;::print_input_char (1 samples, 0.08%)</title><rect x="38.2794%" y="693" width="0.0789%" height="15" fill="rgb(214,87,16)" fg:x="485" fg:w="1"/><text x="38.5294%" y="703.50"></text></g><g><title>[[heap]] (4 samples, 0.32%)</title><rect x="38.1215%" y="709" width="0.3157%" height="15" fill="rgb(208,99,42)" fg:x="483" fg:w="4"/><text x="38.3715%" y="719.50"></text></g><g><title>printer::printer::writer::Writer&lt;W&gt;::write_char_with_color (1 samples, 0.08%)</title><rect x="38.3583%" y="693" width="0.0789%" height="15" fill="rgb(253,99,2)" fg:x="486" fg:w="1"/><text x="38.6083%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="38.4373%" y="693" width="0.0789%" height="15" fill="rgb(220,168,23)" fg:x="487" fg:w="1"/><text x="38.6873%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="38.5162%" y="693" width="0.0789%" height="15" fill="rgb(242,38,24)" fg:x="488" fg:w="1"/><text x="38.7662%" y="703.50"></text></g><g><title>rustc_ap_rustc_lexer::first_token (1 samples, 0.08%)</title><rect x="38.5951%" y="693" width="0.0789%" height="15" fill="rgb(225,182,9)" fg:x="489" fg:w="1"/><text x="38.8451%" y="703.50"></text></g><g><title>[[stack]] (4 samples, 0.32%)</title><rect x="38.4373%" y="709" width="0.3157%" height="15" fill="rgb(243,178,37)" fg:x="487" fg:w="4"/><text x="38.6873%" y="719.50"></text></g><g><title>toml::tokens::Tokenizer::read_string (1 samples, 0.08%)</title><rect x="38.6740%" y="693" width="0.0789%" height="15" fill="rgb(232,139,19)" fg:x="490" fg:w="1"/><text x="38.9240%" y="703.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.7530%" y="693" width="0.0789%" height="15" fill="rgb(225,201,24)" fg:x="491" fg:w="1"/><text x="39.0030%" y="703.50"></text></g><g><title>[irust] (2 samples, 0.16%)</title><rect x="38.7530%" y="709" width="0.1579%" height="15" fill="rgb(221,47,46)" fg:x="491" fg:w="2"/><text x="39.0030%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.08%)</title><rect x="38.8319%" y="693" width="0.0789%" height="15" fill="rgb(249,23,13)" fg:x="492" fg:w="1"/><text x="39.0819%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="38.9108%" y="693" width="0.0789%" height="15" fill="rgb(219,9,5)" fg:x="493" fg:w="1"/><text x="39.1608%" y="703.50"></text></g><g><title>&lt;crossterm::event::source::unix::UnixInternalEventSource as crossterm::event::source::EventSource&gt;::try_read (1 samples, 0.08%)</title><rect x="38.9897%" y="693" width="0.0789%" height="15" fill="rgb(254,171,16)" fg:x="494" fg:w="1"/><text x="39.2397%" y="703.50"></text></g><g><title>__libc_start_main (1 samples, 0.08%)</title><rect x="39.0687%" y="693" width="0.0789%" height="15" fill="rgb(230,171,20)" fg:x="495" fg:w="1"/><text x="39.3187%" y="703.50"></text></g><g><title>main (1 samples, 0.08%)</title><rect x="39.0687%" y="677" width="0.0789%" height="15" fill="rgb(210,71,41)" fg:x="495" fg:w="1"/><text x="39.3187%" y="687.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.08%)</title><rect x="39.0687%" y="661" width="0.0789%" height="15" fill="rgb(206,173,20)" fg:x="495" fg:w="1"/><text x="39.3187%" y="671.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.08%)</title><rect x="39.0687%" y="645" width="0.0789%" height="15" fill="rgb(233,88,34)" fg:x="495" fg:w="1"/><text x="39.3187%" y="655.50"></text></g><g><title>std::panicking::try (1 samples, 0.08%)</title><rect x="39.0687%" y="629" width="0.0789%" height="15" fill="rgb(223,209,46)" fg:x="495" fg:w="1"/><text x="39.3187%" y="639.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.08%)</title><rect x="39.0687%" y="613" width="0.0789%" height="15" fill="rgb(250,43,18)" fg:x="495" fg:w="1"/><text x="39.3187%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.08%)</title><rect x="39.0687%" y="597" width="0.0789%" height="15" fill="rgb(208,13,10)" fg:x="495" fg:w="1"/><text x="39.3187%" y="607.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.08%)</title><rect x="39.0687%" y="581" width="0.0789%" height="15" fill="rgb(212,200,36)" fg:x="495" fg:w="1"/><text x="39.3187%" y="591.50"></text></g><g><title>std::panicking::try (1 samples, 0.08%)</title><rect x="39.0687%" y="565" width="0.0789%" height="15" fill="rgb(225,90,30)" fg:x="495" fg:w="1"/><text x="39.3187%" y="575.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.08%)</title><rect x="39.0687%" y="549" width="0.0789%" height="15" fill="rgb(236,182,39)" fg:x="495" fg:w="1"/><text x="39.3187%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.08%)</title><rect x="39.0687%" y="533" width="0.0789%" height="15" fill="rgb(212,144,35)" fg:x="495" fg:w="1"/><text x="39.3187%" y="543.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.08%)</title><rect x="39.0687%" y="517" width="0.0789%" height="15" fill="rgb(228,63,44)" fg:x="495" fg:w="1"/><text x="39.3187%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.08%)</title><rect x="39.0687%" y="501" width="0.0789%" height="15" fill="rgb(228,109,6)" fg:x="495" fg:w="1"/><text x="39.3187%" y="511.50"></text></g><g><title>irust::main (1 samples, 0.08%)</title><rect x="39.0687%" y="485" width="0.0789%" height="15" fill="rgb(238,117,24)" fg:x="495" fg:w="1"/><text x="39.3187%" y="495.50"></text></g><g><title>irust::irust::IRust::new (1 samples, 0.08%)</title><rect x="39.0687%" y="469" width="0.0789%" height="15" fill="rgb(242,26,26)" fg:x="495" fg:w="1"/><text x="39.3187%" y="479.50"></text></g><g><title>irust::irust::script::script4::ScriptManager4::new (1 samples, 0.08%)</title><rect x="39.0687%" y="453" width="0.0789%" height="15" fill="rgb(221,92,48)" fg:x="495" fg:w="1"/><text x="39.3187%" y="463.50"></text></g><g><title>rscript::ScriptManager::add_scripts_by_path (1 samples, 0.08%)</title><rect x="39.0687%" y="437" width="0.0789%" height="15" fill="rgb(209,209,32)" fg:x="495" fg:w="1"/><text x="39.3187%" y="447.50"></text></g><g><title>rscript::ScriptManager::add_scripts_by_path::start_script (1 samples, 0.08%)</title><rect x="39.0687%" y="421" width="0.0789%" height="15" fill="rgb(221,70,22)" fg:x="495" fg:w="1"/><text x="39.3187%" y="431.50"></text></g><g><title>std::process::Command::spawn (1 samples, 0.08%)</title><rect x="39.0687%" y="405" width="0.0789%" height="15" fill="rgb(248,145,5)" fg:x="495" fg:w="1"/><text x="39.3187%" y="415.50"></text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::spawn (1 samples, 0.08%)</title><rect x="39.0687%" y="389" width="0.0789%" height="15" fill="rgb(226,116,26)" fg:x="495" fg:w="1"/><text x="39.3187%" y="399.50"></text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::posix_spawn (1 samples, 0.08%)</title><rect x="39.0687%" y="373" width="0.0789%" height="15" fill="rgb(244,5,17)" fg:x="495" fg:w="1"/><text x="39.3187%" y="383.50"></text></g><g><title>__posix_spawnp (1 samples, 0.08%)</title><rect x="39.0687%" y="357" width="0.0789%" height="15" fill="rgb(252,159,33)" fg:x="495" fg:w="1"/><text x="39.3187%" y="367.50"></text></g><g><title>__spawni (1 samples, 0.08%)</title><rect x="39.0687%" y="341" width="0.0789%" height="15" fill="rgb(206,71,0)" fg:x="495" fg:w="1"/><text x="39.3187%" y="351.50"></text></g><g><title>__spawnix (1 samples, 0.08%)</title><rect x="39.0687%" y="325" width="0.0789%" height="15" fill="rgb(233,118,54)" fg:x="495" fg:w="1"/><text x="39.3187%" y="335.50"></text></g><g><title>__GI_munmap (1 samples, 0.08%)</title><rect x="39.0687%" y="309" width="0.0789%" height="15" fill="rgb(234,83,48)" fg:x="495" fg:w="1"/><text x="39.3187%" y="319.50"></text></g><g><title>__GI___dup2 (1 samples, 0.08%)</title><rect x="39.2265%" y="677" width="0.0789%" height="15" fill="rgb(228,3,54)" fg:x="497" fg:w="1"/><text x="39.4765%" y="687.50"></text></g><g><title>__GI___libc_sigaction (6 samples, 0.47%)</title><rect x="39.3054%" y="677" width="0.4736%" height="15" fill="rgb(226,155,13)" fg:x="498" fg:w="6"/><text x="39.5554%" y="687.50"></text></g><g><title>__execvpe_common (1 samples, 0.08%)</title><rect x="39.7790%" y="677" width="0.0789%" height="15" fill="rgb(241,28,37)" fg:x="504" fg:w="1"/><text x="40.0290%" y="687.50"></text></g><g><title>__GI_execve (1 samples, 0.08%)</title><rect x="39.7790%" y="661" width="0.0789%" height="15" fill="rgb(233,93,10)" fg:x="504" fg:w="1"/><text x="40.0290%" y="671.50"></text></g><g><title>__spawni_child (11 samples, 0.87%)</title><rect x="39.1476%" y="693" width="0.8682%" height="15" fill="rgb(225,113,19)" fg:x="496" fg:w="11"/><text x="39.3976%" y="703.50"></text></g><g><title>__sigprocmask (2 samples, 0.16%)</title><rect x="39.8579%" y="677" width="0.1579%" height="15" fill="rgb(241,2,18)" fg:x="505" fg:w="2"/><text x="40.1079%" y="687.50"></text></g><g><title>__pthread_sigmask (2 samples, 0.16%)</title><rect x="39.8579%" y="661" width="0.1579%" height="15" fill="rgb(228,207,21)" fg:x="505" fg:w="2"/><text x="40.1079%" y="671.50"></text></g><g><title>[unknown] (15 samples, 1.18%)</title><rect x="38.9108%" y="709" width="1.1839%" height="15" fill="rgb(213,211,35)" fg:x="493" fg:w="15"/><text x="39.1608%" y="719.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.08%)</title><rect x="40.0158%" y="693" width="0.0789%" height="15" fill="rgb(209,83,10)" fg:x="507" fg:w="1"/><text x="40.2658%" y="703.50"></text></g><g><title>__GI___clone (37 samples, 2.92%)</title><rect x="40.0947%" y="709" width="2.9203%" height="15" fill="rgb(209,164,1)" fg:x="508" fg:w="37"/><text x="40.3447%" y="719.50">__..</text></g><g><title>__GI___tunables_init (1 samples, 0.08%)</title><rect x="43.0150%" y="709" width="0.0789%" height="15" fill="rgb(213,184,43)" fg:x="545" fg:w="1"/><text x="43.2650%" y="719.50"></text></g><g><title>__bss_start (1 samples, 0.08%)</title><rect x="43.0939%" y="709" width="0.0789%" height="15" fill="rgb(231,61,34)" fg:x="546" fg:w="1"/><text x="43.3439%" y="719.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="43.0939%" y="693" width="0.0789%" height="15" fill="rgb(235,75,3)" fg:x="546" fg:w="1"/><text x="43.3439%" y="703.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="43.1728%" y="709" width="0.0789%" height="15" fill="rgb(220,106,47)" fg:x="547" fg:w="1"/><text x="43.4228%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.8043%" y="389" width="0.0789%" height="15" fill="rgb(210,196,33)" fg:x="555" fg:w="1"/><text x="44.0543%" y="399.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="43.8043%" y="373" width="0.0789%" height="15" fill="rgb(229,154,42)" fg:x="555" fg:w="1"/><text x="44.0543%" y="383.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="43.8043%" y="357" width="0.0789%" height="15" fill="rgb(228,114,26)" fg:x="555" fg:w="1"/><text x="44.0543%" y="367.50"></text></g><g><title>sysmalloc (1 samples, 0.08%)</title><rect x="43.8043%" y="341" width="0.0789%" height="15" fill="rgb(208,144,1)" fg:x="555" fg:w="1"/><text x="44.0543%" y="351.50"></text></g><g><title>__GI___default_morecore (1 samples, 0.08%)</title><rect x="43.8043%" y="325" width="0.0789%" height="15" fill="rgb(239,112,37)" fg:x="555" fg:w="1"/><text x="44.0543%" y="335.50"></text></g><g><title>__GI___sbrk (1 samples, 0.08%)</title><rect x="43.8043%" y="309" width="0.0789%" height="15" fill="rgb(210,96,50)" fg:x="555" fg:w="1"/><text x="44.0543%" y="319.50"></text></g><g><title>__brk (1 samples, 0.08%)</title><rect x="43.8043%" y="293" width="0.0789%" height="15" fill="rgb(222,178,2)" fg:x="555" fg:w="1"/><text x="44.0543%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.8832%" y="389" width="0.0789%" height="15" fill="rgb(226,74,18)" fg:x="556" fg:w="1"/><text x="44.1332%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.8832%" y="373" width="0.0789%" height="15" fill="rgb(225,67,54)" fg:x="556" fg:w="1"/><text x="44.1332%" y="383.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.08%)</title><rect x="43.8832%" y="357" width="0.0789%" height="15" fill="rgb(251,92,32)" fg:x="556" fg:w="1"/><text x="44.1332%" y="367.50"></text></g><g><title>_int_realloc (1 samples, 0.08%)</title><rect x="43.8832%" y="341" width="0.0789%" height="15" fill="rgb(228,149,22)" fg:x="556" fg:w="1"/><text x="44.1332%" y="351.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="43.8832%" y="325" width="0.0789%" height="15" fill="rgb(243,54,13)" fg:x="556" fg:w="1"/><text x="44.1332%" y="335.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="43.9621%" y="389" width="0.0789%" height="15" fill="rgb(243,180,28)" fg:x="557" fg:w="1"/><text x="44.2121%" y="399.50"></text></g><g><title>irust::irust::history::History::save::_{{closure}} (1 samples, 0.08%)</title><rect x="43.9621%" y="373" width="0.0789%" height="15" fill="rgb(208,167,24)" fg:x="557" fg:w="1"/><text x="44.2121%" y="383.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.08%)</title><rect x="43.9621%" y="357" width="0.0789%" height="15" fill="rgb(245,73,45)" fg:x="557" fg:w="1"/><text x="44.2121%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;irust::irust::IRust&gt; (4 samples, 0.32%)</title><rect x="43.8043%" y="469" width="0.3157%" height="15" fill="rgb(237,203,48)" fg:x="555" fg:w="4"/><text x="44.0543%" y="479.50"></text></g><g><title>&lt;irust::irust::IRust as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="43.8043%" y="453" width="0.3157%" height="15" fill="rgb(211,197,16)" fg:x="555" fg:w="4"/><text x="44.0543%" y="463.50"></text></g><g><title>irust::irust::engine::&lt;impl irust::irust::IRust&gt;::execute (4 samples, 0.32%)</title><rect x="43.8043%" y="437" width="0.3157%" height="15" fill="rgb(243,99,51)" fg:x="555" fg:w="4"/><text x="44.0543%" y="447.50"></text></g><g><title>irust::irust::engine::&lt;impl irust::irust::IRust&gt;::_execute (4 samples, 0.32%)</title><rect x="43.8043%" y="421" width="0.3157%" height="15" fill="rgb(215,123,29)" fg:x="555" fg:w="4"/><text x="44.0543%" y="431.50"></text></g><g><title>irust::irust::history::History::save (4 samples, 0.32%)</title><rect x="43.8043%" y="405" width="0.3157%" height="15" fill="rgb(239,186,37)" fg:x="555" fg:w="4"/><text x="44.0543%" y="415.50"></text></g><g><title>std::fs::write::inner (1 samples, 0.08%)</title><rect x="44.0410%" y="389" width="0.0789%" height="15" fill="rgb(252,136,39)" fg:x="558" fg:w="1"/><text x="44.2910%" y="399.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="44.0410%" y="373" width="0.0789%" height="15" fill="rgb(223,213,32)" fg:x="558" fg:w="1"/><text x="44.2910%" y="383.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="44.0410%" y="357" width="0.0789%" height="15" fill="rgb(233,115,5)" fg:x="558" fg:w="1"/><text x="44.2910%" y="367.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.08%)</title><rect x="44.0410%" y="341" width="0.0789%" height="15" fill="rgb(207,226,44)" fg:x="558" fg:w="1"/><text x="44.2910%" y="351.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="44.0410%" y="325" width="0.0789%" height="15" fill="rgb(208,126,0)" fg:x="558" fg:w="1"/><text x="44.2910%" y="335.50"></text></g><g><title>__libc_write (1 samples, 0.08%)</title><rect x="44.0410%" y="309" width="0.0789%" height="15" fill="rgb(244,66,21)" fg:x="558" fg:w="1"/><text x="44.2910%" y="319.50"></text></g><g><title>irust::irust::history::History::new (1 samples, 0.08%)</title><rect x="44.1200%" y="453" width="0.0789%" height="15" fill="rgb(222,97,12)" fg:x="559" fg:w="1"/><text x="44.3700%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="44.1200%" y="437" width="0.0789%" height="15" fill="rgb(219,213,19)" fg:x="559" fg:w="1"/><text x="44.3700%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="44.1200%" y="421" width="0.0789%" height="15" fill="rgb(252,169,30)" fg:x="559" fg:w="1"/><text x="44.3700%" y="431.50"></text></g><g><title>irust::irust::racer::Racer::start (1 samples, 0.08%)</title><rect x="44.1989%" y="453" width="0.0789%" height="15" fill="rgb(206,32,51)" fg:x="560" fg:w="1"/><text x="44.4489%" y="463.50"></text></g><g><title>std::process::Command::spawn (1 samples, 0.08%)</title><rect x="44.1989%" y="437" width="0.0789%" height="15" fill="rgb(250,172,42)" fg:x="560" fg:w="1"/><text x="44.4489%" y="447.50"></text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::spawn (1 samples, 0.08%)</title><rect x="44.1989%" y="421" width="0.0789%" height="15" fill="rgb(209,34,43)" fg:x="560" fg:w="1"/><text x="44.4489%" y="431.50"></text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::posix_spawn (1 samples, 0.08%)</title><rect x="44.1989%" y="405" width="0.0789%" height="15" fill="rgb(223,11,35)" fg:x="560" fg:w="1"/><text x="44.4489%" y="415.50"></text></g><g><title>__posix_spawnp (1 samples, 0.08%)</title><rect x="44.1989%" y="389" width="0.0789%" height="15" fill="rgb(251,219,26)" fg:x="560" fg:w="1"/><text x="44.4489%" y="399.50"></text></g><g><title>__spawni (1 samples, 0.08%)</title><rect x="44.1989%" y="373" width="0.0789%" height="15" fill="rgb(231,119,3)" fg:x="560" fg:w="1"/><text x="44.4489%" y="383.50"></text></g><g><title>__spawnix (1 samples, 0.08%)</title><rect x="44.1989%" y="357" width="0.0789%" height="15" fill="rgb(216,97,11)" fg:x="560" fg:w="1"/><text x="44.4489%" y="367.50"></text></g><g><title>__GI_munmap (1 samples, 0.08%)</title><rect x="44.1989%" y="341" width="0.0789%" height="15" fill="rgb(223,59,9)" fg:x="560" fg:w="1"/><text x="44.4489%" y="351.50"></text></g><g><title>rscript::ScriptManager::add_dynamic_scripts_by_path (1 samples, 0.08%)</title><rect x="44.2778%" y="437" width="0.0789%" height="15" fill="rgb(233,93,31)" fg:x="561" fg:w="1"/><text x="44.5278%" y="447.50"></text></g><g><title>std::path::Path::is_file (1 samples, 0.08%)</title><rect x="44.2778%" y="421" width="0.0789%" height="15" fill="rgb(239,81,33)" fg:x="561" fg:w="1"/><text x="44.5278%" y="431.50"></text></g><g><title>std::fs::metadata (1 samples, 0.08%)</title><rect x="44.2778%" y="405" width="0.0789%" height="15" fill="rgb(213,120,34)" fg:x="561" fg:w="1"/><text x="44.5278%" y="415.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="44.2778%" y="389" width="0.0789%" height="15" fill="rgb(243,49,53)" fg:x="561" fg:w="1"/><text x="44.5278%" y="399.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="44.2778%" y="373" width="0.0789%" height="15" fill="rgb(247,216,33)" fg:x="561" fg:w="1"/><text x="44.5278%" y="383.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.08%)</title><rect x="44.2778%" y="357" width="0.0789%" height="15" fill="rgb(226,26,14)" fg:x="561" fg:w="1"/><text x="44.5278%" y="367.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="44.2778%" y="341" width="0.0789%" height="15" fill="rgb(215,49,53)" fg:x="561" fg:w="1"/><text x="44.5278%" y="351.50"></text></g><g><title>rscript::ScriptManager::add_scripts_by_path (1 samples, 0.08%)</title><rect x="44.3567%" y="437" width="0.0789%" height="15" fill="rgb(245,162,40)" fg:x="562" fg:w="1"/><text x="44.6067%" y="447.50"></text></g><g><title>rscript::ScriptManager::add_scripts_by_path::start_script (1 samples, 0.08%)</title><rect x="44.3567%" y="421" width="0.0789%" height="15" fill="rgb(229,68,17)" fg:x="562" fg:w="1"/><text x="44.6067%" y="431.50"></text></g><g><title>&lt;&amp;mut bincode::de::Deserializer&lt;R,O&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.3567%" y="405" width="0.0789%" height="15" fill="rgb(213,182,10)" fg:x="562" fg:w="1"/><text x="44.6067%" y="415.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::boxed::Box&lt;[T]&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.3567%" y="389" width="0.0789%" height="15" fill="rgb(245,125,30)" fg:x="562" fg:w="1"/><text x="44.6067%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="44.3567%" y="373" width="0.0789%" height="15" fill="rgb(232,202,2)" fg:x="562" fg:w="1"/><text x="44.6067%" y="383.50"></text></g><g><title>irust::irust::script::script4::ScriptManager4::new (3 samples, 0.24%)</title><rect x="44.2778%" y="453" width="0.2368%" height="15" fill="rgb(237,140,51)" fg:x="561" fg:w="3"/><text x="44.5278%" y="463.50"></text></g><g><title>std::fs::read_to_string::inner (1 samples, 0.08%)</title><rect x="44.4357%" y="437" width="0.0789%" height="15" fill="rgb(236,157,25)" fg:x="563" fg:w="1"/><text x="44.6857%" y="447.50"></text></g><g><title>std::fs::File::open (1 samples, 0.08%)</title><rect x="44.4357%" y="421" width="0.0789%" height="15" fill="rgb(219,209,0)" fg:x="563" fg:w="1"/><text x="44.6857%" y="431.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.08%)</title><rect x="44.4357%" y="405" width="0.0789%" height="15" fill="rgb(240,116,54)" fg:x="563" fg:w="1"/><text x="44.6857%" y="415.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.08%)</title><rect x="44.4357%" y="389" width="0.0789%" height="15" fill="rgb(216,10,36)" fg:x="563" fg:w="1"/><text x="44.6857%" y="399.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.08%)</title><rect x="44.4357%" y="373" width="0.0789%" height="15" fill="rgb(222,72,44)" fg:x="563" fg:w="1"/><text x="44.6857%" y="383.50"></text></g><g><title>std::sys::unix::fs::cstr (1 samples, 0.08%)</title><rect x="44.4357%" y="357" width="0.0789%" height="15" fill="rgb(232,159,9)" fg:x="563" fg:w="1"/><text x="44.6857%" y="367.50"></text></g><g><title>std::ffi::c_str::CString::new (1 samples, 0.08%)</title><rect x="44.4357%" y="341" width="0.0789%" height="15" fill="rgb(210,39,32)" fg:x="563" fg:w="1"/><text x="44.6857%" y="351.50"></text></g><g><title>&lt;&amp;[u8] as std::ffi::c_str::CString::new::SpecIntoVec&gt;::into_vec (1 samples, 0.08%)</title><rect x="44.4357%" y="325" width="0.0789%" height="15" fill="rgb(216,194,45)" fg:x="563" fg:w="1"/><text x="44.6857%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="44.4357%" y="309" width="0.0789%" height="15" fill="rgb(218,18,35)" fg:x="563" fg:w="1"/><text x="44.6857%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.4357%" y="293" width="0.0789%" height="15" fill="rgb(207,83,51)" fg:x="563" fg:w="1"/><text x="44.6857%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.4357%" y="277" width="0.0789%" height="15" fill="rgb(225,63,43)" fg:x="563" fg:w="1"/><text x="44.6857%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.4357%" y="261" width="0.0789%" height="15" fill="rgb(207,57,36)" fg:x="563" fg:w="1"/><text x="44.6857%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.4357%" y="245" width="0.0789%" height="15" fill="rgb(216,99,33)" fg:x="563" fg:w="1"/><text x="44.6857%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.4357%" y="229" width="0.0789%" height="15" fill="rgb(225,42,16)" fg:x="563" fg:w="1"/><text x="44.6857%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.4357%" y="213" width="0.0789%" height="15" fill="rgb(220,201,45)" fg:x="563" fg:w="1"/><text x="44.6857%" y="223.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="44.4357%" y="197" width="0.0789%" height="15" fill="rgb(225,33,4)" fg:x="563" fg:w="1"/><text x="44.6857%" y="207.50"></text></g><g><title>irust::irust::IRust::new (6 samples, 0.47%)</title><rect x="44.1200%" y="469" width="0.4736%" height="15" fill="rgb(224,33,50)" fg:x="559" fg:w="6"/><text x="44.3700%" y="479.50"></text></g><g><title>irust_repl::Repl::new (1 samples, 0.08%)</title><rect x="44.5146%" y="453" width="0.0789%" height="15" fill="rgb(246,198,51)" fg:x="564" fg:w="1"/><text x="44.7646%" y="463.50"></text></g><g><title>irust_repl::cargo_cmds::cargo_build (1 samples, 0.08%)</title><rect x="44.5146%" y="437" width="0.0789%" height="15" fill="rgb(205,22,4)" fg:x="564" fg:w="1"/><text x="44.7646%" y="447.50"></text></g><g><title>std::process::Command::spawn (1 samples, 0.08%)</title><rect x="44.5146%" y="421" width="0.0789%" height="15" fill="rgb(206,3,8)" fg:x="564" fg:w="1"/><text x="44.7646%" y="431.50"></text></g><g><title>std::sys::unix::process::process_inner::&lt;impl std::sys::unix::process::process_common::Command&gt;::spawn (1 samples, 0.08%)</title><rect x="44.5146%" y="405" width="0.0789%" height="15" fill="rgb(251,23,15)" fg:x="564" fg:w="1"/><text x="44.7646%" y="415.50"></text></g><g><title>std::sys::unix::process::process_common::Command::capture_env (1 samples, 0.08%)</title><rect x="44.5146%" y="389" width="0.0789%" height="15" fill="rgb(252,88,28)" fg:x="564" fg:w="1"/><text x="44.7646%" y="399.50"></text></g><g><title>std::sys_common::process::CommandEnv::capture_if_changed (1 samples, 0.08%)</title><rect x="44.5146%" y="373" width="0.0789%" height="15" fill="rgb(212,127,14)" fg:x="564" fg:w="1"/><text x="44.7646%" y="383.50"></text></g><g><title>std::sys_common::process::CommandEnv::capture (1 samples, 0.08%)</title><rect x="44.5146%" y="357" width="0.0789%" height="15" fill="rgb(247,145,37)" fg:x="564" fg:w="1"/><text x="44.7646%" y="367.50"></text></g><g><title>std::env::vars_os (1 samples, 0.08%)</title><rect x="44.5146%" y="341" width="0.0789%" height="15" fill="rgb(209,117,53)" fg:x="564" fg:w="1"/><text x="44.7646%" y="351.50"></text></g><g><title>std::sys::unix::os::env (1 samples, 0.08%)</title><rect x="44.5146%" y="325" width="0.0789%" height="15" fill="rgb(212,90,42)" fg:x="564" fg:w="1"/><text x="44.7646%" y="335.50"></text></g><g><title>std::sys::unix::os::env::parse (1 samples, 0.08%)</title><rect x="44.5146%" y="309" width="0.0789%" height="15" fill="rgb(218,164,37)" fg:x="564" fg:w="1"/><text x="44.7646%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.08%)</title><rect x="44.5146%" y="293" width="0.0789%" height="15" fill="rgb(246,65,34)" fg:x="564" fg:w="1"/><text x="44.7646%" y="303.50"></text></g><g><title>std::sys::unix::os::env::parse::{{closure}} (1 samples, 0.08%)</title><rect x="44.5146%" y="277" width="0.0789%" height="15" fill="rgb(231,100,33)" fg:x="564" fg:w="1"/><text x="44.7646%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.5146%" y="261" width="0.0789%" height="15" fill="rgb(228,126,14)" fg:x="564" fg:w="1"/><text x="44.7646%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.5146%" y="245" width="0.0789%" height="15" fill="rgb(215,173,21)" fg:x="564" fg:w="1"/><text x="44.7646%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.5146%" y="229" width="0.0789%" height="15" fill="rgb(210,6,40)" fg:x="564" fg:w="1"/><text x="44.7646%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.5146%" y="213" width="0.0789%" height="15" fill="rgb(212,48,18)" fg:x="564" fg:w="1"/><text x="44.7646%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5146%" y="197" width="0.0789%" height="15" fill="rgb(230,214,11)" fg:x="564" fg:w="1"/><text x="44.7646%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5146%" y="181" width="0.0789%" height="15" fill="rgb(254,105,39)" fg:x="564" fg:w="1"/><text x="44.7646%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.5146%" y="165" width="0.0789%" height="15" fill="rgb(245,158,5)" fg:x="564" fg:w="1"/><text x="44.7646%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.5146%" y="149" width="0.0789%" height="15" fill="rgb(249,208,11)" fg:x="564" fg:w="1"/><text x="44.7646%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.5146%" y="133" width="0.0789%" height="15" fill="rgb(210,39,28)" fg:x="564" fg:w="1"/><text x="44.7646%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.5146%" y="117" width="0.0789%" height="15" fill="rgb(211,56,53)" fg:x="564" fg:w="1"/><text x="44.7646%" y="127.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="44.5146%" y="101" width="0.0789%" height="15" fill="rgb(226,201,30)" fg:x="564" fg:w="1"/><text x="44.7646%" y="111.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="44.5146%" y="85" width="0.0789%" height="15" fill="rgb(239,101,34)" fg:x="564" fg:w="1"/><text x="44.7646%" y="95.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::flush (2 samples, 0.16%)</title><rect x="44.5935%" y="453" width="0.1579%" height="15" fill="rgb(226,209,5)" fg:x="565" fg:w="2"/><text x="44.8435%" y="463.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (2 samples, 0.16%)</title><rect x="44.5935%" y="437" width="0.1579%" height="15" fill="rgb(250,105,47)" fg:x="565" fg:w="2"/><text x="44.8435%" y="447.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::flush (2 samples, 0.16%)</title><rect x="44.5935%" y="421" width="0.1579%" height="15" fill="rgb(230,72,3)" fg:x="565" fg:w="2"/><text x="44.8435%" y="431.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::flush (2 samples, 0.16%)</title><rect x="44.5935%" y="405" width="0.1579%" height="15" fill="rgb(232,218,39)" fg:x="565" fg:w="2"/><text x="44.8435%" y="415.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::flush (2 samples, 0.16%)</title><rect x="44.5935%" y="389" width="0.1579%" height="15" fill="rgb(248,166,6)" fg:x="565" fg:w="2"/><text x="44.8435%" y="399.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (2 samples, 0.16%)</title><rect x="44.5935%" y="373" width="0.1579%" height="15" fill="rgb(247,89,20)" fg:x="565" fg:w="2"/><text x="44.8435%" y="383.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="44.5935%" y="357" width="0.1579%" height="15" fill="rgb(248,130,54)" fg:x="565" fg:w="2"/><text x="44.8435%" y="367.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="44.5935%" y="341" width="0.1579%" height="15" fill="rgb(234,196,4)" fg:x="565" fg:w="2"/><text x="44.8435%" y="351.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (2 samples, 0.16%)</title><rect x="44.5935%" y="325" width="0.1579%" height="15" fill="rgb(250,143,31)" fg:x="565" fg:w="2"/><text x="44.8435%" y="335.50"></text></g><g><title>__libc_write (2 samples, 0.16%)</title><rect x="44.5935%" y="309" width="0.1579%" height="15" fill="rgb(211,110,34)" fg:x="565" fg:w="2"/><text x="44.8435%" y="319.50"></text></g><g><title>__libc_read (2 samples, 0.16%)</title><rect x="44.9092%" y="389" width="0.1579%" height="15" fill="rgb(215,124,48)" fg:x="569" fg:w="2"/><text x="45.1592%" y="399.50"></text></g><g><title>crossterm::event::read (21 samples, 1.66%)</title><rect x="44.7514%" y="453" width="1.6575%" height="15" fill="rgb(216,46,13)" fg:x="567" fg:w="21"/><text x="45.0014%" y="463.50"></text></g><g><title>crossterm::event::read::InternalEventReader::read (21 samples, 1.66%)</title><rect x="44.7514%" y="437" width="1.6575%" height="15" fill="rgb(205,184,25)" fg:x="567" fg:w="21"/><text x="45.0014%" y="447.50"></text></g><g><title>crossterm::event::read::InternalEventReader::poll (21 samples, 1.66%)</title><rect x="44.7514%" y="421" width="1.6575%" height="15" fill="rgb(228,1,10)" fg:x="567" fg:w="21"/><text x="45.0014%" y="431.50"></text></g><g><title>&lt;crossterm::event::source::unix::UnixInternalEventSource as crossterm::event::source::EventSource&gt;::try_read (21 samples, 1.66%)</title><rect x="44.7514%" y="405" width="1.6575%" height="15" fill="rgb(213,116,27)" fg:x="567" fg:w="21"/><text x="45.0014%" y="415.50"></text></g><g><title>mio::poll::Poll::poll (17 samples, 1.34%)</title><rect x="45.0671%" y="389" width="1.3418%" height="15" fill="rgb(241,95,50)" fg:x="571" fg:w="17"/><text x="45.3171%" y="399.50"></text></g><g><title>epoll_wait (17 samples, 1.34%)</title><rect x="45.0671%" y="373" width="1.3418%" height="15" fill="rgb(238,48,32)" fg:x="571" fg:w="17"/><text x="45.3171%" y="383.50"></text></g><g><title>irust::irust::engine::&lt;impl irust::irust::IRust&gt;::execute (1 samples, 0.08%)</title><rect x="46.4088%" y="389" width="0.0789%" height="15" fill="rgb(235,113,49)" fg:x="588" fg:w="1"/><text x="46.6588%" y="399.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="46.4088%" y="373" width="0.0789%" height="15" fill="rgb(205,127,43)" fg:x="588" fg:w="1"/><text x="46.6588%" y="383.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="46.4088%" y="357" width="0.0789%" height="15" fill="rgb(250,162,2)" fg:x="588" fg:w="1"/><text x="46.6588%" y="367.50"></text></g><g><title>irust::irust::IRust::print_input::{{closure}} (1 samples, 0.08%)</title><rect x="46.4878%" y="373" width="0.0789%" height="15" fill="rgb(220,13,41)" fg:x="589" fg:w="1"/><text x="46.7378%" y="383.50"></text></g><g><title>irust::irust::highlight::highlight (1 samples, 0.08%)</title><rect x="46.4878%" y="357" width="0.0789%" height="15" fill="rgb(249,221,25)" fg:x="589" fg:w="1"/><text x="46.7378%" y="367.50"></text></g><g><title>printer::printer::PrintQueue::push (1 samples, 0.08%)</title><rect x="46.4878%" y="341" width="0.0789%" height="15" fill="rgb(215,208,19)" fg:x="589" fg:w="1"/><text x="46.7378%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.5667%" y="293" width="0.0789%" height="15" fill="rgb(236,175,2)" fg:x="590" fg:w="1"/><text x="46.8167%" y="303.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="46.5667%" y="277" width="0.0789%" height="15" fill="rgb(241,52,2)" fg:x="590" fg:w="1"/><text x="46.8167%" y="287.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.5667%" y="261" width="0.0789%" height="15" fill="rgb(248,140,14)" fg:x="590" fg:w="1"/><text x="46.8167%" y="271.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.5667%" y="245" width="0.0789%" height="15" fill="rgb(253,22,42)" fg:x="590" fg:w="1"/><text x="46.8167%" y="255.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.5667%" y="229" width="0.0789%" height="15" fill="rgb(234,61,47)" fg:x="590" fg:w="1"/><text x="46.8167%" y="239.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.5667%" y="213" width="0.0789%" height="15" fill="rgb(208,226,15)" fg:x="590" fg:w="1"/><text x="46.8167%" y="223.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.5667%" y="197" width="0.0789%" height="15" fill="rgb(217,221,4)" fg:x="590" fg:w="1"/><text x="46.8167%" y="207.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.5667%" y="181" width="0.0789%" height="15" fill="rgb(212,174,34)" fg:x="590" fg:w="1"/><text x="46.8167%" y="191.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_cold (1 samples, 0.08%)</title><rect x="46.5667%" y="165" width="0.0789%" height="15" fill="rgb(253,83,4)" fg:x="590" fg:w="1"/><text x="46.8167%" y="175.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.08%)</title><rect x="46.5667%" y="149" width="0.0789%" height="15" fill="rgb(250,195,49)" fg:x="590" fg:w="1"/><text x="46.8167%" y="159.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.5667%" y="133" width="0.0789%" height="15" fill="rgb(241,192,25)" fg:x="590" fg:w="1"/><text x="46.8167%" y="143.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.5667%" y="117" width="0.0789%" height="15" fill="rgb(208,124,10)" fg:x="590" fg:w="1"/><text x="46.8167%" y="127.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="46.5667%" y="101" width="0.0789%" height="15" fill="rgb(222,33,0)" fg:x="590" fg:w="1"/><text x="46.8167%" y="111.50"></text></g><g><title>__libc_write (1 samples, 0.08%)</title><rect x="46.5667%" y="85" width="0.0789%" height="15" fill="rgb(234,209,28)" fg:x="590" fg:w="1"/><text x="46.8167%" y="95.50"></text></g><g><title>crossterm::command::write_command_ansi (2 samples, 0.16%)</title><rect x="46.5667%" y="325" width="0.1579%" height="15" fill="rgb(224,11,23)" fg:x="590" fg:w="2"/><text x="46.8167%" y="335.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="46.5667%" y="309" width="0.1579%" height="15" fill="rgb(232,99,1)" fg:x="590" fg:w="2"/><text x="46.8167%" y="319.50"></text></g><g><title>&lt;crossterm::style::types::colored::Colored as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="46.6456%" y="293" width="0.0789%" height="15" fill="rgb(237,95,45)" fg:x="591" fg:w="1"/><text x="46.8956%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.6456%" y="277" width="0.0789%" height="15" fill="rgb(208,109,11)" fg:x="591" fg:w="1"/><text x="46.8956%" y="287.50"></text></g><g><title>irust::irust::engine::&lt;impl irust::irust::IRust&gt;::execute (5 samples, 0.39%)</title><rect x="46.4088%" y="421" width="0.3946%" height="15" fill="rgb(216,190,48)" fg:x="588" fg:w="5"/><text x="46.6588%" y="431.50"></text></g><g><title>irust::irust::engine::&lt;impl irust::irust::IRust&gt;::_execute (5 samples, 0.39%)</title><rect x="46.4088%" y="405" width="0.3946%" height="15" fill="rgb(251,171,36)" fg:x="588" fg:w="5"/><text x="46.6588%" y="415.50"></text></g><g><title>printer::printer::Printer&lt;W&gt;::print_input (4 samples, 0.32%)</title><rect x="46.4878%" y="389" width="0.3157%" height="15" fill="rgb(230,62,22)" fg:x="589" fg:w="4"/><text x="46.7378%" y="399.50"></text></g><g><title>printer::printer::Printer&lt;W&gt;::print_input_inner (3 samples, 0.24%)</title><rect x="46.5667%" y="373" width="0.2368%" height="15" fill="rgb(225,114,35)" fg:x="590" fg:w="3"/><text x="46.8167%" y="383.50"></text></g><g><title>printer::printer::Printer&lt;W&gt;::print_input_char (3 samples, 0.24%)</title><rect x="46.5667%" y="357" width="0.2368%" height="15" fill="rgb(215,118,42)" fg:x="590" fg:w="3"/><text x="46.8167%" y="367.50"></text></g><g><title>printer::printer::writer::Writer&lt;W&gt;::write_char_with_color (3 samples, 0.24%)</title><rect x="46.5667%" y="341" width="0.2368%" height="15" fill="rgb(243,119,21)" fg:x="590" fg:w="3"/><text x="46.8167%" y="351.50"></text></g><g><title>printer::printer::writer::Writer&lt;W&gt;::write_char (1 samples, 0.08%)</title><rect x="46.7245%" y="325" width="0.0789%" height="15" fill="rgb(252,177,53)" fg:x="592" fg:w="1"/><text x="46.9745%" y="335.50"></text></g><g><title>crossterm::command::write_command_ansi (1 samples, 0.08%)</title><rect x="46.7245%" y="309" width="0.0789%" height="15" fill="rgb(237,209,29)" fg:x="592" fg:w="1"/><text x="46.9745%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.7245%" y="293" width="0.0789%" height="15" fill="rgb(212,65,23)" fg:x="592" fg:w="1"/><text x="46.9745%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_char (1 samples, 0.08%)</title><rect x="46.7245%" y="277" width="0.0789%" height="15" fill="rgb(230,222,46)" fg:x="592" fg:w="1"/><text x="46.9745%" y="287.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="46.7245%" y="261" width="0.0789%" height="15" fill="rgb(215,135,32)" fg:x="592" fg:w="1"/><text x="46.9745%" y="271.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.7245%" y="245" width="0.0789%" height="15" fill="rgb(246,101,22)" fg:x="592" fg:w="1"/><text x="46.9745%" y="255.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.7245%" y="229" width="0.0789%" height="15" fill="rgb(206,107,13)" fg:x="592" fg:w="1"/><text x="46.9745%" y="239.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.7245%" y="213" width="0.0789%" height="15" fill="rgb(250,100,44)" fg:x="592" fg:w="1"/><text x="46.9745%" y="223.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.7245%" y="197" width="0.0789%" height="15" fill="rgb(231,147,38)" fg:x="592" fg:w="1"/><text x="46.9745%" y="207.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.7245%" y="181" width="0.0789%" height="15" fill="rgb(229,8,40)" fg:x="592" fg:w="1"/><text x="46.9745%" y="191.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.7245%" y="165" width="0.0789%" height="15" fill="rgb(221,135,30)" fg:x="592" fg:w="1"/><text x="46.9745%" y="175.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (1 samples, 0.08%)</title><rect x="46.7245%" y="149" width="0.0789%" height="15" fill="rgb(249,193,18)" fg:x="592" fg:w="1"/><text x="46.9745%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="46.7245%" y="133" width="0.0789%" height="15" fill="rgb(209,133,39)" fg:x="592" fg:w="1"/><text x="46.9745%" y="143.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="46.7245%" y="117" width="0.0789%" height="15" fill="rgb(232,100,14)" fg:x="592" fg:w="1"/><text x="46.9745%" y="127.50"></text></g><g><title>irust::irust::IRust::print_input::{{closure}} (1 samples, 0.08%)</title><rect x="46.8035%" y="405" width="0.0789%" height="15" fill="rgb(224,185,1)" fg:x="593" fg:w="1"/><text x="47.0535%" y="415.50"></text></g><g><title>irust::irust::highlight::highlight (1 samples, 0.08%)</title><rect x="46.8035%" y="389" width="0.0789%" height="15" fill="rgb(223,139,8)" fg:x="593" fg:w="1"/><text x="47.0535%" y="399.50"></text></g><g><title>crossterm::command::write_command_ansi (1 samples, 0.08%)</title><rect x="46.8824%" y="357" width="0.0789%" height="15" fill="rgb(232,213,38)" fg:x="594" fg:w="1"/><text x="47.1324%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.8824%" y="341" width="0.0789%" height="15" fill="rgb(207,94,22)" fg:x="594" fg:w="1"/><text x="47.1324%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="46.8824%" y="325" width="0.0789%" height="15" fill="rgb(219,183,54)" fg:x="594" fg:w="1"/><text x="47.1324%" y="335.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="46.8824%" y="309" width="0.0789%" height="15" fill="rgb(216,185,54)" fg:x="594" fg:w="1"/><text x="47.1324%" y="319.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.8824%" y="293" width="0.0789%" height="15" fill="rgb(254,217,39)" fg:x="594" fg:w="1"/><text x="47.1324%" y="303.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="46.8824%" y="277" width="0.0789%" height="15" fill="rgb(240,178,23)" fg:x="594" fg:w="1"/><text x="47.1324%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.08%)</title><rect x="46.8824%" y="261" width="0.0789%" height="15" fill="rgb(218,11,47)" fg:x="594" fg:w="1"/><text x="47.1324%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="46.8824%" y="245" width="0.0789%" height="15" fill="rgb(218,51,51)" fg:x="594" fg:w="1"/><text x="47.1324%" y="255.50"></text></g><g><title>&lt;std::sys_common::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="46.8824%" y="229" width="0.0789%" height="15" fill="rgb(238,126,27)" fg:x="594" fg:w="1"/><text x="47.1324%" y="239.50"></text></g><g><title>std::sys::unix::mutex::ReentrantMutex::unlock (1 samples, 0.08%)</title><rect x="46.8824%" y="213" width="0.0789%" height="15" fill="rgb(249,202,22)" fg:x="594" fg:w="1"/><text x="47.1324%" y="223.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.08%)</title><rect x="46.8824%" y="197" width="0.0789%" height="15" fill="rgb(254,195,49)" fg:x="594" fg:w="1"/><text x="47.1324%" y="207.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="46.9613%" y="245" width="0.1579%" height="15" fill="rgb(208,123,14)" fg:x="595" fg:w="2"/><text x="47.2113%" y="255.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.0403%" y="229" width="0.0789%" height="15" fill="rgb(224,200,8)" fg:x="596" fg:w="1"/><text x="47.2903%" y="239.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.0403%" y="213" width="0.0789%" height="15" fill="rgb(217,61,36)" fg:x="596" fg:w="1"/><text x="47.2903%" y="223.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.0403%" y="197" width="0.0789%" height="15" fill="rgb(206,35,45)" fg:x="596" fg:w="1"/><text x="47.2903%" y="207.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (1 samples, 0.08%)</title><rect x="47.0403%" y="181" width="0.0789%" height="15" fill="rgb(217,65,33)" fg:x="596" fg:w="1"/><text x="47.2903%" y="191.50"></text></g><g><title>printer::printer::Printer&lt;W&gt;::print_input_inner (5 samples, 0.39%)</title><rect x="46.8824%" y="405" width="0.3946%" height="15" fill="rgb(222,158,48)" fg:x="594" fg:w="5"/><text x="47.1324%" y="415.50"></text></g><g><title>printer::printer::Printer&lt;W&gt;::print_input_char (5 samples, 0.39%)</title><rect x="46.8824%" y="389" width="0.3946%" height="15" fill="rgb(254,2,54)" fg:x="594" fg:w="5"/><text x="47.1324%" y="399.50"></text></g><g><title>printer::printer::writer::Writer&lt;W&gt;::write_char_with_color (5 samples, 0.39%)</title><rect x="46.8824%" y="373" width="0.3946%" height="15" fill="rgb(250,143,38)" fg:x="594" fg:w="5"/><text x="47.1324%" y="383.50"></text></g><g><title>printer::printer::writer::Writer&lt;W&gt;::write_char (4 samples, 0.32%)</title><rect x="46.9613%" y="357" width="0.3157%" height="15" fill="rgb(248,25,0)" fg:x="595" fg:w="4"/><text x="47.2113%" y="367.50"></text></g><g><title>crossterm::command::write_command_ansi (4 samples, 0.32%)</title><rect x="46.9613%" y="341" width="0.3157%" height="15" fill="rgb(206,152,27)" fg:x="595" fg:w="4"/><text x="47.2113%" y="351.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="46.9613%" y="325" width="0.3157%" height="15" fill="rgb(240,77,30)" fg:x="595" fg:w="4"/><text x="47.2113%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_char (4 samples, 0.32%)</title><rect x="46.9613%" y="309" width="0.3157%" height="15" fill="rgb(231,5,3)" fg:x="595" fg:w="4"/><text x="47.2113%" y="319.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="46.9613%" y="293" width="0.3157%" height="15" fill="rgb(207,226,32)" fg:x="595" fg:w="4"/><text x="47.2113%" y="303.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="46.9613%" y="277" width="0.3157%" height="15" fill="rgb(222,207,47)" fg:x="595" fg:w="4"/><text x="47.2113%" y="287.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="46.9613%" y="261" width="0.3157%" height="15" fill="rgb(229,115,45)" fg:x="595" fg:w="4"/><text x="47.2113%" y="271.50"></text></g><g><title>std::io::stdio::Stdout::lock (2 samples, 0.16%)</title><rect x="47.1192%" y="245" width="0.1579%" height="15" fill="rgb(224,191,6)" fg:x="597" fg:w="2"/><text x="47.3692%" y="255.50"></text></g><g><title>std::io::stdio::Stdout::lock_any (2 samples, 0.16%)</title><rect x="47.1192%" y="229" width="0.1579%" height="15" fill="rgb(230,227,24)" fg:x="597" fg:w="2"/><text x="47.3692%" y="239.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (2 samples, 0.16%)</title><rect x="47.1192%" y="213" width="0.1579%" height="15" fill="rgb(228,80,19)" fg:x="597" fg:w="2"/><text x="47.3692%" y="223.50"></text></g><g><title>std::sys::unix::mutex::ReentrantMutex::lock (2 samples, 0.16%)</title><rect x="47.1192%" y="197" width="0.1579%" height="15" fill="rgb(247,229,0)" fg:x="597" fg:w="2"/><text x="47.3692%" y="207.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.08%)</title><rect x="47.1981%" y="181" width="0.0789%" height="15" fill="rgb(237,194,15)" fg:x="598" fg:w="1"/><text x="47.4481%" y="191.50"></text></g><g><title>std::panic::catch_unwind (45 samples, 3.55%)</title><rect x="43.8043%" y="581" width="3.5517%" height="15" fill="rgb(219,203,20)" fg:x="555" fg:w="45"/><text x="44.0543%" y="591.50">std:..</text></g><g><title>std::panicking::try (45 samples, 3.55%)</title><rect x="43.8043%" y="565" width="3.5517%" height="15" fill="rgb(234,128,8)" fg:x="555" fg:w="45"/><text x="44.0543%" y="575.50">std:..</text></g><g><title>std::panicking::try::do_call (45 samples, 3.55%)</title><rect x="43.8043%" y="549" width="3.5517%" height="15" fill="rgb(248,202,8)" fg:x="555" fg:w="45"/><text x="44.0543%" y="559.50">std:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (45 samples, 3.55%)</title><rect x="43.8043%" y="533" width="3.5517%" height="15" fill="rgb(206,104,37)" fg:x="555" fg:w="45"/><text x="44.0543%" y="543.50">core..</text></g><g><title>std::rt::lang_start::_{{closure}} (45 samples, 3.55%)</title><rect x="43.8043%" y="517" width="3.5517%" height="15" fill="rgb(223,8,27)" fg:x="555" fg:w="45"/><text x="44.0543%" y="527.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (45 samples, 3.55%)</title><rect x="43.8043%" y="501" width="3.5517%" height="15" fill="rgb(216,217,28)" fg:x="555" fg:w="45"/><text x="44.0543%" y="511.50">std:..</text></g><g><title>irust::main (45 samples, 3.55%)</title><rect x="43.8043%" y="485" width="3.5517%" height="15" fill="rgb(249,199,1)" fg:x="555" fg:w="45"/><text x="44.0543%" y="495.50">irus..</text></g><g><title>irust::irust::IRust::run (35 samples, 2.76%)</title><rect x="44.5935%" y="469" width="2.7624%" height="15" fill="rgb(240,85,17)" fg:x="565" fg:w="35"/><text x="44.8435%" y="479.50">ir..</text></g><g><title>irust::irust::engine::&lt;impl irust::irust::IRust&gt;::execute (12 samples, 0.95%)</title><rect x="46.4088%" y="453" width="0.9471%" height="15" fill="rgb(206,108,45)" fg:x="588" fg:w="12"/><text x="46.6588%" y="463.50"></text></g><g><title>irust::irust::engine::&lt;impl irust::irust::IRust&gt;::_execute (12 samples, 0.95%)</title><rect x="46.4088%" y="437" width="0.9471%" height="15" fill="rgb(245,210,41)" fg:x="588" fg:w="12"/><text x="46.6588%" y="447.50"></text></g><g><title>printer::printer::Printer&lt;W&gt;::print_input (7 samples, 0.55%)</title><rect x="46.8035%" y="421" width="0.5525%" height="15" fill="rgb(206,13,37)" fg:x="593" fg:w="7"/><text x="47.0535%" y="431.50"></text></g><g><title>printer::printer::writer::Writer&lt;W&gt;::write (1 samples, 0.08%)</title><rect x="47.2770%" y="405" width="0.0789%" height="15" fill="rgb(250,61,18)" fg:x="599" fg:w="1"/><text x="47.5270%" y="415.50"></text></g><g><title>crossterm::command::write_command_ansi (1 samples, 0.08%)</title><rect x="47.2770%" y="389" width="0.0789%" height="15" fill="rgb(235,172,48)" fg:x="599" fg:w="1"/><text x="47.5270%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="47.2770%" y="373" width="0.0789%" height="15" fill="rgb(249,201,17)" fg:x="599" fg:w="1"/><text x="47.5270%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="47.2770%" y="357" width="0.0789%" height="15" fill="rgb(219,208,6)" fg:x="599" fg:w="1"/><text x="47.5270%" y="367.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="47.2770%" y="341" width="0.0789%" height="15" fill="rgb(248,31,23)" fg:x="599" fg:w="1"/><text x="47.5270%" y="351.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.2770%" y="325" width="0.0789%" height="15" fill="rgb(245,15,42)" fg:x="599" fg:w="1"/><text x="47.5270%" y="335.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.2770%" y="309" width="0.0789%" height="15" fill="rgb(222,217,39)" fg:x="599" fg:w="1"/><text x="47.5270%" y="319.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.2770%" y="293" width="0.0789%" height="15" fill="rgb(210,219,27)" fg:x="599" fg:w="1"/><text x="47.5270%" y="303.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.2770%" y="277" width="0.0789%" height="15" fill="rgb(252,166,36)" fg:x="599" fg:w="1"/><text x="47.5270%" y="287.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="47.2770%" y="261" width="0.0789%" height="15" fill="rgb(245,132,34)" fg:x="599" fg:w="1"/><text x="47.5270%" y="271.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.08%)</title><rect x="47.2770%" y="245" width="0.0789%" height="15" fill="rgb(236,54,3)" fg:x="599" fg:w="1"/><text x="47.5270%" y="255.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.08%)</title><rect x="47.2770%" y="229" width="0.0789%" height="15" fill="rgb(241,173,43)" fg:x="599" fg:w="1"/><text x="47.5270%" y="239.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.08%)</title><rect x="47.2770%" y="213" width="0.0789%" height="15" fill="rgb(215,190,9)" fg:x="599" fg:w="1"/><text x="47.5270%" y="223.50"></text></g><g><title>__memrchr_sse2 (1 samples, 0.08%)</title><rect x="47.2770%" y="197" width="0.0789%" height="15" fill="rgb(242,101,16)" fg:x="599" fg:w="1"/><text x="47.5270%" y="207.50"></text></g><g><title>__libc_start_main (46 samples, 3.63%)</title><rect x="43.8043%" y="693" width="3.6306%" height="15" fill="rgb(223,190,21)" fg:x="555" fg:w="46"/><text x="44.0543%" y="703.50">__li..</text></g><g><title>main (46 samples, 3.63%)</title><rect x="43.8043%" y="677" width="3.6306%" height="15" fill="rgb(215,228,25)" fg:x="555" fg:w="46"/><text x="44.0543%" y="687.50">main</text></g><g><title>std::rt::lang_start_internal (46 samples, 3.63%)</title><rect x="43.8043%" y="661" width="3.6306%" height="15" fill="rgb(225,36,22)" fg:x="555" fg:w="46"/><text x="44.0543%" y="671.50">std:..</text></g><g><title>std::panic::catch_unwind (46 samples, 3.63%)</title><rect x="43.8043%" y="645" width="3.6306%" height="15" fill="rgb(251,106,46)" fg:x="555" fg:w="46"/><text x="44.0543%" y="655.50">std:..</text></g><g><title>std::panicking::try (46 samples, 3.63%)</title><rect x="43.8043%" y="629" width="3.6306%" height="15" fill="rgb(208,90,1)" fg:x="555" fg:w="46"/><text x="44.0543%" y="639.50">std:..</text></g><g><title>std::panicking::try::do_call (46 samples, 3.63%)</title><rect x="43.8043%" y="613" width="3.6306%" height="15" fill="rgb(243,10,4)" fg:x="555" fg:w="46"/><text x="44.0543%" y="623.50">std:..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (46 samples, 3.63%)</title><rect x="43.8043%" y="597" width="3.6306%" height="15" fill="rgb(212,137,27)" fg:x="555" fg:w="46"/><text x="44.0543%" y="607.50">std:..</text></g><g><title>std::rt::init (1 samples, 0.08%)</title><rect x="47.3560%" y="581" width="0.0789%" height="15" fill="rgb(231,220,49)" fg:x="600" fg:w="1"/><text x="47.6060%" y="591.50"></text></g><g><title>std::sys::unix::thread::guard::init (1 samples, 0.08%)</title><rect x="47.3560%" y="565" width="0.0789%" height="15" fill="rgb(237,96,20)" fg:x="600" fg:w="1"/><text x="47.6060%" y="575.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.08%)</title><rect x="47.3560%" y="549" width="0.0789%" height="15" fill="rgb(239,229,30)" fg:x="600" fg:w="1"/><text x="47.6060%" y="559.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.08%)</title><rect x="47.3560%" y="533" width="0.0789%" height="15" fill="rgb(219,65,33)" fg:x="600" fg:w="1"/><text x="47.6060%" y="543.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.08%)</title><rect x="47.3560%" y="517" width="0.0789%" height="15" fill="rgb(243,134,7)" fg:x="600" fg:w="1"/><text x="47.6060%" y="527.50"></text></g><g><title>_IO_new_fopen (1 samples, 0.08%)</title><rect x="47.3560%" y="501" width="0.0789%" height="15" fill="rgb(216,177,54)" fg:x="600" fg:w="1"/><text x="47.6060%" y="511.50"></text></g><g><title>irust (120 samples, 9.47%)</title><rect x="38.1215%" y="725" width="9.4712%" height="15" fill="rgb(211,160,20)" fg:x="483" fg:w="120"/><text x="38.3715%" y="735.50">irust</text></g><g><title>_start (55 samples, 4.34%)</title><rect x="43.2518%" y="709" width="4.3410%" height="15" fill="rgb(239,85,39)" fg:x="548" fg:w="55"/><text x="43.5018%" y="719.50">_start</text></g><g><title>_dl_start (2 samples, 0.16%)</title><rect x="47.4349%" y="693" width="0.1579%" height="15" fill="rgb(232,125,22)" fg:x="601" fg:w="2"/><text x="47.6849%" y="703.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.16%)</title><rect x="47.4349%" y="677" width="0.1579%" height="15" fill="rgb(244,57,34)" fg:x="601" fg:w="2"/><text x="47.6849%" y="687.50"></text></g><g><title>dl_main (2 samples, 0.16%)</title><rect x="47.4349%" y="661" width="0.1579%" height="15" fill="rgb(214,203,32)" fg:x="601" fg:w="2"/><text x="47.6849%" y="671.50"></text></g><g><title>_dl_map_object_deps (2 samples, 0.16%)</title><rect x="47.4349%" y="645" width="0.1579%" height="15" fill="rgb(207,58,43)" fg:x="601" fg:w="2"/><text x="47.6849%" y="655.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="47.4349%" y="629" width="0.1579%" height="15" fill="rgb(215,193,15)" fg:x="601" fg:w="2"/><text x="47.6849%" y="639.50"></text></g><g><title>openaux (2 samples, 0.16%)</title><rect x="47.4349%" y="613" width="0.1579%" height="15" fill="rgb(232,15,44)" fg:x="601" fg:w="2"/><text x="47.6849%" y="623.50"></text></g><g><title>_dl_map_object (2 samples, 0.16%)</title><rect x="47.4349%" y="597" width="0.1579%" height="15" fill="rgb(212,3,48)" fg:x="601" fg:w="2"/><text x="47.6849%" y="607.50"></text></g><g><title>_dl_load_cache_lookup (2 samples, 0.16%)</title><rect x="47.4349%" y="581" width="0.1579%" height="15" fill="rgb(218,128,7)" fg:x="601" fg:w="2"/><text x="47.6849%" y="591.50"></text></g><g><title>search_cache (2 samples, 0.16%)</title><rect x="47.4349%" y="565" width="0.1579%" height="15" fill="rgb(226,216,39)" fg:x="601" fg:w="2"/><text x="47.6849%" y="575.50"></text></g><g><title>_dl_cache_libcmp (1 samples, 0.08%)</title><rect x="47.5138%" y="549" width="0.0789%" height="15" fill="rgb(243,47,51)" fg:x="602" fg:w="1"/><text x="47.7638%" y="559.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.08%)</title><rect x="47.6717%" y="581" width="0.0789%" height="15" fill="rgb(241,183,40)" fg:x="604" fg:w="1"/><text x="47.9217%" y="591.50"></text></g><g><title>std::panicking::try (1 samples, 0.08%)</title><rect x="47.6717%" y="565" width="0.0789%" height="15" fill="rgb(231,217,32)" fg:x="604" fg:w="1"/><text x="47.9217%" y="575.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.08%)</title><rect x="47.6717%" y="549" width="0.0789%" height="15" fill="rgb(229,61,38)" fg:x="604" fg:w="1"/><text x="47.9217%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.08%)</title><rect x="47.6717%" y="533" width="0.0789%" height="15" fill="rgb(225,210,5)" fg:x="604" fg:w="1"/><text x="47.9217%" y="543.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.08%)</title><rect x="47.6717%" y="517" width="0.0789%" height="15" fill="rgb(231,79,45)" fg:x="604" fg:w="1"/><text x="47.9217%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.08%)</title><rect x="47.6717%" y="501" width="0.0789%" height="15" fill="rgb(224,100,7)" fg:x="604" fg:w="1"/><text x="47.9217%" y="511.50"></text></g><g><title>irust_prompt::main (1 samples, 0.08%)</title><rect x="47.6717%" y="485" width="0.0789%" height="15" fill="rgb(241,198,18)" fg:x="604" fg:w="1"/><text x="47.9217%" y="495.50"></text></g><g><title>std::process::exit (1 samples, 0.08%)</title><rect x="47.6717%" y="469" width="0.0789%" height="15" fill="rgb(252,97,53)" fg:x="604" fg:w="1"/><text x="47.9217%" y="479.50"></text></g><g><title>std::rt::cleanup (1 samples, 0.08%)</title><rect x="47.6717%" y="453" width="0.0789%" height="15" fill="rgb(220,88,7)" fg:x="604" fg:w="1"/><text x="47.9217%" y="463.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.08%)</title><rect x="47.6717%" y="437" width="0.0789%" height="15" fill="rgb(213,176,14)" fg:x="604" fg:w="1"/><text x="47.9217%" y="447.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 0.08%)</title><rect x="47.6717%" y="421" width="0.0789%" height="15" fill="rgb(246,73,7)" fg:x="604" fg:w="1"/><text x="47.9217%" y="431.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.08%)</title><rect x="47.6717%" y="405" width="0.0789%" height="15" fill="rgb(245,64,36)" fg:x="604" fg:w="1"/><text x="47.9217%" y="415.50"></text></g><g><title>std::rt::cleanup::{{closure}} (1 samples, 0.08%)</title><rect x="47.6717%" y="389" width="0.0789%" height="15" fill="rgb(245,80,10)" fg:x="604" fg:w="1"/><text x="47.9217%" y="399.50"></text></g><g><title>std::sys::unix::cleanup (1 samples, 0.08%)</title><rect x="47.6717%" y="373" width="0.0789%" height="15" fill="rgb(232,107,50)" fg:x="604" fg:w="1"/><text x="47.9217%" y="383.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::cleanup (1 samples, 0.08%)</title><rect x="47.6717%" y="357" width="0.0789%" height="15" fill="rgb(253,3,0)" fg:x="604" fg:w="1"/><text x="47.9217%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (1 samples, 0.08%)</title><rect x="47.6717%" y="341" width="0.0789%" height="15" fill="rgb(212,99,53)" fg:x="604" fg:w="1"/><text x="47.9217%" y="351.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.6717%" y="325" width="0.0789%" height="15" fill="rgb(249,111,54)" fg:x="604" fg:w="1"/><text x="47.9217%" y="335.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (1 samples, 0.08%)</title><rect x="47.6717%" y="309" width="0.0789%" height="15" fill="rgb(249,55,30)" fg:x="604" fg:w="1"/><text x="47.9217%" y="319.50"></text></g><g><title>__GI_munmap (1 samples, 0.08%)</title><rect x="47.6717%" y="293" width="0.0789%" height="15" fill="rgb(237,47,42)" fg:x="604" fg:w="1"/><text x="47.9217%" y="303.50"></text></g><g><title>__GI___isoc99_sscanf (1 samples, 0.08%)</title><rect x="47.7506%" y="501" width="0.0789%" height="15" fill="rgb(211,20,18)" fg:x="605" fg:w="1"/><text x="48.0006%" y="511.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.08%)</title><rect x="47.7506%" y="485" width="0.0789%" height="15" fill="rgb(231,203,46)" fg:x="605" fg:w="1"/><text x="48.0006%" y="495.50"></text></g><g><title>__libc_start_main (3 samples, 0.24%)</title><rect x="47.6717%" y="693" width="0.2368%" height="15" fill="rgb(237,142,3)" fg:x="604" fg:w="3"/><text x="47.9217%" y="703.50"></text></g><g><title>main (3 samples, 0.24%)</title><rect x="47.6717%" y="677" width="0.2368%" height="15" fill="rgb(241,107,1)" fg:x="604" fg:w="3"/><text x="47.9217%" y="687.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.24%)</title><rect x="47.6717%" y="661" width="0.2368%" height="15" fill="rgb(229,83,13)" fg:x="604" fg:w="3"/><text x="47.9217%" y="671.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.24%)</title><rect x="47.6717%" y="645" width="0.2368%" height="15" fill="rgb(241,91,40)" fg:x="604" fg:w="3"/><text x="47.9217%" y="655.50"></text></g><g><title>std::panicking::try (3 samples, 0.24%)</title><rect x="47.6717%" y="629" width="0.2368%" height="15" fill="rgb(225,3,45)" fg:x="604" fg:w="3"/><text x="47.9217%" y="639.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.24%)</title><rect x="47.6717%" y="613" width="0.2368%" height="15" fill="rgb(244,223,14)" fg:x="604" fg:w="3"/><text x="47.9217%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (3 samples, 0.24%)</title><rect x="47.6717%" y="597" width="0.2368%" height="15" fill="rgb(224,124,37)" fg:x="604" fg:w="3"/><text x="47.9217%" y="607.50"></text></g><g><title>std::rt::init (2 samples, 0.16%)</title><rect x="47.7506%" y="581" width="0.1579%" height="15" fill="rgb(251,171,30)" fg:x="605" fg:w="2"/><text x="48.0006%" y="591.50"></text></g><g><title>std::sys::unix::thread::guard::init (2 samples, 0.16%)</title><rect x="47.7506%" y="565" width="0.1579%" height="15" fill="rgb(236,46,54)" fg:x="605" fg:w="2"/><text x="48.0006%" y="575.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (2 samples, 0.16%)</title><rect x="47.7506%" y="549" width="0.1579%" height="15" fill="rgb(245,213,5)" fg:x="605" fg:w="2"/><text x="48.0006%" y="559.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (2 samples, 0.16%)</title><rect x="47.7506%" y="533" width="0.1579%" height="15" fill="rgb(230,144,27)" fg:x="605" fg:w="2"/><text x="48.0006%" y="543.50"></text></g><g><title>__pthread_getattr_np (2 samples, 0.16%)</title><rect x="47.7506%" y="517" width="0.1579%" height="15" fill="rgb(220,86,6)" fg:x="605" fg:w="2"/><text x="48.0006%" y="527.50"></text></g><g><title>__GI_getrlimit64 (1 samples, 0.08%)</title><rect x="47.8295%" y="501" width="0.0789%" height="15" fill="rgb(240,20,13)" fg:x="606" fg:w="1"/><text x="48.0795%" y="511.50"></text></g><g><title>fstatat (1 samples, 0.08%)</title><rect x="47.9874%" y="565" width="0.0789%" height="15" fill="rgb(217,89,34)" fg:x="608" fg:w="1"/><text x="48.2374%" y="575.50"></text></g><g><title>_dl_map_object_deps (2 samples, 0.16%)</title><rect x="47.9874%" y="645" width="0.1579%" height="15" fill="rgb(229,13,5)" fg:x="608" fg:w="2"/><text x="48.2374%" y="655.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="47.9874%" y="629" width="0.1579%" height="15" fill="rgb(244,67,35)" fg:x="608" fg:w="2"/><text x="48.2374%" y="639.50"></text></g><g><title>openaux (2 samples, 0.16%)</title><rect x="47.9874%" y="613" width="0.1579%" height="15" fill="rgb(221,40,2)" fg:x="608" fg:w="2"/><text x="48.2374%" y="623.50"></text></g><g><title>_dl_map_object (2 samples, 0.16%)</title><rect x="47.9874%" y="597" width="0.1579%" height="15" fill="rgb(237,157,21)" fg:x="608" fg:w="2"/><text x="48.2374%" y="607.50"></text></g><g><title>_dl_map_object_from_fd (2 samples, 0.16%)</title><rect x="47.9874%" y="581" width="0.1579%" height="15" fill="rgb(222,94,11)" fg:x="608" fg:w="2"/><text x="48.2374%" y="591.50"></text></g><g><title>memset (1 samples, 0.08%)</title><rect x="48.0663%" y="565" width="0.0789%" height="15" fill="rgb(249,113,6)" fg:x="609" fg:w="1"/><text x="48.3163%" y="575.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.08%)</title><rect x="48.1452%" y="645" width="0.0789%" height="15" fill="rgb(238,137,36)" fg:x="610" fg:w="1"/><text x="48.3952%" y="655.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.08%)</title><rect x="48.1452%" y="629" width="0.0789%" height="15" fill="rgb(210,102,26)" fg:x="610" fg:w="1"/><text x="48.3952%" y="639.50"></text></g><g><title>do_lookup_x (1 samples, 0.08%)</title><rect x="48.1452%" y="613" width="0.0789%" height="15" fill="rgb(218,30,30)" fg:x="610" fg:w="1"/><text x="48.3952%" y="623.50"></text></g><g><title>irust_prompt (9 samples, 0.71%)</title><rect x="47.5927%" y="725" width="0.7103%" height="15" fill="rgb(214,67,26)" fg:x="603" fg:w="9"/><text x="47.8427%" y="735.50"></text></g><g><title>_start (9 samples, 0.71%)</title><rect x="47.5927%" y="709" width="0.7103%" height="15" fill="rgb(251,9,53)" fg:x="603" fg:w="9"/><text x="47.8427%" y="719.50"></text></g><g><title>_dl_start (5 samples, 0.39%)</title><rect x="47.9084%" y="693" width="0.3946%" height="15" fill="rgb(228,204,25)" fg:x="607" fg:w="5"/><text x="48.1584%" y="703.50"></text></g><g><title>_dl_sysdep_start (4 samples, 0.32%)</title><rect x="47.9874%" y="677" width="0.3157%" height="15" fill="rgb(207,153,8)" fg:x="608" fg:w="4"/><text x="48.2374%" y="687.50"></text></g><g><title>dl_main (4 samples, 0.32%)</title><rect x="47.9874%" y="661" width="0.3157%" height="15" fill="rgb(242,9,16)" fg:x="608" fg:w="4"/><text x="48.2374%" y="671.50"></text></g><g><title>init_tls (1 samples, 0.08%)</title><rect x="48.2242%" y="645" width="0.0789%" height="15" fill="rgb(217,211,10)" fg:x="611" fg:w="1"/><text x="48.4742%" y="655.50"></text></g><g><title>__libc_start_main (1 samples, 0.08%)</title><rect x="48.3031%" y="693" width="0.0789%" height="15" fill="rgb(219,228,52)" fg:x="612" fg:w="1"/><text x="48.5531%" y="703.50"></text></g><g><title>main (1 samples, 0.08%)</title><rect x="48.3031%" y="677" width="0.0789%" height="15" fill="rgb(231,92,29)" fg:x="612" fg:w="1"/><text x="48.5531%" y="687.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.08%)</title><rect x="48.3031%" y="661" width="0.0789%" height="15" fill="rgb(232,8,23)" fg:x="612" fg:w="1"/><text x="48.5531%" y="671.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.08%)</title><rect x="48.3031%" y="645" width="0.0789%" height="15" fill="rgb(216,211,34)" fg:x="612" fg:w="1"/><text x="48.5531%" y="655.50"></text></g><g><title>std::panicking::try (1 samples, 0.08%)</title><rect x="48.3031%" y="629" width="0.0789%" height="15" fill="rgb(236,151,0)" fg:x="612" fg:w="1"/><text x="48.5531%" y="639.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.08%)</title><rect x="48.3031%" y="613" width="0.0789%" height="15" fill="rgb(209,168,3)" fg:x="612" fg:w="1"/><text x="48.5531%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.08%)</title><rect x="48.3031%" y="597" width="0.0789%" height="15" fill="rgb(208,129,28)" fg:x="612" fg:w="1"/><text x="48.5531%" y="607.50"></text></g><g><title>std::rt::init (1 samples, 0.08%)</title><rect x="48.3031%" y="581" width="0.0789%" height="15" fill="rgb(229,78,22)" fg:x="612" fg:w="1"/><text x="48.5531%" y="591.50"></text></g><g><title>std::sys::unix::thread::guard::init (1 samples, 0.08%)</title><rect x="48.3031%" y="565" width="0.0789%" height="15" fill="rgb(228,187,13)" fg:x="612" fg:w="1"/><text x="48.5531%" y="575.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.08%)</title><rect x="48.3031%" y="549" width="0.0789%" height="15" fill="rgb(240,119,24)" fg:x="612" fg:w="1"/><text x="48.5531%" y="559.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.08%)</title><rect x="48.3031%" y="533" width="0.0789%" height="15" fill="rgb(209,194,42)" fg:x="612" fg:w="1"/><text x="48.5531%" y="543.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.08%)</title><rect x="48.3031%" y="517" width="0.0789%" height="15" fill="rgb(247,200,46)" fg:x="612" fg:w="1"/><text x="48.5531%" y="527.50"></text></g><g><title>__fopen_internal (1 samples, 0.08%)</title><rect x="48.3031%" y="501" width="0.0789%" height="15" fill="rgb(218,76,16)" fg:x="612" fg:w="1"/><text x="48.5531%" y="511.50"></text></g><g><title>__GI__IO_file_fopen (1 samples, 0.08%)</title><rect x="48.3031%" y="485" width="0.0789%" height="15" fill="rgb(225,21,48)" fg:x="612" fg:w="1"/><text x="48.5531%" y="495.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.08%)</title><rect x="48.3820%" y="645" width="0.0789%" height="15" fill="rgb(239,223,50)" fg:x="613" fg:w="1"/><text x="48.6320%" y="655.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="48.3820%" y="629" width="0.0789%" height="15" fill="rgb(244,45,21)" fg:x="613" fg:w="1"/><text x="48.6320%" y="639.50"></text></g><g><title>openaux (1 samples, 0.08%)</title><rect x="48.3820%" y="613" width="0.0789%" height="15" fill="rgb(232,33,43)" fg:x="613" fg:w="1"/><text x="48.6320%" y="623.50"></text></g><g><title>_dl_map_object (1 samples, 0.08%)</title><rect x="48.3820%" y="597" width="0.0789%" height="15" fill="rgb(209,8,3)" fg:x="613" fg:w="1"/><text x="48.6320%" y="607.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.08%)</title><rect x="48.3820%" y="581" width="0.0789%" height="15" fill="rgb(214,25,53)" fg:x="613" fg:w="1"/><text x="48.6320%" y="591.50"></text></g><g><title>__mmap (1 samples, 0.08%)</title><rect x="48.3820%" y="565" width="0.0789%" height="15" fill="rgb(254,186,54)" fg:x="613" fg:w="1"/><text x="48.6320%" y="575.50"></text></g><g><title>irust_vim (3 samples, 0.24%)</title><rect x="48.3031%" y="725" width="0.2368%" height="15" fill="rgb(208,174,49)" fg:x="612" fg:w="3"/><text x="48.5531%" y="735.50"></text></g><g><title>_start (3 samples, 0.24%)</title><rect x="48.3031%" y="709" width="0.2368%" height="15" fill="rgb(233,191,51)" fg:x="612" fg:w="3"/><text x="48.5531%" y="719.50"></text></g><g><title>_dl_start (2 samples, 0.16%)</title><rect x="48.3820%" y="693" width="0.1579%" height="15" fill="rgb(222,134,10)" fg:x="613" fg:w="2"/><text x="48.6320%" y="703.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.16%)</title><rect x="48.3820%" y="677" width="0.1579%" height="15" fill="rgb(230,226,20)" fg:x="613" fg:w="2"/><text x="48.6320%" y="687.50"></text></g><g><title>dl_main (2 samples, 0.16%)</title><rect x="48.3820%" y="661" width="0.1579%" height="15" fill="rgb(251,111,25)" fg:x="613" fg:w="2"/><text x="48.6320%" y="671.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.08%)</title><rect x="48.4609%" y="645" width="0.0789%" height="15" fill="rgb(224,40,46)" fg:x="614" fg:w="1"/><text x="48.7109%" y="655.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.08%)</title><rect x="48.4609%" y="629" width="0.0789%" height="15" fill="rgb(236,108,47)" fg:x="614" fg:w="1"/><text x="48.7109%" y="639.50"></text></g><g><title>do_lookup_x (1 samples, 0.08%)</title><rect x="48.4609%" y="613" width="0.0789%" height="15" fill="rgb(234,93,0)" fg:x="614" fg:w="1"/><text x="48.7109%" y="623.50"></text></g><g><title>XXH_INLINE_XXH3_64bits (2 samples, 0.16%)</title><rect x="48.5399%" y="709" width="0.1579%" height="15" fill="rgb(224,213,32)" fg:x="615" fg:w="2"/><text x="48.7899%" y="719.50"></text></g><g><title>mold::elf::add_dashes (1 samples, 0.08%)</title><rect x="48.6977%" y="693" width="0.0789%" height="15" fill="rgb(251,11,48)" fg:x="617" fg:w="1"/><text x="48.9477%" y="703.50"></text></g><g><title>[[stack]] (2 samples, 0.16%)</title><rect x="48.6977%" y="709" width="0.1579%" height="15" fill="rgb(236,173,5)" fg:x="617" fg:w="2"/><text x="48.9477%" y="719.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.08%)</title><rect x="48.7766%" y="693" width="0.0789%" height="15" fill="rgb(230,95,12)" fg:x="618" fg:w="1"/><text x="49.0266%" y="703.50"></text></g><g><title>[anon] (1 samples, 0.08%)</title><rect x="48.8556%" y="709" width="0.0789%" height="15" fill="rgb(232,209,1)" fg:x="619" fg:w="1"/><text x="49.1056%" y="719.50"></text></g><g><title>tbb::detail::d2::for_each_root_task&lt;__gnu_cxx::__normal_iterator&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;**, std::vector&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*, std::allocator&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*&gt; &gt; &gt;, mold::elf::claim_unresolved_symbols&lt;mold::elf::X86_64&gt;(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*)#1}, mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*, std::random_access_iterator_tag&gt;::execute (1 samples, 0.08%)</title><rect x="48.8556%" y="693" width="0.0789%" height="15" fill="rgb(232,6,1)" fg:x="619" fg:w="1"/><text x="49.1056%" y="703.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::execute_and_wait (1 samples, 0.08%)</title><rect x="48.8556%" y="677" width="0.0789%" height="15" fill="rgb(210,224,50)" fg:x="619" fg:w="1"/><text x="49.1056%" y="687.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::local_wait_for_all&lt;tbb::detail::r1::external_waiter&gt; (1 samples, 0.08%)</title><rect x="48.8556%" y="661" width="0.0789%" height="15" fill="rgb(228,127,35)" fg:x="619" fg:w="1"/><text x="49.1056%" y="671.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::local_wait_for_all&lt;false, tbb::detail::r1::external_waiter&gt; (1 samples, 0.08%)</title><rect x="48.8556%" y="645" width="0.0789%" height="15" fill="rgb(245,102,45)" fg:x="619" fg:w="1"/><text x="49.1056%" y="655.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::receive_or_steal_task&lt;false, tbb::detail::r1::external_waiter&gt; (1 samples, 0.08%)</title><rect x="48.8556%" y="629" width="0.0789%" height="15" fill="rgb(214,1,49)" fg:x="619" fg:w="1"/><text x="49.1056%" y="639.50"></text></g><g><title>tbb::detail::r1::external_waiter::pause (1 samples, 0.08%)</title><rect x="48.8556%" y="613" width="0.0789%" height="15" fill="rgb(226,163,40)" fg:x="619" fg:w="1"/><text x="49.1056%" y="623.50"></text></g><g><title>tbb::detail::r1::waiter_base::pause (1 samples, 0.08%)</title><rect x="48.8556%" y="597" width="0.0789%" height="15" fill="rgb(239,212,28)" fg:x="619" fg:w="1"/><text x="49.1056%" y="607.50"></text></g><g><title>tbb::detail::r1::stealing_loop_backoff::pause (1 samples, 0.08%)</title><rect x="48.8556%" y="581" width="0.0789%" height="15" fill="rgb(220,20,13)" fg:x="619" fg:w="1"/><text x="49.1056%" y="591.50"></text></g><g><title>std::this_thread::yield (1 samples, 0.08%)</title><rect x="48.8556%" y="565" width="0.0789%" height="15" fill="rgb(210,164,35)" fg:x="619" fg:w="1"/><text x="49.1056%" y="575.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::receive_or_steal_task&lt;false, tbb::detail::r1::external_waiter&gt; (1 samples, 0.08%)</title><rect x="48.8556%" y="549" width="0.0789%" height="15" fill="rgb(248,109,41)" fg:x="619" fg:w="1"/><text x="49.1056%" y="559.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.08%)</title><rect x="48.8556%" y="533" width="0.0789%" height="15" fill="rgb(238,23,50)" fg:x="619" fg:w="1"/><text x="49.1056%" y="543.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.08%)</title><rect x="48.9345%" y="693" width="0.0789%" height="15" fill="rgb(211,48,49)" fg:x="620" fg:w="1"/><text x="49.1845%" y="703.50"></text></g><g><title>mold::MappedFile&lt;mold::elf::Context&lt;mold::elf::X86_64&gt; &gt;::open (1 samples, 0.08%)</title><rect x="49.0134%" y="693" width="0.0789%" height="15" fill="rgb(223,36,21)" fg:x="621" fg:w="1"/><text x="49.2634%" y="703.50"></text></g><g><title>__libc_open64 (1 samples, 0.08%)</title><rect x="49.0134%" y="677" width="0.0789%" height="15" fill="rgb(207,123,46)" fg:x="621" fg:w="1"/><text x="49.2634%" y="687.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.08%)</title><rect x="49.0134%" y="661" width="0.0789%" height="15" fill="rgb(240,218,32)" fg:x="621" fg:w="1"/><text x="49.2634%" y="671.50"></text></g><g><title>mold::elf::SharedFile&lt;mold::elf::X86_64&gt;::parse (1 samples, 0.08%)</title><rect x="49.0923%" y="693" width="0.0789%" height="15" fill="rgb(252,5,43)" fg:x="622" fg:w="1"/><text x="49.3423%" y="703.50"></text></g><g><title>__libc_cfree (1 samples, 0.08%)</title><rect x="49.0923%" y="677" width="0.0789%" height="15" fill="rgb(252,84,19)" fg:x="622" fg:w="1"/><text x="49.3423%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.32%)</title><rect x="48.9345%" y="709" width="0.3157%" height="15" fill="rgb(243,152,39)" fg:x="620" fg:w="4"/><text x="49.1845%" y="719.50"></text></g><g><title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;mold::elf::FdeRecord&lt;mold::elf::X86_64&gt;*, std::vector&lt;mold::elf::FdeRecord&lt;mold::elf::X86_64&gt;, std::allocator&lt;mold::elf::FdeRecord&lt;mold::elf::X86_64&gt; &gt; &gt; &gt;, mold::elf::FdeRecord&lt;mold::elf::X86_64&gt;*, __gnu_cxx::__ops::_Iter_comp_iter&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;::read_ehframe(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;, mold::elf::InputSection&lt;mold::elf::X86_64&gt;&amp;)::{lambda(mold::elf::FdeRecord&lt;mold::elf::X86_64&gt; const&amp;, mold::elf::FdeRecord&lt;mold::elf::X86_64&gt; const&amp;)#1}&gt; &gt; (1 samples, 0.08%)</title><rect x="49.1713%" y="693" width="0.0789%" height="15" fill="rgb(234,160,15)" fg:x="623" fg:w="1"/><text x="49.4213%" y="703.50"></text></g><g><title>mi_find_page (6 samples, 0.47%)</title><rect x="50.2762%" y="581" width="0.4736%" height="15" fill="rgb(237,34,20)" fg:x="637" fg:w="6"/><text x="50.5262%" y="591.50"></text></g><g><title>mi_page_queue_find_free_ex (6 samples, 0.47%)</title><rect x="50.2762%" y="565" width="0.4736%" height="15" fill="rgb(229,97,13)" fg:x="637" fg:w="6"/><text x="50.5262%" y="575.50"></text></g><g><title>mi_page_fresh_alloc (6 samples, 0.47%)</title><rect x="50.2762%" y="549" width="0.4736%" height="15" fill="rgb(234,71,50)" fg:x="637" fg:w="6"/><text x="50.5262%" y="559.50"></text></g><g><title>_mi_segment_page_alloc (6 samples, 0.47%)</title><rect x="50.2762%" y="533" width="0.4736%" height="15" fill="rgb(253,155,4)" fg:x="637" fg:w="6"/><text x="50.5262%" y="543.50"></text></g><g><title>mi_segment_find_free (6 samples, 0.47%)</title><rect x="50.2762%" y="517" width="0.4736%" height="15" fill="rgb(222,185,37)" fg:x="637" fg:w="6"/><text x="50.5262%" y="527.50"></text></g><g><title>_mi_os_commit (6 samples, 0.47%)</title><rect x="50.2762%" y="501" width="0.4736%" height="15" fill="rgb(251,177,13)" fg:x="637" fg:w="6"/><text x="50.5262%" y="511.50"></text></g><g><title>__GI___mprotect (6 samples, 0.47%)</title><rect x="50.2762%" y="485" width="0.4736%" height="15" fill="rgb(250,179,40)" fg:x="637" fg:w="6"/><text x="50.5262%" y="495.50"></text></g><g><title>tbb::detail::r1::market::create_one_job (7 samples, 0.55%)</title><rect x="50.2762%" y="645" width="0.5525%" height="15" fill="rgb(242,44,2)" fg:x="637" fg:w="7"/><text x="50.5262%" y="655.50"></text></g><g><title>tbb::detail::r1::cache_aligned_allocate (7 samples, 0.55%)</title><rect x="50.2762%" y="629" width="0.5525%" height="15" fill="rgb(216,177,13)" fg:x="637" fg:w="7"/><text x="50.5262%" y="639.50"></text></g><g><title>tbb::detail::r1::std_cache_aligned_allocate (7 samples, 0.55%)</title><rect x="50.2762%" y="613" width="0.5525%" height="15" fill="rgb(216,106,43)" fg:x="637" fg:w="7"/><text x="50.5262%" y="623.50"></text></g><g><title>_mi_malloc_generic (7 samples, 0.55%)</title><rect x="50.2762%" y="597" width="0.5525%" height="15" fill="rgb(216,183,2)" fg:x="637" fg:w="7"/><text x="50.5262%" y="607.50"></text></g><g><title>mi_thread_init (1 samples, 0.08%)</title><rect x="50.7498%" y="581" width="0.0789%" height="15" fill="rgb(249,75,3)" fg:x="643" fg:w="1"/><text x="50.9998%" y="591.50"></text></g><g><title>_mi_os_alloc (1 samples, 0.08%)</title><rect x="50.7498%" y="565" width="0.0789%" height="15" fill="rgb(219,67,39)" fg:x="643" fg:w="1"/><text x="50.9998%" y="575.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.08%)</title><rect x="50.7498%" y="549" width="0.0789%" height="15" fill="rgb(253,228,2)" fg:x="643" fg:w="1"/><text x="50.9998%" y="559.50"></text></g><g><title>std::this_thread::yield (3 samples, 0.24%)</title><rect x="50.9077%" y="517" width="0.2368%" height="15" fill="rgb(235,138,27)" fg:x="645" fg:w="3"/><text x="51.1577%" y="527.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::receive_or_steal_task&lt;false, tbb::detail::r1::outermost_worker_waiter&gt; (3 samples, 0.24%)</title><rect x="50.9077%" y="501" width="0.2368%" height="15" fill="rgb(236,97,51)" fg:x="645" fg:w="3"/><text x="51.1577%" y="511.50"></text></g><g><title>__GI___sched_yield (3 samples, 0.24%)</title><rect x="50.9077%" y="485" width="0.2368%" height="15" fill="rgb(240,80,30)" fg:x="645" fg:w="3"/><text x="51.1577%" y="495.50"></text></g><g><title>machine_pause (1 samples, 0.08%)</title><rect x="51.1444%" y="469" width="0.0789%" height="15" fill="rgb(230,178,19)" fg:x="648" fg:w="1"/><text x="51.3944%" y="479.50"></text></g><g><title>tbb::detail::d0::atomic_backoff::bounded_pause (3 samples, 0.24%)</title><rect x="51.1444%" y="485" width="0.2368%" height="15" fill="rgb(210,190,27)" fg:x="648" fg:w="3"/><text x="51.3944%" y="495.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::receive_or_steal_task&lt;false, tbb::detail::r1::outermost_worker_waiter&gt; (2 samples, 0.16%)</title><rect x="51.2234%" y="469" width="0.1579%" height="15" fill="rgb(222,107,31)" fg:x="649" fg:w="2"/><text x="51.4734%" y="479.50"></text></g><g><title>tbb::detail::r1::outermost_worker_waiter::pause (7 samples, 0.55%)</title><rect x="50.9077%" y="565" width="0.5525%" height="15" fill="rgb(216,127,34)" fg:x="645" fg:w="7"/><text x="51.1577%" y="575.50"></text></g><g><title>tbb::detail::r1::waiter_base::pause (7 samples, 0.55%)</title><rect x="50.9077%" y="549" width="0.5525%" height="15" fill="rgb(234,116,52)" fg:x="645" fg:w="7"/><text x="51.1577%" y="559.50"></text></g><g><title>tbb::detail::r1::stealing_loop_backoff::pause (7 samples, 0.55%)</title><rect x="50.9077%" y="533" width="0.5525%" height="15" fill="rgb(222,124,15)" fg:x="645" fg:w="7"/><text x="51.1577%" y="543.50"></text></g><g><title>tbb::detail::r1::prolonged_pause (4 samples, 0.32%)</title><rect x="51.1444%" y="517" width="0.3157%" height="15" fill="rgb(231,179,28)" fg:x="648" fg:w="4"/><text x="51.3944%" y="527.50"></text></g><g><title>tbb::detail::r1::prolonged_pause_impl (4 samples, 0.32%)</title><rect x="51.1444%" y="501" width="0.3157%" height="15" fill="rgb(226,93,45)" fg:x="648" fg:w="4"/><text x="51.3944%" y="511.50"></text></g><g><title>tbb::detail::r1::machine_time_stamp (1 samples, 0.08%)</title><rect x="51.3812%" y="485" width="0.0789%" height="15" fill="rgb(215,8,51)" fg:x="651" fg:w="1"/><text x="51.6312%" y="495.50"></text></g><g><title>__GI___clone (29 samples, 2.29%)</title><rect x="49.2502%" y="709" width="2.2889%" height="15" fill="rgb(223,106,5)" fg:x="624" fg:w="29"/><text x="49.5002%" y="719.50">_..</text></g><g><title>start_thread (17 samples, 1.34%)</title><rect x="50.1973%" y="693" width="1.3418%" height="15" fill="rgb(250,191,5)" fg:x="636" fg:w="17"/><text x="50.4473%" y="703.50"></text></g><g><title>tbb::detail::r1::rml::private_worker::thread_routine (17 samples, 1.34%)</title><rect x="50.1973%" y="677" width="1.3418%" height="15" fill="rgb(242,132,44)" fg:x="636" fg:w="17"/><text x="50.4473%" y="687.50"></text></g><g><title>tbb::detail::r1::rml::private_worker::run (17 samples, 1.34%)</title><rect x="50.1973%" y="661" width="1.3418%" height="15" fill="rgb(251,152,29)" fg:x="636" fg:w="17"/><text x="50.4473%" y="671.50"></text></g><g><title>tbb::detail::r1::market::process (9 samples, 0.71%)</title><rect x="50.8287%" y="645" width="0.7103%" height="15" fill="rgb(218,179,5)" fg:x="644" fg:w="9"/><text x="51.0787%" y="655.50"></text></g><g><title>tbb::detail::r1::arena::process (9 samples, 0.71%)</title><rect x="50.8287%" y="629" width="0.7103%" height="15" fill="rgb(227,67,19)" fg:x="644" fg:w="9"/><text x="51.0787%" y="639.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::local_wait_for_all&lt;tbb::detail::r1::outermost_worker_waiter&gt; (8 samples, 0.63%)</title><rect x="50.9077%" y="613" width="0.6314%" height="15" fill="rgb(233,119,31)" fg:x="645" fg:w="8"/><text x="51.1577%" y="623.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::local_wait_for_all&lt;false, tbb::detail::r1::outermost_worker_waiter&gt; (8 samples, 0.63%)</title><rect x="50.9077%" y="597" width="0.6314%" height="15" fill="rgb(241,120,22)" fg:x="645" fg:w="8"/><text x="51.1577%" y="607.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::receive_or_steal_task&lt;false, tbb::detail::r1::outermost_worker_waiter&gt; (8 samples, 0.63%)</title><rect x="50.9077%" y="581" width="0.6314%" height="15" fill="rgb(224,102,30)" fg:x="645" fg:w="8"/><text x="51.1577%" y="591.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::steal_or_get_critical (1 samples, 0.08%)</title><rect x="51.4601%" y="565" width="0.0789%" height="15" fill="rgb(210,164,37)" fg:x="652" fg:w="1"/><text x="51.7101%" y="575.50"></text></g><g><title>tbb::detail::r1::arena::steal_task (1 samples, 0.08%)</title><rect x="51.4601%" y="549" width="0.0789%" height="15" fill="rgb(226,191,16)" fg:x="652" fg:w="1"/><text x="51.7101%" y="559.50"></text></g><g><title>tbb::detail::r1::arena_slot::steal_task (1 samples, 0.08%)</title><rect x="51.4601%" y="533" width="0.0789%" height="15" fill="rgb(214,40,45)" fg:x="652" fg:w="1"/><text x="51.7101%" y="543.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.08%)</title><rect x="51.5391%" y="645" width="0.0789%" height="15" fill="rgb(244,29,26)" fg:x="653" fg:w="1"/><text x="51.7891%" y="655.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="51.5391%" y="629" width="0.0789%" height="15" fill="rgb(216,16,5)" fg:x="653" fg:w="1"/><text x="51.7891%" y="639.50"></text></g><g><title>openaux (1 samples, 0.08%)</title><rect x="51.5391%" y="613" width="0.0789%" height="15" fill="rgb(249,76,35)" fg:x="653" fg:w="1"/><text x="51.7891%" y="623.50"></text></g><g><title>_dl_map_object (1 samples, 0.08%)</title><rect x="51.5391%" y="597" width="0.0789%" height="15" fill="rgb(207,11,44)" fg:x="653" fg:w="1"/><text x="51.7891%" y="607.50"></text></g><g><title>open_verify.constprop.0 (1 samples, 0.08%)</title><rect x="51.5391%" y="581" width="0.0789%" height="15" fill="rgb(228,190,49)" fg:x="653" fg:w="1"/><text x="51.7891%" y="591.50"></text></g><g><title>__GI___open_nocancel (1 samples, 0.08%)</title><rect x="51.5391%" y="565" width="0.0789%" height="15" fill="rgb(214,173,12)" fg:x="653" fg:w="1"/><text x="51.7891%" y="575.50"></text></g><g><title>_start (3 samples, 0.24%)</title><rect x="51.5391%" y="709" width="0.2368%" height="15" fill="rgb(218,26,35)" fg:x="653" fg:w="3"/><text x="51.7891%" y="719.50"></text></g><g><title>_dl_start (3 samples, 0.24%)</title><rect x="51.5391%" y="693" width="0.2368%" height="15" fill="rgb(220,200,19)" fg:x="653" fg:w="3"/><text x="51.7891%" y="703.50"></text></g><g><title>_dl_sysdep_start (3 samples, 0.24%)</title><rect x="51.5391%" y="677" width="0.2368%" height="15" fill="rgb(239,95,49)" fg:x="653" fg:w="3"/><text x="51.7891%" y="687.50"></text></g><g><title>dl_main (3 samples, 0.24%)</title><rect x="51.5391%" y="661" width="0.2368%" height="15" fill="rgb(235,85,53)" fg:x="653" fg:w="3"/><text x="51.7891%" y="671.50"></text></g><g><title>_dl_relocate_object (2 samples, 0.16%)</title><rect x="51.6180%" y="645" width="0.1579%" height="15" fill="rgb(233,133,31)" fg:x="654" fg:w="2"/><text x="51.8680%" y="655.50"></text></g><g><title>_dl_protect_relro (1 samples, 0.08%)</title><rect x="51.6969%" y="629" width="0.0789%" height="15" fill="rgb(218,25,20)" fg:x="655" fg:w="1"/><text x="51.9469%" y="639.50"></text></g><g><title>__mprotect (1 samples, 0.08%)</title><rect x="51.6969%" y="613" width="0.0789%" height="15" fill="rgb(252,210,38)" fg:x="655" fg:w="1"/><text x="51.9469%" y="623.50"></text></g><g><title>mold::ConcurrentMap&lt;mold::elf::SectionFragment&lt;mold::elf::X86_64&gt; &gt;::insert (4 samples, 0.32%)</title><rect x="51.7758%" y="709" width="0.3157%" height="15" fill="rgb(242,134,21)" fg:x="656" fg:w="4"/><text x="52.0258%" y="719.50"></text></g><g><title>mold::HyperLogLog::merge (4 samples, 0.32%)</title><rect x="52.0916%" y="709" width="0.3157%" height="15" fill="rgb(213,28,48)" fg:x="660" fg:w="4"/><text x="52.3416%" y="719.50"></text></g><g><title>__GI___mmap64 (7 samples, 0.55%)</title><rect x="52.4073%" y="693" width="0.5525%" height="15" fill="rgb(250,196,2)" fg:x="664" fg:w="7"/><text x="52.6573%" y="703.50"></text></g><g><title>___fxstat64 (1 samples, 0.08%)</title><rect x="52.9597%" y="693" width="0.0789%" height="15" fill="rgb(227,5,17)" fg:x="671" fg:w="1"/><text x="53.2097%" y="703.50"></text></g><g><title>mold::MappedFile&lt;mold::elf::Context&lt;mold::elf::X86_64&gt; &gt;::open (9 samples, 0.71%)</title><rect x="52.4073%" y="709" width="0.7103%" height="15" fill="rgb(221,226,24)" fg:x="664" fg:w="9"/><text x="52.6573%" y="719.50"></text></g><g><title>__libc_close (1 samples, 0.08%)</title><rect x="53.0387%" y="693" width="0.0789%" height="15" fill="rgb(211,5,48)" fg:x="672" fg:w="1"/><text x="53.2887%" y="703.50"></text></g><g><title>mold::elf::InputFile&lt;mold::elf::X86_64&gt;::get_data&lt;mold::elf::ElfRel&lt;mold::elf::X86_64&gt; &gt; (2 samples, 0.16%)</title><rect x="53.1176%" y="709" width="0.1579%" height="15" fill="rgb(219,150,6)" fg:x="673" fg:w="2"/><text x="53.3676%" y="719.50"></text></g><g><title>mold::elf::InputSection&lt;mold::elf::X86_64&gt;::apply_reloc_nonalloc (3 samples, 0.24%)</title><rect x="53.2755%" y="709" width="0.2368%" height="15" fill="rgb(251,46,16)" fg:x="675" fg:w="3"/><text x="53.5255%" y="719.50"></text></g><g><title>mold::elf::InputSection&lt;mold::elf::X86_64&gt;::write_to (8 samples, 0.63%)</title><rect x="53.5122%" y="709" width="0.6314%" height="15" fill="rgb(220,204,40)" fg:x="678" fg:w="8"/><text x="53.7622%" y="719.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (8 samples, 0.63%)</title><rect x="53.5122%" y="693" width="0.6314%" height="15" fill="rgb(211,85,2)" fg:x="678" fg:w="8"/><text x="53.7622%" y="703.50"></text></g><g><title>mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::insert (1 samples, 0.08%)</title><rect x="54.1436%" y="709" width="0.0789%" height="15" fill="rgb(229,17,7)" fg:x="686" fg:w="1"/><text x="54.3936%" y="719.50"></text></g><g><title>mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;::compute_symtab (1 samples, 0.08%)</title><rect x="54.2226%" y="709" width="0.0789%" height="15" fill="rgb(239,72,28)" fg:x="687" fg:w="1"/><text x="54.4726%" y="719.50"></text></g><g><title>__memchr_sse2 (1 samples, 0.08%)</title><rect x="54.4594%" y="693" width="0.0789%" height="15" fill="rgb(230,47,54)" fg:x="690" fg:w="1"/><text x="54.7094%" y="703.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="54.5383%" y="693" width="0.0789%" height="15" fill="rgb(214,50,8)" fg:x="691" fg:w="1"/><text x="54.7883%" y="703.50"></text></g><g><title>mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;::initialize_mergeable_sections (5 samples, 0.39%)</title><rect x="54.3015%" y="709" width="0.3946%" height="15" fill="rgb(216,198,43)" fg:x="688" fg:w="5"/><text x="54.5515%" y="719.50"></text></g><g><title>operator new (1 samples, 0.08%)</title><rect x="54.6172%" y="693" width="0.0789%" height="15" fill="rgb(234,20,35)" fg:x="692" fg:w="1"/><text x="54.8672%" y="703.50"></text></g><g><title>mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;::initialize_sections (3 samples, 0.24%)</title><rect x="54.6961%" y="709" width="0.2368%" height="15" fill="rgb(254,45,19)" fg:x="693" fg:w="3"/><text x="54.9461%" y="719.50"></text></g><g><title>operator new (2 samples, 0.16%)</title><rect x="54.7751%" y="693" width="0.1579%" height="15" fill="rgb(219,14,44)" fg:x="694" fg:w="2"/><text x="55.0251%" y="703.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.16%)</title><rect x="54.7751%" y="677" width="0.1579%" height="15" fill="rgb(217,220,26)" fg:x="694" fg:w="2"/><text x="55.0251%" y="687.50"></text></g><g><title>mi_find_page (2 samples, 0.16%)</title><rect x="54.7751%" y="661" width="0.1579%" height="15" fill="rgb(213,158,28)" fg:x="694" fg:w="2"/><text x="55.0251%" y="671.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.16%)</title><rect x="54.7751%" y="645" width="0.1579%" height="15" fill="rgb(252,51,52)" fg:x="694" fg:w="2"/><text x="55.0251%" y="655.50"></text></g><g><title>mi_page_free_list_extend.isra.0 (2 samples, 0.16%)</title><rect x="54.7751%" y="629" width="0.1579%" height="15" fill="rgb(246,89,16)" fg:x="694" fg:w="2"/><text x="55.0251%" y="639.50"></text></g><g><title>_mi_segment_page_alloc (1 samples, 0.08%)</title><rect x="55.0118%" y="613" width="0.0789%" height="15" fill="rgb(216,158,49)" fg:x="697" fg:w="1"/><text x="55.2618%" y="623.50"></text></g><g><title>mi_segment_reclaim_or_alloc (1 samples, 0.08%)</title><rect x="55.0118%" y="597" width="0.0789%" height="15" fill="rgb(236,107,19)" fg:x="697" fg:w="1"/><text x="55.2618%" y="607.50"></text></g><g><title>mi_segment_init (1 samples, 0.08%)</title><rect x="55.0118%" y="581" width="0.0789%" height="15" fill="rgb(228,185,30)" fg:x="697" fg:w="1"/><text x="55.2618%" y="591.50"></text></g><g><title>mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;::initialize_symbols (7 samples, 0.55%)</title><rect x="54.9329%" y="709" width="0.5525%" height="15" fill="rgb(246,134,8)" fg:x="696" fg:w="7"/><text x="55.1829%" y="719.50"></text></g><g><title>operator new (6 samples, 0.47%)</title><rect x="55.0118%" y="693" width="0.4736%" height="15" fill="rgb(214,143,50)" fg:x="697" fg:w="6"/><text x="55.2618%" y="703.50"></text></g><g><title>_mi_malloc_generic (6 samples, 0.47%)</title><rect x="55.0118%" y="677" width="0.4736%" height="15" fill="rgb(228,75,8)" fg:x="697" fg:w="6"/><text x="55.2618%" y="687.50"></text></g><g><title>mi_find_page (6 samples, 0.47%)</title><rect x="55.0118%" y="661" width="0.4736%" height="15" fill="rgb(207,175,4)" fg:x="697" fg:w="6"/><text x="55.2618%" y="671.50"></text></g><g><title>mi_page_queue_find_free_ex (6 samples, 0.47%)</title><rect x="55.0118%" y="645" width="0.4736%" height="15" fill="rgb(205,108,24)" fg:x="697" fg:w="6"/><text x="55.2618%" y="655.50"></text></g><g><title>mi_page_fresh_alloc (6 samples, 0.47%)</title><rect x="55.0118%" y="629" width="0.4736%" height="15" fill="rgb(244,120,49)" fg:x="697" fg:w="6"/><text x="55.2618%" y="639.50"></text></g><g><title>mi_page_free_list_extend.isra.0 (5 samples, 0.39%)</title><rect x="55.0908%" y="613" width="0.3946%" height="15" fill="rgb(223,47,38)" fg:x="698" fg:w="5"/><text x="55.3408%" y="623.50"></text></g><g><title>mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;::read_ehframe (2 samples, 0.16%)</title><rect x="55.4854%" y="709" width="0.1579%" height="15" fill="rgb(229,179,11)" fg:x="703" fg:w="2"/><text x="55.7354%" y="719.50"></text></g><g><title>mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;::register_section_pieces (6 samples, 0.47%)</title><rect x="55.6433%" y="709" width="0.4736%" height="15" fill="rgb(231,122,1)" fg:x="705" fg:w="6"/><text x="55.8933%" y="719.50"></text></g><g><title>mold::elf::OutputSection&lt;mold::elf::X86_64&gt;::get_instance (1 samples, 0.08%)</title><rect x="56.1168%" y="709" width="0.0789%" height="15" fill="rgb(245,119,9)" fg:x="711" fg:w="1"/><text x="56.3668%" y="719.50"></text></g><g><title>mold::elf::bin_sections&lt;mold::elf::X86_64&gt; (2 samples, 0.16%)</title><rect x="56.1957%" y="709" width="0.1579%" height="15" fill="rgb(241,163,25)" fg:x="712" fg:w="2"/><text x="56.4457%" y="719.50"></text></g><g><title>mold::elf::get_output_name&lt;mold::elf::X86_64&gt; (2 samples, 0.16%)</title><rect x="56.3536%" y="709" width="0.1579%" height="15" fill="rgb(217,214,3)" fg:x="714" fg:w="2"/><text x="56.6036%" y="719.50"></text></g><g><title>__memcmp_sse4_1 (1 samples, 0.08%)</title><rect x="56.4325%" y="693" width="0.0789%" height="15" fill="rgb(240,86,28)" fg:x="715" fg:w="1"/><text x="56.6825%" y="703.50"></text></g><g><title>mold::elf::fork_child (7 samples, 0.55%)</title><rect x="56.5114%" y="693" width="0.5525%" height="15" fill="rgb(215,47,9)" fg:x="716" fg:w="7"/><text x="56.7614%" y="703.50"></text></g><g><title>__GI___fork (7 samples, 0.55%)</title><rect x="56.5114%" y="677" width="0.5525%" height="15" fill="rgb(252,25,45)" fg:x="716" fg:w="7"/><text x="56.7614%" y="687.50"></text></g><g><title>mold::elf::main (8 samples, 0.63%)</title><rect x="56.5114%" y="709" width="0.6314%" height="15" fill="rgb(251,164,9)" fg:x="716" fg:w="8"/><text x="56.7614%" y="719.50"></text></g><g><title>mold::elf::resolve_symbols&lt;mold::elf::X86_64&gt; (1 samples, 0.08%)</title><rect x="57.0639%" y="693" width="0.0789%" height="15" fill="rgb(233,194,0)" fg:x="723" fg:w="1"/><text x="57.3139%" y="703.50"></text></g><g><title>tbb::detail::d2::parallel_for_each&lt;__gnu_cxx::__normal_iterator&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;**, std::vector&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*, std::allocator&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*&gt; &gt; &gt;, mold::elf::resolve_symbols&lt;mold::elf::X86_64&gt;(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*, tbb::detail::d1::feeder&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*&gt;&amp;)#1}&gt; (1 samples, 0.08%)</title><rect x="57.0639%" y="677" width="0.0789%" height="15" fill="rgb(249,111,24)" fg:x="723" fg:w="1"/><text x="57.3139%" y="687.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::execute_and_wait (1 samples, 0.08%)</title><rect x="57.0639%" y="661" width="0.0789%" height="15" fill="rgb(250,223,3)" fg:x="723" fg:w="1"/><text x="57.3139%" y="671.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::local_wait_for_all&lt;tbb::detail::r1::external_waiter&gt; (1 samples, 0.08%)</title><rect x="57.0639%" y="645" width="0.0789%" height="15" fill="rgb(236,178,37)" fg:x="723" fg:w="1"/><text x="57.3139%" y="655.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::local_wait_for_all&lt;false, tbb::detail::r1::external_waiter&gt; (1 samples, 0.08%)</title><rect x="57.0639%" y="629" width="0.0789%" height="15" fill="rgb(241,158,50)" fg:x="723" fg:w="1"/><text x="57.3139%" y="639.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::receive_or_steal_task&lt;false, tbb::detail::r1::external_waiter&gt; (1 samples, 0.08%)</title><rect x="57.0639%" y="613" width="0.0789%" height="15" fill="rgb(213,121,41)" fg:x="723" fg:w="1"/><text x="57.3139%" y="623.50"></text></g><g><title>tbb::detail::r1::external_waiter::pause (1 samples, 0.08%)</title><rect x="57.0639%" y="597" width="0.0789%" height="15" fill="rgb(240,92,3)" fg:x="723" fg:w="1"/><text x="57.3139%" y="607.50"></text></g><g><title>tbb::detail::r1::waiter_base::pause (1 samples, 0.08%)</title><rect x="57.0639%" y="581" width="0.0789%" height="15" fill="rgb(205,123,3)" fg:x="723" fg:w="1"/><text x="57.3139%" y="591.50"></text></g><g><title>tbb::detail::r1::stealing_loop_backoff::pause (1 samples, 0.08%)</title><rect x="57.0639%" y="565" width="0.0789%" height="15" fill="rgb(205,97,47)" fg:x="723" fg:w="1"/><text x="57.3139%" y="575.50"></text></g><g><title>std::this_thread::yield (1 samples, 0.08%)</title><rect x="57.0639%" y="549" width="0.0789%" height="15" fill="rgb(247,152,14)" fg:x="723" fg:w="1"/><text x="57.3139%" y="559.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::receive_or_steal_task&lt;false, tbb::detail::r1::external_waiter&gt; (1 samples, 0.08%)</title><rect x="57.0639%" y="533" width="0.0789%" height="15" fill="rgb(248,195,53)" fg:x="723" fg:w="1"/><text x="57.3139%" y="543.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.08%)</title><rect x="57.0639%" y="517" width="0.0789%" height="15" fill="rgb(226,201,16)" fg:x="723" fg:w="1"/><text x="57.3139%" y="527.50"></text></g><g><title>mold::elf::scan_rels&lt;mold::elf::X86_64&gt; (1 samples, 0.08%)</title><rect x="57.1429%" y="709" width="0.0789%" height="15" fill="rgb(205,98,0)" fg:x="724" fg:w="1"/><text x="57.3929%" y="719.50"></text></g><g><title>operator new (1 samples, 0.08%)</title><rect x="57.1429%" y="693" width="0.0789%" height="15" fill="rgb(214,191,48)" fg:x="724" fg:w="1"/><text x="57.3929%" y="703.50"></text></g><g><title>mold::path_filename (1 samples, 0.08%)</title><rect x="57.2218%" y="709" width="0.0789%" height="15" fill="rgb(237,112,39)" fg:x="725" fg:w="1"/><text x="57.4718%" y="719.50"></text></g><g><title>mold::read_fat_archive_members&lt;mold::elf::Context&lt;mold::elf::X86_64&gt; &gt; (2 samples, 0.16%)</title><rect x="57.3007%" y="709" width="0.1579%" height="15" fill="rgb(247,203,27)" fg:x="726" fg:w="2"/><text x="57.5507%" y="719.50"></text></g><g><title>__GI_____strtoll_l_internal (2 samples, 0.16%)</title><rect x="57.3007%" y="693" width="0.1579%" height="15" fill="rgb(235,124,28)" fg:x="726" fg:w="2"/><text x="57.5507%" y="703.50"></text></g><g><title>std::__detail::__regex_algo_impl&lt;char const*, std::allocator&lt;std::__cxx11::sub_match&lt;char const*&gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;, (std::__detail::_RegexExecutorPolicy)0, true&gt; (1 samples, 0.08%)</title><rect x="57.4586%" y="709" width="0.0789%" height="15" fill="rgb(208,207,46)" fg:x="728" fg:w="1"/><text x="57.7086%" y="719.50"></text></g><g><title>std::__final_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal*, std::vector&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal, std::allocator&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::{lambda(mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal const&amp;, mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal const&amp;)#1}&gt; &gt; (1 samples, 0.08%)</title><rect x="57.5375%" y="709" width="0.0789%" height="15" fill="rgb(234,176,4)" fg:x="729" fg:w="1"/><text x="57.7875%" y="719.50"></text></g><g><title>__memcmp_sse4_1 (1 samples, 0.08%)</title><rect x="57.5375%" y="693" width="0.0789%" height="15" fill="rgb(230,133,28)" fg:x="729" fg:w="1"/><text x="57.7875%" y="703.50"></text></g><g><title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal*, std::vector&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal, std::allocator&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::{lambda(mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal const&amp;, mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal const&amp;)#1}&gt; &gt; (1 samples, 0.08%)</title><rect x="57.6164%" y="709" width="0.0789%" height="15" fill="rgb(211,137,40)" fg:x="730" fg:w="1"/><text x="57.8664%" y="719.50"></text></g><g><title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal*, std::vector&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal, std::allocator&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::{lambda(mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal const&amp;, mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal const&amp;)#1}&gt; &gt; (1 samples, 0.08%)</title><rect x="57.6953%" y="709" width="0.0789%" height="15" fill="rgb(254,35,13)" fg:x="731" fg:w="1"/><text x="57.9453%" y="719.50"></text></g><g><title>__memcmp_sse4_1 (1 samples, 0.08%)</title><rect x="57.6953%" y="693" width="0.0789%" height="15" fill="rgb(225,49,51)" fg:x="731" fg:w="1"/><text x="57.9453%" y="703.50"></text></g><g><title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::starts_with (3 samples, 0.24%)</title><rect x="57.7743%" y="709" width="0.2368%" height="15" fill="rgb(251,10,15)" fg:x="732" fg:w="3"/><text x="58.0243%" y="719.50"></text></g><g><title>__memcmp_sse4_1 (1 samples, 0.08%)</title><rect x="57.9321%" y="693" width="0.0789%" height="15" fill="rgb(228,207,15)" fg:x="734" fg:w="1"/><text x="58.1821%" y="703.50"></text></g><g><title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.08%)</title><rect x="58.0110%" y="709" width="0.0789%" height="15" fill="rgb(241,99,19)" fg:x="735" fg:w="1"/><text x="58.2610%" y="719.50"></text></g><g><title>std::vector&lt;mold::elf::SectionFragment&lt;mold::elf::X86_64&gt;*, std::allocator&lt;mold::elf::SectionFragment&lt;mold::elf::X86_64&gt;*&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;mold::elf::SectionFragment&lt;mold::elf::X86_64&gt;**, std::vector&lt;mold::elf::SectionFragment&lt;mold::elf::X86_64&gt;*, std::allocator&lt;mold::elf::SectionFragment&lt;mold::elf::X86_64&gt;*&gt; &gt; &gt; &gt; (1 samples, 0.08%)</title><rect x="58.0900%" y="709" width="0.0789%" height="15" fill="rgb(207,104,49)" fg:x="736" fg:w="1"/><text x="58.3400%" y="719.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="58.0900%" y="693" width="0.0789%" height="15" fill="rgb(234,99,18)" fg:x="736" fg:w="1"/><text x="58.3400%" y="703.50"></text></g><g><title>std::vector&lt;mold::elf::SectionFragmentRef&lt;mold::elf::X86_64&gt;, std::allocator&lt;mold::elf::SectionFragmentRef&lt;mold::elf::X86_64&gt; &gt; &gt;::_M_default_append (1 samples, 0.08%)</title><rect x="58.1689%" y="709" width="0.0789%" height="15" fill="rgb(213,191,49)" fg:x="737" fg:w="1"/><text x="58.4189%" y="719.50"></text></g><g><title>__memset_erms (1 samples, 0.08%)</title><rect x="58.1689%" y="693" width="0.0789%" height="15" fill="rgb(210,226,19)" fg:x="737" fg:w="1"/><text x="58.4189%" y="703.50"></text></g><g><title>std::vector&lt;mold::elf::Symbol&lt;mold::elf::X86_64&gt;*, std::allocator&lt;mold::elf::Symbol&lt;mold::elf::X86_64&gt;*&gt; &gt;::_M_default_append (1 samples, 0.08%)</title><rect x="58.2478%" y="709" width="0.0789%" height="15" fill="rgb(229,97,18)" fg:x="738" fg:w="1"/><text x="58.4978%" y="719.50"></text></g><g><title>operator new (1 samples, 0.08%)</title><rect x="58.2478%" y="693" width="0.0789%" height="15" fill="rgb(211,167,15)" fg:x="738" fg:w="1"/><text x="58.4978%" y="703.50"></text></g><g><title>_mi_malloc_generic (1 samples, 0.08%)</title><rect x="58.2478%" y="677" width="0.0789%" height="15" fill="rgb(210,169,34)" fg:x="738" fg:w="1"/><text x="58.4978%" y="687.50"></text></g><g><title>mi_find_page (1 samples, 0.08%)</title><rect x="58.2478%" y="661" width="0.0789%" height="15" fill="rgb(241,121,31)" fg:x="738" fg:w="1"/><text x="58.4978%" y="671.50"></text></g><g><title>mi_page_queue_find_free_ex (1 samples, 0.08%)</title><rect x="58.2478%" y="645" width="0.0789%" height="15" fill="rgb(232,40,11)" fg:x="738" fg:w="1"/><text x="58.4978%" y="655.50"></text></g><g><title>mi_page_fresh_alloc (1 samples, 0.08%)</title><rect x="58.2478%" y="629" width="0.0789%" height="15" fill="rgb(205,86,26)" fg:x="738" fg:w="1"/><text x="58.4978%" y="639.50"></text></g><g><title>_mi_segment_page_alloc (1 samples, 0.08%)</title><rect x="58.2478%" y="613" width="0.0789%" height="15" fill="rgb(231,126,28)" fg:x="738" fg:w="1"/><text x="58.4978%" y="623.50"></text></g><g><title>mi_segment_find_free (1 samples, 0.08%)</title><rect x="58.2478%" y="597" width="0.0789%" height="15" fill="rgb(219,221,18)" fg:x="738" fg:w="1"/><text x="58.4978%" y="607.50"></text></g><g><title>_mi_os_commit (1 samples, 0.08%)</title><rect x="58.2478%" y="581" width="0.0789%" height="15" fill="rgb(211,40,0)" fg:x="738" fg:w="1"/><text x="58.4978%" y="591.50"></text></g><g><title>__GI___mprotect (1 samples, 0.08%)</title><rect x="58.2478%" y="565" width="0.0789%" height="15" fill="rgb(239,85,43)" fg:x="738" fg:w="1"/><text x="58.4978%" y="575.50"></text></g><g><title>std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.08%)</title><rect x="58.3268%" y="709" width="0.0789%" height="15" fill="rgb(231,55,21)" fg:x="739" fg:w="1"/><text x="58.5768%" y="719.50"></text></g><g><title>std::vector&lt;std::unique_ptr&lt;mold::elf::InputSection&lt;mold::elf::X86_64&gt;, std::default_delete&lt;mold::elf::InputSection&lt;mold::elf::X86_64&gt; &gt; &gt;, std::allocator&lt;std::unique_ptr&lt;mold::elf::InputSection&lt;mold::elf::X86_64&gt;, std::default_delete&lt;mold::elf::InputSection&lt;mold::elf::X86_64&gt; &gt; &gt; &gt; &gt;::_M_default_append (1 samples, 0.08%)</title><rect x="58.4057%" y="709" width="0.0789%" height="15" fill="rgb(225,184,43)" fg:x="740" fg:w="1"/><text x="58.6557%" y="719.50"></text></g><g><title>__memset_erms (1 samples, 0.08%)</title><rect x="58.4057%" y="693" width="0.0789%" height="15" fill="rgb(251,158,41)" fg:x="740" fg:w="1"/><text x="58.6557%" y="703.50"></text></g><g><title>tbb::detail::d1::dynamic_grainsize_mode&lt;tbb::detail::d1::adaptive_mode&lt;tbb::detail::d1::auto_partition_type&gt; &gt;::work_balance&lt;tbb::detail::d1::start_for&lt;tbb::detail::d1::blocked_range&lt;long&gt;, tbb::detail::d1::parallel_for_body_wrapper&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::write_to(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;, unsigned char*)::{lambda(long)#1}, long&gt;, tbb::detail::d1::auto_partitioner const&gt;, tbb::detail::d1::blocked_range&lt;long&gt; &gt; (2 samples, 0.16%)</title><rect x="58.4846%" y="709" width="0.1579%" height="15" fill="rgb(234,159,37)" fg:x="741" fg:w="2"/><text x="58.7346%" y="719.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (2 samples, 0.16%)</title><rect x="58.4846%" y="693" width="0.1579%" height="15" fill="rgb(216,204,22)" fg:x="741" fg:w="2"/><text x="58.7346%" y="703.50"></text></g><g><title>tbb::detail::d1::quick_sort_pretest_body&lt;__gnu_cxx::__normal_iterator&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal*, std::vector&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal, std::allocator&lt;mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal&gt; &gt; &gt;, mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::{lambda(mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal const&amp;, mold::elf::MergedSection&lt;mold::elf::X86_64&gt;::assign_offsets(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(long)#1}::operator()(long) const::KeyVal const&amp;)#1}&gt;::operator (3 samples, 0.24%)</title><rect x="58.6425%" y="709" width="0.2368%" height="15" fill="rgb(214,17,3)" fg:x="743" fg:w="3"/><text x="58.8925%" y="719.50"></text></g><g><title>__memcmp_sse4_1 (2 samples, 0.16%)</title><rect x="58.7214%" y="693" width="0.1579%" height="15" fill="rgb(212,111,17)" fg:x="744" fg:w="2"/><text x="58.9714%" y="703.50"></text></g><g><title>tbb::detail::d1::start_for&lt;tbb::detail::d1::blocked_range&lt;unsigned long&gt;, tbb::detail::d2::parallel_for_body_wrapper&lt;__gnu_cxx::__normal_iterator&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;**, std::vector&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*, std::allocator&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*&gt; &gt; &gt;, mold::elf::collect_root_set&lt;mold::elf::X86_64&gt;(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*)#1}, mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*&gt;, tbb::detail::d1::auto_partitioner const&gt;::run_body (2 samples, 0.16%)</title><rect x="58.8792%" y="709" width="0.1579%" height="15" fill="rgb(221,157,24)" fg:x="746" fg:w="2"/><text x="59.1292%" y="719.50"></text></g><g><title>tbb::detail::d1::start_for&lt;tbb::detail::d1::blocked_range&lt;unsigned long&gt;, tbb::detail::d2::parallel_for_body_wrapper&lt;__gnu_cxx::__normal_iterator&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;**, std::vector&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*, std::allocator&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*&gt; &gt; &gt;, mold::elf::elf_main&lt;mold::elf::X86_64&gt;(int, char**)::{lambda(mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*)#1}, mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*&gt;, tbb::detail::d1::auto_partitioner const&gt;::execute (1 samples, 0.08%)</title><rect x="59.0371%" y="709" width="0.0789%" height="15" fill="rgb(252,16,13)" fg:x="748" fg:w="1"/><text x="59.2871%" y="719.50"></text></g><g><title>tbb::detail::r1::is_group_execution_cancelled (1 samples, 0.08%)</title><rect x="59.0371%" y="693" width="0.0789%" height="15" fill="rgb(221,62,2)" fg:x="748" fg:w="1"/><text x="59.2871%" y="703.50"></text></g><g><title>tbb::detail::r1::task_group_context_impl::is_group_execution_cancelled (1 samples, 0.08%)</title><rect x="59.0371%" y="677" width="0.0789%" height="15" fill="rgb(247,87,22)" fg:x="748" fg:w="1"/><text x="59.2871%" y="687.50"></text></g><g><title>std::__atomic_base&lt;unsigned int&gt;::load (1 samples, 0.08%)</title><rect x="59.0371%" y="661" width="0.0789%" height="15" fill="rgb(215,73,9)" fg:x="748" fg:w="1"/><text x="59.2871%" y="671.50"></text></g><g><title>tbb::detail::d1::start_for&lt;tbb::detail::d1::blocked_range&lt;unsigned long&gt;, tbb::detail::d2::parallel_for_body_wrapper&lt;__gnu_cxx::__normal_iterator&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;**, std::vector&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*, std::allocator&lt;mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*&gt; &gt; &gt;, mold::elf::sweep&lt;mold::elf::X86_64&gt;(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*)#1}, mold::elf::ObjectFile&lt;mold::elf::X86_64&gt;*&gt;, tbb::detail::d1::auto_partitioner const&gt;::run_body (1 samples, 0.08%)</title><rect x="59.1160%" y="709" width="0.0789%" height="15" fill="rgb(207,175,33)" fg:x="749" fg:w="1"/><text x="59.3660%" y="719.50"></text></g><g><title>tbb::detail::d1::start_for&lt;tbb::detail::d1::quick_sort_range&lt;mold::elf::ElfRel&lt;mold::elf::X86_64&gt;*, mold::elf::RelDynSection&lt;mold::elf::X86_64&gt;::sort(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(mold::elf::ElfRel&lt;mold::elf::X86_64&gt; const&amp;, mold::elf::ElfRel&lt;mold::elf::X86_64&gt; const&amp;)#1}&gt;, tbb::detail::d1::quick_sort_body&lt;mold::elf::ElfRel&lt;mold::elf::X86_64&gt;*, mold::elf::RelDynSection&lt;mold::elf::X86_64&gt;::sort(mold::elf::Context&lt;mold::elf::X86_64&gt;&amp;)::{lambda(mold::elf::ElfRel&lt;mold::elf::X86_64&gt; const&amp;, mold::elf::ElfRel&lt;mold::elf::X86_64&gt; const&amp;)#1}&gt;, tbb::detail::d1::auto_partitioner const&gt;::run (1 samples, 0.08%)</title><rect x="59.1949%" y="709" width="0.0789%" height="15" fill="rgb(243,129,54)" fg:x="750" fg:w="1"/><text x="59.4449%" y="719.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::execute_and_wait (1 samples, 0.08%)</title><rect x="59.1949%" y="693" width="0.0789%" height="15" fill="rgb(227,119,45)" fg:x="750" fg:w="1"/><text x="59.4449%" y="703.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::local_wait_for_all&lt;tbb::detail::r1::external_waiter&gt; (1 samples, 0.08%)</title><rect x="59.1949%" y="677" width="0.0789%" height="15" fill="rgb(205,109,36)" fg:x="750" fg:w="1"/><text x="59.4449%" y="687.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::local_wait_for_all&lt;false, tbb::detail::r1::external_waiter&gt; (1 samples, 0.08%)</title><rect x="59.1949%" y="661" width="0.0789%" height="15" fill="rgb(205,6,39)" fg:x="750" fg:w="1"/><text x="59.4449%" y="671.50"></text></g><g><title>tbb::detail::r1::task_dispatcher::receive_or_steal_task&lt;false, tbb::detail::r1::external_waiter&gt; (1 samples, 0.08%)</title><rect x="59.1949%" y="645" width="0.0789%" height="15" fill="rgb(221,32,16)" fg:x="750" fg:w="1"/><text x="59.4449%" y="655.50"></text></g><g><title>tbb::detail::r1::external_waiter::pause (1 samples, 0.08%)</title><rect x="59.1949%" y="629" width="0.0789%" height="15" fill="rgb(228,144,50)" fg:x="750" fg:w="1"/><text x="59.4449%" y="639.50"></text></g><g><title>tbb::detail::r1::waiter_base::pause (1 samples, 0.08%)</title><rect x="59.1949%" y="613" width="0.0789%" height="15" fill="rgb(229,201,53)" fg:x="750" fg:w="1"/><text x="59.4449%" y="623.50"></text></g><g><title>tbb::detail::r1::stealing_loop_backoff::pause (1 samples, 0.08%)</title><rect x="59.1949%" y="597" width="0.0789%" height="15" fill="rgb(249,153,27)" fg:x="750" fg:w="1"/><text x="59.4449%" y="607.50"></text></g><g><title>tbb::detail::r1::prolonged_pause (1 samples, 0.08%)</title><rect x="59.1949%" y="581" width="0.0789%" height="15" fill="rgb(227,106,25)" fg:x="750" fg:w="1"/><text x="59.4449%" y="591.50"></text></g><g><title>tbb::detail::r1::prolonged_pause_impl (1 samples, 0.08%)</title><rect x="59.1949%" y="565" width="0.0789%" height="15" fill="rgb(230,65,29)" fg:x="750" fg:w="1"/><text x="59.4449%" y="575.50"></text></g><g><title>_mi_malloc_generic (2 samples, 0.16%)</title><rect x="59.3528%" y="677" width="0.1579%" height="15" fill="rgb(221,57,46)" fg:x="752" fg:w="2"/><text x="59.6028%" y="687.50"></text></g><g><title>mi_find_page (2 samples, 0.16%)</title><rect x="59.3528%" y="661" width="0.1579%" height="15" fill="rgb(229,161,17)" fg:x="752" fg:w="2"/><text x="59.6028%" y="671.50"></text></g><g><title>mi_page_queue_find_free_ex (2 samples, 0.16%)</title><rect x="59.3528%" y="645" width="0.1579%" height="15" fill="rgb(222,213,11)" fg:x="752" fg:w="2"/><text x="59.6028%" y="655.50"></text></g><g><title>mi_page_free_list_extend.isra.0 (2 samples, 0.16%)</title><rect x="59.3528%" y="629" width="0.1579%" height="15" fill="rgb(235,35,13)" fg:x="752" fg:w="2"/><text x="59.6028%" y="639.50"></text></g><g><title>mold (140 samples, 11.05%)</title><rect x="48.5399%" y="725" width="11.0497%" height="15" fill="rgb(233,158,34)" fg:x="615" fg:w="140"/><text x="48.7899%" y="735.50">mold</text></g><g><title>tbb::detail::d2::concurrent_hash_map&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, mold::elf::Symbol&lt;mold::elf::X86_64&gt;, tbb::detail::d1::tbb_hash_compare&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, tbb::detail::d1::tbb_allocator&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const, mold::elf::Symbol&lt;mold::elf::X86_64&gt; &gt; &gt; &gt;::allocate_node_move_construct (4 samples, 0.32%)</title><rect x="59.2739%" y="709" width="0.3157%" height="15" fill="rgb(215,151,48)" fg:x="751" fg:w="4"/><text x="59.5239%" y="719.50"></text></g><g><title>tbb::detail::r1::allocate_memory (3 samples, 0.24%)</title><rect x="59.3528%" y="693" width="0.2368%" height="15" fill="rgb(229,84,14)" fg:x="752" fg:w="3"/><text x="59.6028%" y="703.50"></text></g><g><title>mi_malloc (1 samples, 0.08%)</title><rect x="59.5107%" y="677" width="0.0789%" height="15" fill="rgb(229,68,14)" fg:x="754" fg:w="1"/><text x="59.7607%" y="687.50"></text></g><g><title>__GI___clone (1 samples, 0.08%)</title><rect x="59.5896%" y="709" width="0.0789%" height="15" fill="rgb(243,106,26)" fg:x="755" fg:w="1"/><text x="59.8396%" y="719.50"></text></g><g><title>start_thread (1 samples, 0.08%)</title><rect x="59.5896%" y="693" width="0.0789%" height="15" fill="rgb(206,45,38)" fg:x="755" fg:w="1"/><text x="59.8396%" y="703.50"></text></g><g><title>__nptl_deallocate_tsd.part.0 (1 samples, 0.08%)</title><rect x="59.5896%" y="677" width="0.0789%" height="15" fill="rgb(226,6,15)" fg:x="755" fg:w="1"/><text x="59.8396%" y="687.50"></text></g><g><title>_rjem_je_tsd_cleanup (1 samples, 0.08%)</title><rect x="59.5896%" y="661" width="0.0789%" height="15" fill="rgb(232,22,54)" fg:x="755" fg:w="1"/><text x="59.8396%" y="671.50"></text></g><g><title>tsd_do_data_cleanup (1 samples, 0.08%)</title><rect x="59.5896%" y="645" width="0.0789%" height="15" fill="rgb(229,222,32)" fg:x="755" fg:w="1"/><text x="59.8396%" y="655.50"></text></g><g><title>tcache_destroy (1 samples, 0.08%)</title><rect x="59.5896%" y="629" width="0.0789%" height="15" fill="rgb(228,62,29)" fg:x="755" fg:w="1"/><text x="59.8396%" y="639.50"></text></g><g><title>tcache_flush_cache (1 samples, 0.08%)</title><rect x="59.5896%" y="613" width="0.0789%" height="15" fill="rgb(251,103,34)" fg:x="755" fg:w="1"/><text x="59.8396%" y="623.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.08%)</title><rect x="59.5896%" y="597" width="0.0789%" height="15" fill="rgb(233,12,30)" fg:x="755" fg:w="1"/><text x="59.8396%" y="607.50"></text></g><g><title>arena_decay_ticks (1 samples, 0.08%)</title><rect x="59.5896%" y="581" width="0.0789%" height="15" fill="rgb(238,52,0)" fg:x="755" fg:w="1"/><text x="59.8396%" y="591.50"></text></g><g><title>llvm::Pass::getPassName (1 samples, 0.08%)</title><rect x="59.6685%" y="709" width="0.0789%" height="15" fill="rgb(223,98,5)" fg:x="756" fg:w="1"/><text x="59.9185%" y="719.50"></text></g><g><title>llvm::SmallVectorBase&lt;unsigned int&gt;::grow_pod (1 samples, 0.08%)</title><rect x="59.7474%" y="709" width="0.0789%" height="15" fill="rgb(228,75,37)" fg:x="757" fg:w="1"/><text x="59.9974%" y="719.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.08%)</title><rect x="59.7474%" y="693" width="0.0789%" height="15" fill="rgb(205,115,49)" fg:x="757" fg:w="1"/><text x="59.9974%" y="703.50"></text></g><g><title>imalloc (1 samples, 0.08%)</title><rect x="59.7474%" y="677" width="0.0789%" height="15" fill="rgb(250,154,43)" fg:x="757" fg:w="1"/><text x="59.9974%" y="687.50"></text></g><g><title>imalloc_body (1 samples, 0.08%)</title><rect x="59.7474%" y="661" width="0.0789%" height="15" fill="rgb(226,43,29)" fg:x="757" fg:w="1"/><text x="59.9974%" y="671.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.08%)</title><rect x="59.7474%" y="645" width="0.0789%" height="15" fill="rgb(249,228,39)" fg:x="757" fg:w="1"/><text x="59.9974%" y="655.50"></text></g><g><title>iallocztm (1 samples, 0.08%)</title><rect x="59.7474%" y="629" width="0.0789%" height="15" fill="rgb(216,79,43)" fg:x="757" fg:w="1"/><text x="59.9974%" y="639.50"></text></g><g><title>arena_malloc (1 samples, 0.08%)</title><rect x="59.7474%" y="613" width="0.0789%" height="15" fill="rgb(228,95,12)" fg:x="757" fg:w="1"/><text x="59.9974%" y="623.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.08%)</title><rect x="59.7474%" y="597" width="0.0789%" height="15" fill="rgb(249,221,15)" fg:x="757" fg:w="1"/><text x="59.9974%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.08%)</title><rect x="59.7474%" y="581" width="0.0789%" height="15" fill="rgb(233,34,13)" fg:x="757" fg:w="1"/><text x="59.9974%" y="591.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.08%)</title><rect x="59.7474%" y="565" width="0.0789%" height="15" fill="rgb(214,103,39)" fg:x="757" fg:w="1"/><text x="59.9974%" y="575.50"></text></g><g><title>arena_bin_malloc_hard (1 samples, 0.08%)</title><rect x="59.7474%" y="549" width="0.0789%" height="15" fill="rgb(251,126,39)" fg:x="757" fg:w="1"/><text x="59.9974%" y="559.50"></text></g><g><title>arena_bin_nonfull_slab_get (1 samples, 0.08%)</title><rect x="59.7474%" y="533" width="0.0789%" height="15" fill="rgb(214,216,36)" fg:x="757" fg:w="1"/><text x="59.9974%" y="543.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.08%)</title><rect x="59.7474%" y="517" width="0.0789%" height="15" fill="rgb(220,221,8)" fg:x="757" fg:w="1"/><text x="59.9974%" y="527.50"></text></g><g><title>arena_slab_alloc_hard (1 samples, 0.08%)</title><rect x="59.7474%" y="501" width="0.0789%" height="15" fill="rgb(240,216,3)" fg:x="757" fg:w="1"/><text x="59.9974%" y="511.50"></text></g><g><title>_rjem_je_extent_alloc_wrapper (1 samples, 0.08%)</title><rect x="59.7474%" y="485" width="0.0789%" height="15" fill="rgb(232,218,17)" fg:x="757" fg:w="1"/><text x="59.9974%" y="495.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.08%)</title><rect x="59.7474%" y="469" width="0.0789%" height="15" fill="rgb(229,163,45)" fg:x="757" fg:w="1"/><text x="59.9974%" y="479.50"></text></g><g><title>extent_recycle (1 samples, 0.08%)</title><rect x="59.7474%" y="453" width="0.0789%" height="15" fill="rgb(231,110,42)" fg:x="757" fg:w="1"/><text x="59.9974%" y="463.50"></text></g><g><title>extent_recycle_split (1 samples, 0.08%)</title><rect x="59.7474%" y="437" width="0.0789%" height="15" fill="rgb(208,170,48)" fg:x="757" fg:w="1"/><text x="59.9974%" y="447.50"></text></g><g><title>extent_split_interior (1 samples, 0.08%)</title><rect x="59.7474%" y="421" width="0.0789%" height="15" fill="rgb(239,116,25)" fg:x="757" fg:w="1"/><text x="59.9974%" y="431.50"></text></g><g><title>extent_split_impl (1 samples, 0.08%)</title><rect x="59.7474%" y="405" width="0.0789%" height="15" fill="rgb(219,200,50)" fg:x="757" fg:w="1"/><text x="59.9974%" y="415.50"></text></g><g><title>_rjem_je_base_alloc_extent (1 samples, 0.08%)</title><rect x="59.7474%" y="389" width="0.0789%" height="15" fill="rgb(245,200,0)" fg:x="757" fg:w="1"/><text x="59.9974%" y="399.50"></text></g><g><title>extent_esn_set (1 samples, 0.08%)</title><rect x="59.7474%" y="373" width="0.0789%" height="15" fill="rgb(245,119,33)" fg:x="757" fg:w="1"/><text x="59.9974%" y="383.50"></text></g><g><title>llvm::TargetLoweringBase::computeRegisterProperties (1 samples, 0.08%)</title><rect x="59.8264%" y="709" width="0.0789%" height="15" fill="rgb(231,125,12)" fg:x="758" fg:w="1"/><text x="60.0764%" y="719.50"></text></g><g><title>opt_41rae8rev3z (5 samples, 0.39%)</title><rect x="59.5896%" y="725" width="0.3946%" height="15" fill="rgb(216,96,41)" fg:x="755" fg:w="5"/><text x="59.8396%" y="735.50"></text></g><g><title>std::vector&lt;llvm::VecDesc, std::allocator&lt;llvm::VecDesc&gt; &gt;::operator= (1 samples, 0.08%)</title><rect x="59.9053%" y="709" width="0.0789%" height="15" fill="rgb(248,43,45)" fg:x="759" fg:w="1"/><text x="60.1553%" y="719.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="59.9842%" y="693" width="0.0789%" height="15" fill="rgb(217,222,7)" fg:x="760" fg:w="1"/><text x="60.2342%" y="703.50"></text></g><g><title>__GI___libc_sigaction (1 samples, 0.08%)</title><rect x="60.0631%" y="677" width="0.0789%" height="15" fill="rgb(233,28,6)" fg:x="761" fg:w="1"/><text x="60.3131%" y="687.50"></text></g><g><title>__spawni_child (2 samples, 0.16%)</title><rect x="60.0631%" y="693" width="0.1579%" height="15" fill="rgb(231,218,15)" fg:x="761" fg:w="2"/><text x="60.3131%" y="703.50"></text></g><g><title>__execvpe_common (1 samples, 0.08%)</title><rect x="60.1421%" y="677" width="0.0789%" height="15" fill="rgb(226,171,48)" fg:x="762" fg:w="1"/><text x="60.3921%" y="687.50"></text></g><g><title>__GI_execve (1 samples, 0.08%)</title><rect x="60.1421%" y="661" width="0.0789%" height="15" fill="rgb(235,201,9)" fg:x="762" fg:w="1"/><text x="60.3921%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.32%)</title><rect x="59.9842%" y="709" width="0.3157%" height="15" fill="rgb(217,80,15)" fg:x="760" fg:w="4"/><text x="60.2342%" y="719.50"></text></g><g><title>racer::main (1 samples, 0.08%)</title><rect x="60.2210%" y="693" width="0.0789%" height="15" fill="rgb(219,152,8)" fg:x="763" fg:w="1"/><text x="60.4710%" y="703.50"></text></g><g><title>racer::run (1 samples, 0.08%)</title><rect x="60.2210%" y="677" width="0.0789%" height="15" fill="rgb(243,107,38)" fg:x="763" fg:w="1"/><text x="60.4710%" y="687.50"></text></g><g><title>clap::app::App::get_matches_from (1 samples, 0.08%)</title><rect x="60.2210%" y="661" width="0.0789%" height="15" fill="rgb(231,17,5)" fg:x="763" fg:w="1"/><text x="60.4710%" y="671.50"></text></g><g><title>clap::app::parser::Parser::get_matches_with (1 samples, 0.08%)</title><rect x="60.2210%" y="645" width="0.0789%" height="15" fill="rgb(209,25,54)" fg:x="763" fg:w="1"/><text x="60.4710%" y="655.50"></text></g><g><title>clap::app::help::Help::write_parser_help_to_stderr (1 samples, 0.08%)</title><rect x="60.2210%" y="629" width="0.0789%" height="15" fill="rgb(219,0,2)" fg:x="763" fg:w="1"/><text x="60.4710%" y="639.50"></text></g><g><title>clap::app::help::Help::_write_parser_help (1 samples, 0.08%)</title><rect x="60.2210%" y="613" width="0.0789%" height="15" fill="rgb(246,9,5)" fg:x="763" fg:w="1"/><text x="60.4710%" y="623.50"></text></g><g><title>clap::app::help::Help::write_help (1 samples, 0.08%)</title><rect x="60.2210%" y="597" width="0.0789%" height="15" fill="rgb(226,159,4)" fg:x="763" fg:w="1"/><text x="60.4710%" y="607.50"></text></g><g><title>clap::app::help::Help::write_all_args (1 samples, 0.08%)</title><rect x="60.2210%" y="581" width="0.0789%" height="15" fill="rgb(219,175,34)" fg:x="763" fg:w="1"/><text x="60.4710%" y="591.50"></text></g><g><title>clap::app::help::Help::write_subcommands (1 samples, 0.08%)</title><rect x="60.2210%" y="565" width="0.0789%" height="15" fill="rgb(236,10,46)" fg:x="763" fg:w="1"/><text x="60.4710%" y="575.50"></text></g><g><title>__GI___clone (7 samples, 0.55%)</title><rect x="60.2999%" y="709" width="0.5525%" height="15" fill="rgb(240,211,16)" fg:x="764" fg:w="7"/><text x="60.5499%" y="719.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.55%)</title><rect x="60.9313%" y="645" width="0.5525%" height="15" fill="rgb(205,3,43)" fg:x="772" fg:w="7"/><text x="61.1813%" y="655.50"></text></g><g><title>std::panicking::try (7 samples, 0.55%)</title><rect x="60.9313%" y="629" width="0.5525%" height="15" fill="rgb(245,7,22)" fg:x="772" fg:w="7"/><text x="61.1813%" y="639.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.55%)</title><rect x="60.9313%" y="613" width="0.5525%" height="15" fill="rgb(239,132,32)" fg:x="772" fg:w="7"/><text x="61.1813%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7 samples, 0.55%)</title><rect x="60.9313%" y="597" width="0.5525%" height="15" fill="rgb(228,202,34)" fg:x="772" fg:w="7"/><text x="61.1813%" y="607.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (7 samples, 0.55%)</title><rect x="60.9313%" y="581" width="0.5525%" height="15" fill="rgb(254,200,22)" fg:x="772" fg:w="7"/><text x="61.1813%" y="591.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.55%)</title><rect x="60.9313%" y="565" width="0.5525%" height="15" fill="rgb(219,10,39)" fg:x="772" fg:w="7"/><text x="61.1813%" y="575.50"></text></g><g><title>racer::main (7 samples, 0.55%)</title><rect x="60.9313%" y="549" width="0.5525%" height="15" fill="rgb(226,210,39)" fg:x="772" fg:w="7"/><text x="61.1813%" y="559.50"></text></g><g><title>racer::util::get_rust_src_path (7 samples, 0.55%)</title><rect x="60.9313%" y="533" width="0.5525%" height="15" fill="rgb(208,219,16)" fg:x="772" fg:w="7"/><text x="61.1813%" y="543.50"></text></g><g><title>std::process::Command::output (7 samples, 0.55%)</title><rect x="60.9313%" y="517" width="0.5525%" height="15" fill="rgb(216,158,51)" fg:x="772" fg:w="7"/><text x="61.1813%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (7 samples, 0.55%)</title><rect x="60.9313%" y="501" width="0.5525%" height="15" fill="rgb(233,14,44)" fg:x="772" fg:w="7"/><text x="61.1813%" y="511.50"></text></g><g><title>std::process::Command::output::{{closure}} (7 samples, 0.55%)</title><rect x="60.9313%" y="485" width="0.5525%" height="15" fill="rgb(237,97,39)" fg:x="772" fg:w="7"/><text x="61.1813%" y="495.50"></text></g><g><title>std::process::Child::wait_with_output (7 samples, 0.55%)</title><rect x="60.9313%" y="469" width="0.5525%" height="15" fill="rgb(218,198,43)" fg:x="772" fg:w="7"/><text x="61.1813%" y="479.50"></text></g><g><title>std::sys::unix::pipe::read2 (7 samples, 0.55%)</title><rect x="60.9313%" y="453" width="0.5525%" height="15" fill="rgb(231,104,20)" fg:x="772" fg:w="7"/><text x="61.1813%" y="463.50"></text></g><g><title>std::sys::unix::cvt_r (7 samples, 0.55%)</title><rect x="60.9313%" y="437" width="0.5525%" height="15" fill="rgb(254,36,13)" fg:x="772" fg:w="7"/><text x="61.1813%" y="447.50"></text></g><g><title>std::sys::unix::pipe::read2::{{closure}} (7 samples, 0.55%)</title><rect x="60.9313%" y="421" width="0.5525%" height="15" fill="rgb(248,14,50)" fg:x="772" fg:w="7"/><text x="61.1813%" y="431.50"></text></g><g><title>__GI___poll (7 samples, 0.55%)</title><rect x="60.9313%" y="405" width="0.5525%" height="15" fill="rgb(217,107,29)" fg:x="772" fg:w="7"/><text x="61.1813%" y="415.50"></text></g><g><title>__libc_start_main (8 samples, 0.63%)</title><rect x="60.9313%" y="693" width="0.6314%" height="15" fill="rgb(251,169,33)" fg:x="772" fg:w="8"/><text x="61.1813%" y="703.50"></text></g><g><title>main (8 samples, 0.63%)</title><rect x="60.9313%" y="677" width="0.6314%" height="15" fill="rgb(217,108,32)" fg:x="772" fg:w="8"/><text x="61.1813%" y="687.50"></text></g><g><title>std::rt::lang_start_internal (8 samples, 0.63%)</title><rect x="60.9313%" y="661" width="0.6314%" height="15" fill="rgb(219,66,42)" fg:x="772" fg:w="8"/><text x="61.1813%" y="671.50"></text></g><g><title>std::sys_common::rt::init (1 samples, 0.08%)</title><rect x="61.4838%" y="645" width="0.0789%" height="15" fill="rgb(206,180,7)" fg:x="779" fg:w="1"/><text x="61.7338%" y="655.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.08%)</title><rect x="61.4838%" y="629" width="0.0789%" height="15" fill="rgb(208,226,31)" fg:x="779" fg:w="1"/><text x="61.7338%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.08%)</title><rect x="61.4838%" y="613" width="0.0789%" height="15" fill="rgb(218,26,49)" fg:x="779" fg:w="1"/><text x="61.7338%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.4838%" y="597" width="0.0789%" height="15" fill="rgb(233,197,48)" fg:x="779" fg:w="1"/><text x="61.7338%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.4838%" y="581" width="0.0789%" height="15" fill="rgb(252,181,51)" fg:x="779" fg:w="1"/><text x="61.7338%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.4838%" y="565" width="0.0789%" height="15" fill="rgb(253,90,19)" fg:x="779" fg:w="1"/><text x="61.7338%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.4838%" y="549" width="0.0789%" height="15" fill="rgb(215,171,30)" fg:x="779" fg:w="1"/><text x="61.7338%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4838%" y="533" width="0.0789%" height="15" fill="rgb(214,222,9)" fg:x="779" fg:w="1"/><text x="61.7338%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4838%" y="517" width="0.0789%" height="15" fill="rgb(223,3,22)" fg:x="779" fg:w="1"/><text x="61.7338%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.4838%" y="501" width="0.0789%" height="15" fill="rgb(225,196,46)" fg:x="779" fg:w="1"/><text x="61.7338%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.4838%" y="485" width="0.0789%" height="15" fill="rgb(209,110,37)" fg:x="779" fg:w="1"/><text x="61.7338%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.4838%" y="469" width="0.0789%" height="15" fill="rgb(249,89,12)" fg:x="779" fg:w="1"/><text x="61.7338%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.4838%" y="453" width="0.0789%" height="15" fill="rgb(226,27,33)" fg:x="779" fg:w="1"/><text x="61.7338%" y="463.50"></text></g><g><title>__rust_alloc (1 samples, 0.08%)</title><rect x="61.4838%" y="437" width="0.0789%" height="15" fill="rgb(213,82,22)" fg:x="779" fg:w="1"/><text x="61.7338%" y="447.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.08%)</title><rect x="61.5627%" y="645" width="0.0789%" height="15" fill="rgb(248,140,0)" fg:x="780" fg:w="1"/><text x="61.8127%" y="655.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="61.5627%" y="629" width="0.0789%" height="15" fill="rgb(228,106,3)" fg:x="780" fg:w="1"/><text x="61.8127%" y="639.50"></text></g><g><title>openaux (1 samples, 0.08%)</title><rect x="61.5627%" y="613" width="0.0789%" height="15" fill="rgb(209,23,37)" fg:x="780" fg:w="1"/><text x="61.8127%" y="623.50"></text></g><g><title>_dl_map_object (1 samples, 0.08%)</title><rect x="61.5627%" y="597" width="0.0789%" height="15" fill="rgb(241,93,50)" fg:x="780" fg:w="1"/><text x="61.8127%" y="607.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.08%)</title><rect x="61.5627%" y="581" width="0.0789%" height="15" fill="rgb(253,46,43)" fg:x="780" fg:w="1"/><text x="61.8127%" y="591.50"></text></g><g><title>racer (22 samples, 1.74%)</title><rect x="59.9842%" y="725" width="1.7364%" height="15" fill="rgb(226,206,43)" fg:x="760" fg:w="22"/><text x="60.2342%" y="735.50"></text></g><g><title>_start (11 samples, 0.87%)</title><rect x="60.8524%" y="709" width="0.8682%" height="15" fill="rgb(217,54,7)" fg:x="771" fg:w="11"/><text x="61.1024%" y="719.50"></text></g><g><title>_dl_start (2 samples, 0.16%)</title><rect x="61.5627%" y="693" width="0.1579%" height="15" fill="rgb(223,5,52)" fg:x="780" fg:w="2"/><text x="61.8127%" y="703.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.16%)</title><rect x="61.5627%" y="677" width="0.1579%" height="15" fill="rgb(206,52,46)" fg:x="780" fg:w="2"/><text x="61.8127%" y="687.50"></text></g><g><title>dl_main (2 samples, 0.16%)</title><rect x="61.5627%" y="661" width="0.1579%" height="15" fill="rgb(253,136,11)" fg:x="780" fg:w="2"/><text x="61.8127%" y="671.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.08%)</title><rect x="61.6417%" y="645" width="0.0789%" height="15" fill="rgb(208,106,33)" fg:x="781" fg:w="1"/><text x="61.8917%" y="655.50"></text></g><g><title>LLVMInitializeNVPTXTargetMC (1 samples, 0.08%)</title><rect x="61.7206%" y="709" width="0.0789%" height="15" fill="rgb(206,54,4)" fg:x="782" fg:w="1"/><text x="61.9706%" y="719.50"></text></g><g><title>[[heap]] (11 samples, 0.87%)</title><rect x="61.7995%" y="709" width="0.8682%" height="15" fill="rgb(213,3,15)" fg:x="783" fg:w="11"/><text x="62.0495%" y="719.50"></text></g><g><title>[rustup] (11 samples, 0.87%)</title><rect x="61.7995%" y="693" width="0.8682%" height="15" fill="rgb(252,211,39)" fg:x="783" fg:w="11"/><text x="62.0495%" y="703.50"></text></g><g><title>[[stack]] (6 samples, 0.47%)</title><rect x="62.6677%" y="709" width="0.4736%" height="15" fill="rgb(223,6,36)" fg:x="794" fg:w="6"/><text x="62.9177%" y="719.50"></text></g><g><title>[rustup] (6 samples, 0.47%)</title><rect x="62.6677%" y="693" width="0.4736%" height="15" fill="rgb(252,169,45)" fg:x="794" fg:w="6"/><text x="62.9177%" y="703.50"></text></g><g><title>[rustup] (3 samples, 0.24%)</title><rect x="63.1413%" y="693" width="0.2368%" height="15" fill="rgb(212,48,26)" fg:x="800" fg:w="3"/><text x="63.3913%" y="703.50"></text></g><g><title>_rjem_je_arena_ralloc (1 samples, 0.08%)</title><rect x="63.3781%" y="693" width="0.0789%" height="15" fill="rgb(251,102,48)" fg:x="803" fg:w="1"/><text x="63.6281%" y="703.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="63.4570%" y="693" width="0.0789%" height="15" fill="rgb(243,208,16)" fg:x="804" fg:w="1"/><text x="63.7070%" y="703.50"></text></g><g><title>extent_recycle (1 samples, 0.08%)</title><rect x="63.5359%" y="693" width="0.0789%" height="15" fill="rgb(219,96,24)" fg:x="805" fg:w="1"/><text x="63.7859%" y="703.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.08%)</title><rect x="63.5359%" y="677" width="0.0789%" height="15" fill="rgb(219,33,29)" fg:x="805" fg:w="1"/><text x="63.7859%" y="687.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.08%)</title><rect x="63.5359%" y="661" width="0.0789%" height="15" fill="rgb(223,176,5)" fg:x="805" fg:w="1"/><text x="63.7859%" y="671.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.08%)</title><rect x="63.5359%" y="645" width="0.0789%" height="15" fill="rgb(228,140,14)" fg:x="805" fg:w="1"/><text x="63.7859%" y="655.50"></text></g><g><title>[anon] (7 samples, 0.55%)</title><rect x="63.1413%" y="709" width="0.5525%" height="15" fill="rgb(217,179,31)" fg:x="800" fg:w="7"/><text x="63.3913%" y="719.50"></text></g><g><title>rustc_hir::stable_hash_impls::&lt;impl rustc_data_structures::stable_hasher::HashStable&lt;HirCtx&gt; for rustc_hir::hir::Mod&gt;::hash_stable (1 samples, 0.08%)</title><rect x="63.6148%" y="693" width="0.0789%" height="15" fill="rgb(230,9,30)" fg:x="806" fg:w="1"/><text x="63.8648%" y="703.50"></text></g><g><title>[ld-2.33.so] (1 samples, 0.08%)</title><rect x="63.6938%" y="709" width="0.0789%" height="15" fill="rgb(230,136,20)" fg:x="807" fg:w="1"/><text x="63.9438%" y="719.50"></text></g><g><title>call_init (1 samples, 0.08%)</title><rect x="63.6938%" y="693" width="0.0789%" height="15" fill="rgb(215,210,22)" fg:x="807" fg:w="1"/><text x="63.9438%" y="703.50"></text></g><g><title>[libLLVM-13-rust-1.57.0-stable.so] (1 samples, 0.08%)</title><rect x="63.7727%" y="709" width="0.0789%" height="15" fill="rgb(218,43,5)" fg:x="808" fg:w="1"/><text x="64.0227%" y="719.50"></text></g><g><title>check_match (1 samples, 0.08%)</title><rect x="63.7727%" y="693" width="0.0789%" height="15" fill="rgb(216,11,5)" fg:x="808" fg:w="1"/><text x="64.0227%" y="703.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.08%)</title><rect x="63.8516%" y="709" width="0.0789%" height="15" fill="rgb(209,82,29)" fg:x="809" fg:w="1"/><text x="64.1016%" y="719.50"></text></g><g><title>__GI___libc_free (1 samples, 0.08%)</title><rect x="63.8516%" y="693" width="0.0789%" height="15" fill="rgb(244,115,12)" fg:x="809" fg:w="1"/><text x="64.1016%" y="703.50"></text></g><g><title>[librustc_driver-15fe7307aff1f259.so] (1 samples, 0.08%)</title><rect x="63.9305%" y="709" width="0.0789%" height="15" fill="rgb(222,82,18)" fg:x="810" fg:w="1"/><text x="64.1805%" y="719.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.08%)</title><rect x="63.9305%" y="693" width="0.0789%" height="15" fill="rgb(249,227,8)" fg:x="810" fg:w="1"/><text x="64.1805%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.08%)</title><rect x="64.0884%" y="565" width="0.0789%" height="15" fill="rgb(253,141,45)" fg:x="812" fg:w="1"/><text x="64.3384%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.08%)</title><rect x="64.0884%" y="549" width="0.0789%" height="15" fill="rgb(234,184,4)" fg:x="812" fg:w="1"/><text x="64.3384%" y="559.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.08%)</title><rect x="64.1673%" y="565" width="0.0789%" height="15" fill="rgb(218,194,23)" fg:x="813" fg:w="1"/><text x="64.4173%" y="575.50"></text></g><g><title>_int_realloc (1 samples, 0.08%)</title><rect x="64.1673%" y="549" width="0.0789%" height="15" fill="rgb(235,66,41)" fg:x="813" fg:w="1"/><text x="64.4173%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="64.1673%" y="533" width="0.0789%" height="15" fill="rgb(245,217,1)" fg:x="813" fg:w="1"/><text x="64.4173%" y="543.50"></text></g><g><title>malloc_consolidate (1 samples, 0.08%)</title><rect x="64.1673%" y="517" width="0.0789%" height="15" fill="rgb(229,91,1)" fg:x="813" fg:w="1"/><text x="64.4173%" y="527.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.08%)</title><rect x="64.1673%" y="501" width="0.0789%" height="15" fill="rgb(207,101,30)" fg:x="813" fg:w="1"/><text x="64.4173%" y="511.50"></text></g><g><title>__GI___strlen_sse2 (1 samples, 0.08%)</title><rect x="64.2463%" y="565" width="0.0789%" height="15" fill="rgb(223,82,49)" fg:x="814" fg:w="1"/><text x="64.4963%" y="575.50"></text></g><g><title>__libc_read (2 samples, 0.16%)</title><rect x="64.3252%" y="565" width="0.1579%" height="15" fill="rgb(218,167,17)" fg:x="815" fg:w="2"/><text x="64.5752%" y="575.50"></text></g><g><title>[rustup] (6 samples, 0.47%)</title><rect x="64.0884%" y="581" width="0.4736%" height="15" fill="rgb(208,103,14)" fg:x="812" fg:w="6"/><text x="64.3384%" y="591.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="64.4830%" y="565" width="0.0789%" height="15" fill="rgb(238,20,8)" fg:x="817" fg:w="1"/><text x="64.7330%" y="575.50"></text></g><g><title>[rustup] (8 samples, 0.63%)</title><rect x="64.0095%" y="613" width="0.6314%" height="15" fill="rgb(218,80,54)" fg:x="811" fg:w="8"/><text x="64.2595%" y="623.50"></text></g><g><title>[rustup] (7 samples, 0.55%)</title><rect x="64.0884%" y="597" width="0.5525%" height="15" fill="rgb(240,144,17)" fg:x="812" fg:w="7"/><text x="64.3384%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 0.08%)</title><rect x="64.5620%" y="581" width="0.0789%" height="15" fill="rgb(245,27,50)" fg:x="818" fg:w="1"/><text x="64.8120%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.08%)</title><rect x="64.5620%" y="565" width="0.0789%" height="15" fill="rgb(251,51,7)" fg:x="818" fg:w="1"/><text x="64.8120%" y="575.50"></text></g><g><title>malloc_consolidate (1 samples, 0.08%)</title><rect x="64.5620%" y="549" width="0.0789%" height="15" fill="rgb(245,217,29)" fg:x="818" fg:w="1"/><text x="64.8120%" y="559.50"></text></g><g><title>[rustup] (9 samples, 0.71%)</title><rect x="64.0095%" y="661" width="0.7103%" height="15" fill="rgb(221,176,29)" fg:x="811" fg:w="9"/><text x="64.2595%" y="671.50"></text></g><g><title>[rustup] (9 samples, 0.71%)</title><rect x="64.0095%" y="645" width="0.7103%" height="15" fill="rgb(212,180,24)" fg:x="811" fg:w="9"/><text x="64.2595%" y="655.50"></text></g><g><title>[rustup] (9 samples, 0.71%)</title><rect x="64.0095%" y="629" width="0.7103%" height="15" fill="rgb(254,24,2)" fg:x="811" fg:w="9"/><text x="64.2595%" y="639.50"></text></g><g><title>__GI___libc_free (1 samples, 0.08%)</title><rect x="64.6409%" y="613" width="0.0789%" height="15" fill="rgb(230,100,2)" fg:x="819" fg:w="1"/><text x="64.8909%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.08%)</title><rect x="64.6409%" y="597" width="0.0789%" height="15" fill="rgb(219,142,25)" fg:x="819" fg:w="1"/><text x="64.8909%" y="607.50"></text></g><g><title>__libc_start_main (10 samples, 0.79%)</title><rect x="64.0095%" y="693" width="0.7893%" height="15" fill="rgb(240,73,43)" fg:x="811" fg:w="10"/><text x="64.2595%" y="703.50"></text></g><g><title>[rustup] (10 samples, 0.79%)</title><rect x="64.0095%" y="677" width="0.7893%" height="15" fill="rgb(214,114,15)" fg:x="811" fg:w="10"/><text x="64.2595%" y="687.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.08%)</title><rect x="64.7198%" y="661" width="0.0789%" height="15" fill="rgb(207,130,4)" fg:x="820" fg:w="1"/><text x="64.9698%" y="671.50"></text></g><g><title>__GI___isoc99_sscanf (1 samples, 0.08%)</title><rect x="64.7198%" y="645" width="0.0789%" height="15" fill="rgb(221,25,40)" fg:x="820" fg:w="1"/><text x="64.9698%" y="655.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.08%)</title><rect x="64.7198%" y="629" width="0.0789%" height="15" fill="rgb(241,184,7)" fg:x="820" fg:w="1"/><text x="64.9698%" y="639.50"></text></g><g><title>[rustup] (11 samples, 0.87%)</title><rect x="64.0095%" y="709" width="0.8682%" height="15" fill="rgb(235,159,4)" fg:x="811" fg:w="11"/><text x="64.2595%" y="719.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.08%)</title><rect x="64.7987%" y="693" width="0.0789%" height="15" fill="rgb(214,87,48)" fg:x="821" fg:w="1"/><text x="65.0487%" y="703.50"></text></g><g><title>[rustup] (14 samples, 1.10%)</title><rect x="77.1902%" y="485" width="1.1050%" height="15" fill="rgb(246,198,24)" fg:x="978" fg:w="14"/><text x="77.4402%" y="495.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.16%)</title><rect x="78.1373%" y="469" width="0.1579%" height="15" fill="rgb(209,66,40)" fg:x="990" fg:w="2"/><text x="78.3873%" y="479.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="78.1373%" y="453" width="0.1579%" height="15" fill="rgb(233,147,39)" fg:x="990" fg:w="2"/><text x="78.3873%" y="463.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.08%)</title><rect x="78.2952%" y="485" width="0.0789%" height="15" fill="rgb(231,145,52)" fg:x="992" fg:w="1"/><text x="78.5452%" y="495.50"></text></g><g><title>_int_realloc (1 samples, 0.08%)</title><rect x="78.2952%" y="469" width="0.0789%" height="15" fill="rgb(206,20,26)" fg:x="992" fg:w="1"/><text x="78.5452%" y="479.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="78.2952%" y="453" width="0.0789%" height="15" fill="rgb(238,220,4)" fg:x="992" fg:w="1"/><text x="78.5452%" y="463.50"></text></g><g><title>__memcmp_sse4_1 (2 samples, 0.16%)</title><rect x="78.3741%" y="485" width="0.1579%" height="15" fill="rgb(252,195,42)" fg:x="993" fg:w="2"/><text x="78.6241%" y="495.50"></text></g><g><title>[rustup] (35 samples, 2.76%)</title><rect x="75.8485%" y="501" width="2.7624%" height="15" fill="rgb(209,10,6)" fg:x="961" fg:w="35"/><text x="76.0985%" y="511.50">[r..</text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="78.5320%" y="485" width="0.0789%" height="15" fill="rgb(229,3,52)" fg:x="995" fg:w="1"/><text x="78.7820%" y="495.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.55%)</title><rect x="78.6109%" y="501" width="0.5525%" height="15" fill="rgb(253,49,37)" fg:x="996" fg:w="7"/><text x="78.8609%" y="511.50"></text></g><g><title>_int_malloc (6 samples, 0.47%)</title><rect x="78.6898%" y="485" width="0.4736%" height="15" fill="rgb(240,103,49)" fg:x="997" fg:w="6"/><text x="78.9398%" y="495.50"></text></g><g><title>[rustup] (48 samples, 3.79%)</title><rect x="75.4538%" y="517" width="3.7885%" height="15" fill="rgb(250,182,30)" fg:x="956" fg:w="48"/><text x="75.7038%" y="527.50">[rus..</text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="79.1634%" y="501" width="0.0789%" height="15" fill="rgb(248,8,30)" fg:x="1003" fg:w="1"/><text x="79.4134%" y="511.50"></text></g><g><title>__GI___libc_free (1 samples, 0.08%)</title><rect x="79.2423%" y="517" width="0.0789%" height="15" fill="rgb(237,120,30)" fg:x="1004" fg:w="1"/><text x="79.4923%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="79.3212%" y="517" width="0.0789%" height="15" fill="rgb(221,146,34)" fg:x="1005" fg:w="1"/><text x="79.5712%" y="527.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="79.3212%" y="501" width="0.0789%" height="15" fill="rgb(242,55,13)" fg:x="1005" fg:w="1"/><text x="79.5712%" y="511.50"></text></g><g><title>sysmalloc (1 samples, 0.08%)</title><rect x="79.3212%" y="485" width="0.0789%" height="15" fill="rgb(242,112,31)" fg:x="1005" fg:w="1"/><text x="79.5712%" y="495.50"></text></g><g><title>__GI___default_morecore (1 samples, 0.08%)</title><rect x="79.3212%" y="469" width="0.0789%" height="15" fill="rgb(249,192,27)" fg:x="1005" fg:w="1"/><text x="79.5712%" y="479.50"></text></g><g><title>__GI___sbrk (1 samples, 0.08%)</title><rect x="79.3212%" y="453" width="0.0789%" height="15" fill="rgb(208,204,44)" fg:x="1005" fg:w="1"/><text x="79.5712%" y="463.50"></text></g><g><title>__brk (1 samples, 0.08%)</title><rect x="79.3212%" y="437" width="0.0789%" height="15" fill="rgb(208,93,54)" fg:x="1005" fg:w="1"/><text x="79.5712%" y="447.50"></text></g><g><title>[rustup] (62 samples, 4.89%)</title><rect x="74.7435%" y="533" width="4.8934%" height="15" fill="rgb(242,1,31)" fg:x="947" fg:w="62"/><text x="74.9935%" y="543.50">[rustu..</text></g><g><title>__memcmp_sse4_1 (3 samples, 0.24%)</title><rect x="79.4002%" y="517" width="0.2368%" height="15" fill="rgb(241,83,25)" fg:x="1006" fg:w="3"/><text x="79.6502%" y="527.50"></text></g><g><title>__GI___libc_free (2 samples, 0.16%)</title><rect x="79.6369%" y="533" width="0.1579%" height="15" fill="rgb(205,169,50)" fg:x="1009" fg:w="2"/><text x="79.8869%" y="543.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="79.6369%" y="517" width="0.1579%" height="15" fill="rgb(239,186,37)" fg:x="1009" fg:w="2"/><text x="79.8869%" y="527.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.24%)</title><rect x="79.7948%" y="533" width="0.2368%" height="15" fill="rgb(205,221,10)" fg:x="1011" fg:w="3"/><text x="80.0448%" y="543.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="79.8737%" y="517" width="0.1579%" height="15" fill="rgb(218,196,15)" fg:x="1012" fg:w="2"/><text x="80.1237%" y="527.50"></text></g><g><title>[rustup] (100 samples, 7.89%)</title><rect x="72.2178%" y="549" width="7.8927%" height="15" fill="rgb(218,196,35)" fg:x="915" fg:w="100"/><text x="72.4678%" y="559.50">[rustup]</text></g><g><title>__GI___libc_realloc (1 samples, 0.08%)</title><rect x="80.0316%" y="533" width="0.0789%" height="15" fill="rgb(233,63,24)" fg:x="1014" fg:w="1"/><text x="80.2816%" y="543.50"></text></g><g><title>_int_realloc (1 samples, 0.08%)</title><rect x="80.0316%" y="517" width="0.0789%" height="15" fill="rgb(225,8,4)" fg:x="1014" fg:w="1"/><text x="80.2816%" y="527.50"></text></g><g><title>_int_realloc (6 samples, 0.47%)</title><rect x="80.1105%" y="533" width="0.4736%" height="15" fill="rgb(234,105,35)" fg:x="1015" fg:w="6"/><text x="80.3605%" y="543.50"></text></g><g><title>_int_malloc (6 samples, 0.47%)</title><rect x="80.1105%" y="517" width="0.4736%" height="15" fill="rgb(236,21,32)" fg:x="1015" fg:w="6"/><text x="80.3605%" y="527.50"></text></g><g><title>malloc_consolidate (1 samples, 0.08%)</title><rect x="80.5051%" y="501" width="0.0789%" height="15" fill="rgb(228,109,6)" fg:x="1020" fg:w="1"/><text x="80.7551%" y="511.50"></text></g><g><title>[rustup] (130 samples, 10.26%)</title><rect x="70.4025%" y="565" width="10.2605%" height="15" fill="rgb(229,215,31)" fg:x="892" fg:w="130"/><text x="70.6525%" y="575.50">[rustup]</text></g><g><title>__GI___libc_realloc (7 samples, 0.55%)</title><rect x="80.1105%" y="549" width="0.5525%" height="15" fill="rgb(221,52,54)" fg:x="1015" fg:w="7"/><text x="80.3605%" y="559.50"></text></g><g><title>mremap_chunk (1 samples, 0.08%)</title><rect x="80.5841%" y="533" width="0.0789%" height="15" fill="rgb(252,129,43)" fg:x="1021" fg:w="1"/><text x="80.8341%" y="543.50"></text></g><g><title>__GI___mremap (1 samples, 0.08%)</title><rect x="80.5841%" y="517" width="0.0789%" height="15" fill="rgb(248,183,27)" fg:x="1021" fg:w="1"/><text x="80.8341%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.08%)</title><rect x="80.6630%" y="565" width="0.0789%" height="15" fill="rgb(250,0,22)" fg:x="1022" fg:w="1"/><text x="80.9130%" y="575.50"></text></g><g><title>_int_realloc (1 samples, 0.08%)</title><rect x="80.6630%" y="549" width="0.0789%" height="15" fill="rgb(213,166,10)" fg:x="1022" fg:w="1"/><text x="80.9130%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="80.6630%" y="533" width="0.0789%" height="15" fill="rgb(207,163,36)" fg:x="1022" fg:w="1"/><text x="80.9130%" y="543.50"></text></g><g><title>malloc_consolidate (1 samples, 0.08%)</title><rect x="80.6630%" y="517" width="0.0789%" height="15" fill="rgb(208,122,22)" fg:x="1022" fg:w="1"/><text x="80.9130%" y="527.50"></text></g><g><title>[rustup] (161 samples, 12.71%)</title><rect x="68.1926%" y="581" width="12.7072%" height="15" fill="rgb(207,104,49)" fg:x="864" fg:w="161"/><text x="68.4426%" y="591.50">[rustup]</text></g><g><title>__memcmp_sse4_1 (2 samples, 0.16%)</title><rect x="80.7419%" y="565" width="0.1579%" height="15" fill="rgb(248,211,50)" fg:x="1023" fg:w="2"/><text x="80.9919%" y="575.50"></text></g><g><title>malloc_consolidate (1 samples, 0.08%)</title><rect x="80.9787%" y="549" width="0.0789%" height="15" fill="rgb(217,13,45)" fg:x="1026" fg:w="1"/><text x="81.2287%" y="559.50"></text></g><g><title>__GI___libc_free (3 samples, 0.24%)</title><rect x="80.8998%" y="581" width="0.2368%" height="15" fill="rgb(211,216,49)" fg:x="1025" fg:w="3"/><text x="81.1498%" y="591.50"></text></g><g><title>_int_free (3 samples, 0.24%)</title><rect x="80.8998%" y="565" width="0.2368%" height="15" fill="rgb(221,58,53)" fg:x="1025" fg:w="3"/><text x="81.1498%" y="575.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.08%)</title><rect x="81.0576%" y="549" width="0.0789%" height="15" fill="rgb(220,112,41)" fg:x="1027" fg:w="1"/><text x="81.3076%" y="559.50"></text></g><g><title>[rustup] (189 samples, 14.92%)</title><rect x="66.4562%" y="597" width="14.9171%" height="15" fill="rgb(236,38,28)" fg:x="842" fg:w="189"/><text x="66.7062%" y="607.50">[rustup]</text></g><g><title>__GI___libc_malloc (3 samples, 0.24%)</title><rect x="81.1365%" y="581" width="0.2368%" height="15" fill="rgb(227,195,22)" fg:x="1028" fg:w="3"/><text x="81.3865%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.16%)</title><rect x="81.2155%" y="565" width="0.1579%" height="15" fill="rgb(214,55,33)" fg:x="1029" fg:w="2"/><text x="81.4655%" y="575.50"></text></g><g><title>[rustup] (211 samples, 16.65%)</title><rect x="64.8777%" y="693" width="16.6535%" height="15" fill="rgb(248,80,13)" fg:x="822" fg:w="211"/><text x="65.1277%" y="703.50">[rustup]</text></g><g><title>[rustup] (192 samples, 15.15%)</title><rect x="66.3773%" y="677" width="15.1539%" height="15" fill="rgb(238,52,6)" fg:x="841" fg:w="192"/><text x="66.6273%" y="687.50">[rustup]</text></g><g><title>[rustup] (192 samples, 15.15%)</title><rect x="66.3773%" y="661" width="15.1539%" height="15" fill="rgb(224,198,47)" fg:x="841" fg:w="192"/><text x="66.6273%" y="671.50">[rustup]</text></g><g><title>[rustup] (191 samples, 15.07%)</title><rect x="66.4562%" y="645" width="15.0750%" height="15" fill="rgb(233,171,20)" fg:x="842" fg:w="191"/><text x="66.7062%" y="655.50">[rustup]</text></g><g><title>[rustup] (191 samples, 15.07%)</title><rect x="66.4562%" y="629" width="15.0750%" height="15" fill="rgb(241,30,25)" fg:x="842" fg:w="191"/><text x="66.7062%" y="639.50">[rustup]</text></g><g><title>[rustup] (191 samples, 15.07%)</title><rect x="66.4562%" y="613" width="15.0750%" height="15" fill="rgb(207,171,38)" fg:x="842" fg:w="191"/><text x="66.7062%" y="623.50">[rustup]</text></g><g><title>__GI___libc_free (2 samples, 0.16%)</title><rect x="81.3733%" y="597" width="0.1579%" height="15" fill="rgb(234,70,1)" fg:x="1031" fg:w="2"/><text x="81.6233%" y="607.50"></text></g><g><title>_int_free (2 samples, 0.16%)</title><rect x="81.3733%" y="581" width="0.1579%" height="15" fill="rgb(232,178,18)" fg:x="1031" fg:w="2"/><text x="81.6233%" y="591.50"></text></g><g><title>_IO_new_fclose (1 samples, 0.08%)</title><rect x="81.5312%" y="693" width="0.0789%" height="15" fill="rgb(241,78,40)" fg:x="1033" fg:w="1"/><text x="81.7812%" y="703.50"></text></g><g><title>__GI___clone (1 samples, 0.08%)</title><rect x="81.6101%" y="693" width="0.0789%" height="15" fill="rgb(222,35,25)" fg:x="1034" fg:w="1"/><text x="81.8601%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.08%)</title><rect x="81.6890%" y="693" width="0.0789%" height="15" fill="rgb(207,92,16)" fg:x="1035" fg:w="1"/><text x="81.9390%" y="703.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (2 samples, 0.16%)</title><rect x="81.7680%" y="693" width="0.1579%" height="15" fill="rgb(216,59,51)" fg:x="1036" fg:w="2"/><text x="82.0180%" y="703.50"></text></g><g><title>__spawni_child (1 samples, 0.08%)</title><rect x="81.9258%" y="693" width="0.0789%" height="15" fill="rgb(213,80,28)" fg:x="1038" fg:w="1"/><text x="82.1758%" y="703.50"></text></g><g><title>__GI___libc_sigaction (1 samples, 0.08%)</title><rect x="81.9258%" y="677" width="0.0789%" height="15" fill="rgb(220,93,7)" fg:x="1038" fg:w="1"/><text x="82.1758%" y="687.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="82.0047%" y="693" width="0.0789%" height="15" fill="rgb(225,24,44)" fg:x="1039" fg:w="1"/><text x="82.2547%" y="703.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.08%)</title><rect x="82.0837%" y="693" width="0.0789%" height="15" fill="rgb(243,74,40)" fg:x="1040" fg:w="1"/><text x="82.3337%" y="703.50"></text></g><g><title>regex::literal::imp::LiteralSearcher::suffixes (1 samples, 0.08%)</title><rect x="82.0837%" y="677" width="0.0789%" height="15" fill="rgb(228,39,7)" fg:x="1040" fg:w="1"/><text x="82.3337%" y="687.50"></text></g><g><title>regex::literal::imp::Matcher::new (1 samples, 0.08%)</title><rect x="82.0837%" y="661" width="0.0789%" height="15" fill="rgb(227,79,8)" fg:x="1040" fg:w="1"/><text x="82.3337%" y="671.50"></text></g><g><title>aho_corasick::packed::api::Builder::build (1 samples, 0.08%)</title><rect x="82.0837%" y="645" width="0.0789%" height="15" fill="rgb(236,58,11)" fg:x="1040" fg:w="1"/><text x="82.3337%" y="655.50"></text></g><g><title>aho_corasick::packed::teddy::compile::Builder::build (1 samples, 0.08%)</title><rect x="82.0837%" y="629" width="0.0789%" height="15" fill="rgb(249,63,35)" fg:x="1040" fg:w="1"/><text x="82.3337%" y="639.50"></text></g><g><title>rustc_codegen_ssa::base::codegen_crate (1 samples, 0.08%)</title><rect x="82.1626%" y="693" width="0.0789%" height="15" fill="rgb(252,114,16)" fg:x="1041" fg:w="1"/><text x="82.4126%" y="703.50"></text></g><g><title>rustc_codegen_ssa::back::write::start_async_codegen (1 samples, 0.08%)</title><rect x="82.1626%" y="677" width="0.0789%" height="15" fill="rgb(254,151,24)" fg:x="1041" fg:w="1"/><text x="82.4126%" y="687.50"></text></g><g><title>rustc_codegen_ssa::back::write::start_executing_work (1 samples, 0.08%)</title><rect x="82.1626%" y="661" width="0.0789%" height="15" fill="rgb(253,54,39)" fg:x="1041" fg:w="1"/><text x="82.4126%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.1626%" y="645" width="0.0789%" height="15" fill="rgb(243,25,45)" fg:x="1041" fg:w="1"/><text x="82.4126%" y="655.50"></text></g><g><title>rustc_interface::util::setup_callbacks_and_run_in_thread_pool_with_globals (1 samples, 0.08%)</title><rect x="82.2415%" y="677" width="0.0789%" height="15" fill="rgb(234,134,9)" fg:x="1042" fg:w="1"/><text x="82.4915%" y="687.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (1 samples, 0.08%)</title><rect x="82.2415%" y="661" width="0.0789%" height="15" fill="rgb(227,166,31)" fg:x="1042" fg:w="1"/><text x="82.4915%" y="671.50"></text></g><g><title>std::sys::unix::thread::Thread::join (1 samples, 0.08%)</title><rect x="82.2415%" y="645" width="0.0789%" height="15" fill="rgb(245,143,41)" fg:x="1042" fg:w="1"/><text x="82.4915%" y="655.50"></text></g><g><title>__pthread_clockjoin_ex (1 samples, 0.08%)</title><rect x="82.2415%" y="629" width="0.0789%" height="15" fill="rgb(238,181,32)" fg:x="1042" fg:w="1"/><text x="82.4915%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common64 (1 samples, 0.08%)</title><rect x="82.2415%" y="613" width="0.0789%" height="15" fill="rgb(224,113,18)" fg:x="1042" fg:w="1"/><text x="82.4915%" y="623.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.4783%" y="613" width="0.0789%" height="15" fill="rgb(240,229,28)" fg:x="1045" fg:w="1"/><text x="82.7283%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.08%)</title><rect x="82.4783%" y="597" width="0.0789%" height="15" fill="rgb(250,185,3)" fg:x="1045" fg:w="1"/><text x="82.7283%" y="607.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="82.4783%" y="581" width="0.0789%" height="15" fill="rgb(212,59,25)" fg:x="1045" fg:w="1"/><text x="82.7283%" y="591.50"></text></g><g><title>rustc_driver::RunCompiler::run (5 samples, 0.39%)</title><rect x="82.2415%" y="693" width="0.3946%" height="15" fill="rgb(221,87,20)" fg:x="1042" fg:w="5"/><text x="82.4915%" y="703.50"></text></g><g><title>rustc_session::config::build_session_options (4 samples, 0.32%)</title><rect x="82.3204%" y="677" width="0.3157%" height="15" fill="rgb(213,74,28)" fg:x="1043" fg:w="4"/><text x="82.5704%" y="687.50"></text></g><g><title>rustc_session::search_paths::SearchPath::from_cli_opt (4 samples, 0.32%)</title><rect x="82.3204%" y="661" width="0.3157%" height="15" fill="rgb(224,132,34)" fg:x="1043" fg:w="4"/><text x="82.5704%" y="671.50"></text></g><g><title>rustc_session::search_paths::SearchPath::new (4 samples, 0.32%)</title><rect x="82.3204%" y="645" width="0.3157%" height="15" fill="rgb(222,101,24)" fg:x="1043" fg:w="4"/><text x="82.5704%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="82.3204%" y="629" width="0.3157%" height="15" fill="rgb(254,142,4)" fg:x="1043" fg:w="4"/><text x="82.5704%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="82.5572%" y="613" width="0.0789%" height="15" fill="rgb(230,229,49)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="623.50"></text></g><g><title>std::fs::DirEntry::path (1 samples, 0.08%)</title><rect x="82.5572%" y="597" width="0.0789%" height="15" fill="rgb(238,70,47)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="607.50"></text></g><g><title>std::sys::unix::fs::DirEntry::path (1 samples, 0.08%)</title><rect x="82.5572%" y="581" width="0.0789%" height="15" fill="rgb(231,160,17)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="591.50"></text></g><g><title>std::path::Path::join (1 samples, 0.08%)</title><rect x="82.5572%" y="565" width="0.0789%" height="15" fill="rgb(218,68,53)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="575.50"></text></g><g><title>std::path::Path::_join (1 samples, 0.08%)</title><rect x="82.5572%" y="549" width="0.0789%" height="15" fill="rgb(236,111,10)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="559.50"></text></g><g><title>std::path::PathBuf::push (1 samples, 0.08%)</title><rect x="82.5572%" y="533" width="0.0789%" height="15" fill="rgb(224,34,41)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="543.50"></text></g><g><title>std::path::PathBuf::_push (1 samples, 0.08%)</title><rect x="82.5572%" y="517" width="0.0789%" height="15" fill="rgb(241,118,19)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="527.50"></text></g><g><title>std::ffi::os_str::OsString::push (1 samples, 0.08%)</title><rect x="82.5572%" y="501" width="0.0789%" height="15" fill="rgb(238,129,25)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="511.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="82.5572%" y="485" width="0.0789%" height="15" fill="rgb(238,22,31)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="82.5572%" y="469" width="0.0789%" height="15" fill="rgb(222,174,48)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="82.5572%" y="453" width="0.0789%" height="15" fill="rgb(206,152,40)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="82.5572%" y="437" width="0.0789%" height="15" fill="rgb(218,99,54)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.5572%" y="421" width="0.0789%" height="15" fill="rgb(220,174,26)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.5572%" y="405" width="0.0789%" height="15" fill="rgb(245,116,9)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.5572%" y="389" width="0.0789%" height="15" fill="rgb(209,72,35)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="82.5572%" y="373" width="0.0789%" height="15" fill="rgb(226,126,21)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.5572%" y="357" width="0.0789%" height="15" fill="rgb(227,192,1)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="82.5572%" y="341" width="0.0789%" height="15" fill="rgb(237,180,29)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="82.5572%" y="325" width="0.0789%" height="15" fill="rgb(230,197,35)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="82.5572%" y="309" width="0.0789%" height="15" fill="rgb(246,193,31)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="319.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.5572%" y="293" width="0.0789%" height="15" fill="rgb(241,36,4)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="303.50"></text></g><g><title>iralloc (1 samples, 0.08%)</title><rect x="82.5572%" y="277" width="0.0789%" height="15" fill="rgb(241,130,17)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="287.50"></text></g><g><title>iralloct (1 samples, 0.08%)</title><rect x="82.5572%" y="261" width="0.0789%" height="15" fill="rgb(206,137,32)" fg:x="1046" fg:w="1"/><text x="82.8072%" y="271.50"></text></g><g><title>rustc_expand::expand::MacroExpander::expand_crate (1 samples, 0.08%)</title><rect x="82.6361%" y="693" width="0.0789%" height="15" fill="rgb(237,228,51)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="703.50"></text></g><g><title>rustc_expand::expand::MacroExpander::fully_expand_fragment (1 samples, 0.08%)</title><rect x="82.6361%" y="677" width="0.0789%" height="15" fill="rgb(243,6,42)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="687.50"></text></g><g><title>rustc_expand::expand::MacroExpander::collect_invocations (1 samples, 0.08%)</title><rect x="82.6361%" y="661" width="0.0789%" height="15" fill="rgb(251,74,28)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="671.50"></text></g><g><title>rustc_resolve::macros::&lt;impl rustc_expand::base::ResolverExpand for rustc_resolve::Resolver&gt;::visit_ast_fragment_with_placeholders (1 samples, 0.08%)</title><rect x="82.6361%" y="645" width="0.0789%" height="15" fill="rgb(218,20,49)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="655.50"></text></g><g><title>rustc_expand::expand::AstFragment::visit_with (1 samples, 0.08%)</title><rect x="82.6361%" y="629" width="0.0789%" height="15" fill="rgb(238,28,14)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="639.50"></text></g><g><title>&lt;rustc_resolve::build_reduced_graph::BuildReducedGraphVisitor as rustc_ast::visit::Visitor&gt;::visit_item (1 samples, 0.08%)</title><rect x="82.6361%" y="613" width="0.0789%" height="15" fill="rgb(229,40,46)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="623.50"></text></g><g><title>rustc_ast::visit::walk_item (1 samples, 0.08%)</title><rect x="82.6361%" y="597" width="0.0789%" height="15" fill="rgb(244,195,20)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="607.50"></text></g><g><title>&lt;rustc_resolve::build_reduced_graph::BuildReducedGraphVisitor as rustc_ast::visit::Visitor&gt;::visit_item (1 samples, 0.08%)</title><rect x="82.6361%" y="581" width="0.0789%" height="15" fill="rgb(253,56,35)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="591.50"></text></g><g><title>rustc_resolve::build_reduced_graph::&lt;impl rustc_resolve::Resolver&gt;::get_module (1 samples, 0.08%)</title><rect x="82.6361%" y="565" width="0.0789%" height="15" fill="rgb(210,149,44)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="575.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::&lt;impl rustc_metadata::creader::CStore&gt;::get_span_untracked (1 samples, 0.08%)</title><rect x="82.6361%" y="549" width="0.0789%" height="15" fill="rgb(240,135,12)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="559.50"></text></g><g><title>rustc_metadata::rmeta::decoder::&lt;impl rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt; for rustc_span::span_encoding::Span&gt;::decode (1 samples, 0.08%)</title><rect x="82.6361%" y="533" width="0.0789%" height="15" fill="rgb(251,24,50)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="543.50"></text></g><g><title>rustc_metadata::rmeta::decoder::&lt;impl rustc_metadata::creader::CrateMetadataRef&gt;::imported_source_files (1 samples, 0.08%)</title><rect x="82.6361%" y="517" width="0.0789%" height="15" fill="rgb(243,200,47)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="527.50"></text></g><g><title>core::lazy::OnceCell&lt;T&gt;::get_or_try_init::outlined_call (1 samples, 0.08%)</title><rect x="82.6361%" y="501" width="0.0789%" height="15" fill="rgb(224,166,26)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.6361%" y="485" width="0.0789%" height="15" fill="rgb(233,0,47)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="82.6361%" y="469" width="0.0789%" height="15" fill="rgb(253,80,5)" fg:x="1047" fg:w="1"/><text x="82.8861%" y="479.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::&lt;impl rustc_metadata::creader::CStore&gt;::get_span_untracked (1 samples, 0.08%)</title><rect x="82.7151%" y="517" width="0.0789%" height="15" fill="rgb(214,133,25)" fg:x="1048" fg:w="1"/><text x="82.9651%" y="527.50"></text></g><g><title>rustc_metadata::rmeta::decoder::&lt;impl rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt; for rustc_span::span_encoding::Span&gt;::decode (1 samples, 0.08%)</title><rect x="82.7151%" y="501" width="0.0789%" height="15" fill="rgb(209,27,14)" fg:x="1048" fg:w="1"/><text x="82.9651%" y="511.50"></text></g><g><title>rustc_metadata::rmeta::decoder::&lt;impl rustc_metadata::creader::CrateMetadataRef&gt;::imported_source_files (1 samples, 0.08%)</title><rect x="82.7151%" y="485" width="0.0789%" height="15" fill="rgb(219,102,51)" fg:x="1048" fg:w="1"/><text x="82.9651%" y="495.50"></text></g><g><title>core::lazy::OnceCell&lt;T&gt;::get_or_try_init::outlined_call (1 samples, 0.08%)</title><rect x="82.7151%" y="469" width="0.0789%" height="15" fill="rgb(237,18,16)" fg:x="1048" fg:w="1"/><text x="82.9651%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.7151%" y="453" width="0.0789%" height="15" fill="rgb(241,85,17)" fg:x="1048" fg:w="1"/><text x="82.9651%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="82.7151%" y="437" width="0.0789%" height="15" fill="rgb(236,90,42)" fg:x="1048" fg:w="1"/><text x="82.9651%" y="447.50"></text></g><g><title>&lt;rustc_span::SourceFile as rustc_serialize::serialize::Decodable&lt;D&gt;&gt;::decode (1 samples, 0.08%)</title><rect x="82.7151%" y="421" width="0.0789%" height="15" fill="rgb(249,57,21)" fg:x="1048" fg:w="1"/><text x="82.9651%" y="431.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="82.7151%" y="405" width="0.0789%" height="15" fill="rgb(243,12,36)" fg:x="1048" fg:w="1"/><text x="82.9651%" y="415.50"></text></g><g><title>&lt;rustc_span::SourceFile as rustc_serialize::serialize::Decodable&lt;D&gt;&gt;::decode (1 samples, 0.08%)</title><rect x="82.7940%" y="373" width="0.0789%" height="15" fill="rgb(253,128,47)" fg:x="1049" fg:w="1"/><text x="83.0440%" y="383.50"></text></g><g><title>rustc_span::source_map::SourceMap::new_imported_source_file (1 samples, 0.08%)</title><rect x="82.8729%" y="373" width="0.0789%" height="15" fill="rgb(207,33,20)" fg:x="1050" fg:w="1"/><text x="83.1229%" y="383.50"></text></g><g><title>&lt;std::path::Path as core::hash::Hash&gt;::hash (1 samples, 0.08%)</title><rect x="82.8729%" y="357" width="0.0789%" height="15" fill="rgb(233,215,35)" fg:x="1050" fg:w="1"/><text x="83.1229%" y="367.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.8729%" y="341" width="0.0789%" height="15" fill="rgb(249,188,52)" fg:x="1050" fg:w="1"/><text x="83.1229%" y="351.50"></text></g><g><title>std::path::Components::parse_next_component (1 samples, 0.08%)</title><rect x="82.8729%" y="325" width="0.0789%" height="15" fill="rgb(225,12,32)" fg:x="1050" fg:w="1"/><text x="83.1229%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.08%)</title><rect x="82.8729%" y="309" width="0.0789%" height="15" fill="rgb(247,98,14)" fg:x="1050" fg:w="1"/><text x="83.1229%" y="319.50"></text></g><g><title>std::path::Components::parse_next_component::{{closure}} (1 samples, 0.08%)</title><rect x="82.8729%" y="293" width="0.0789%" height="15" fill="rgb(247,219,48)" fg:x="1050" fg:w="1"/><text x="83.1229%" y="303.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.8729%" y="277" width="0.0789%" height="15" fill="rgb(253,60,48)" fg:x="1050" fg:w="1"/><text x="83.1229%" y="287.50"></text></g><g><title>std::path::Path::components (1 samples, 0.08%)</title><rect x="82.9519%" y="357" width="0.0789%" height="15" fill="rgb(245,15,52)" fg:x="1051" fg:w="1"/><text x="83.2019%" y="367.50"></text></g><g><title>std::path::has_physical_root (1 samples, 0.08%)</title><rect x="82.9519%" y="341" width="0.0789%" height="15" fill="rgb(220,133,28)" fg:x="1051" fg:w="1"/><text x="83.2019%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (1 samples, 0.08%)</title><rect x="82.9519%" y="325" width="0.0789%" height="15" fill="rgb(217,180,4)" fg:x="1051" fg:w="1"/><text x="83.2019%" y="335.50"></text></g><g><title>rustc_expand::expand::MacroExpander::fully_expand_fragment (5 samples, 0.39%)</title><rect x="82.7151%" y="693" width="0.3946%" height="15" fill="rgb(251,24,1)" fg:x="1048" fg:w="5"/><text x="82.9651%" y="703.50"></text></g><g><title>rustc_expand::expand::MacroExpander::collect_invocations (5 samples, 0.39%)</title><rect x="82.7151%" y="677" width="0.3946%" height="15" fill="rgb(212,185,49)" fg:x="1048" fg:w="5"/><text x="82.9651%" y="687.50"></text></g><g><title>rustc_resolve::macros::&lt;impl rustc_expand::base::ResolverExpand for rustc_resolve::Resolver&gt;::visit_ast_fragment_with_placeholders (5 samples, 0.39%)</title><rect x="82.7151%" y="661" width="0.3946%" height="15" fill="rgb(215,175,22)" fg:x="1048" fg:w="5"/><text x="82.9651%" y="671.50"></text></g><g><title>rustc_expand::expand::AstFragment::visit_with (5 samples, 0.39%)</title><rect x="82.7151%" y="645" width="0.3946%" height="15" fill="rgb(250,205,14)" fg:x="1048" fg:w="5"/><text x="82.9651%" y="655.50"></text></g><g><title>&lt;rustc_resolve::build_reduced_graph::BuildReducedGraphVisitor as rustc_ast::visit::Visitor&gt;::visit_item (5 samples, 0.39%)</title><rect x="82.7151%" y="629" width="0.3946%" height="15" fill="rgb(225,211,22)" fg:x="1048" fg:w="5"/><text x="82.9651%" y="639.50"></text></g><g><title>rustc_ast::visit::walk_item (5 samples, 0.39%)</title><rect x="82.7151%" y="613" width="0.3946%" height="15" fill="rgb(251,179,42)" fg:x="1048" fg:w="5"/><text x="82.9651%" y="623.50"></text></g><g><title>&lt;rustc_resolve::build_reduced_graph::BuildReducedGraphVisitor as rustc_ast::visit::Visitor&gt;::visit_item (5 samples, 0.39%)</title><rect x="82.7151%" y="597" width="0.3946%" height="15" fill="rgb(208,216,51)" fg:x="1048" fg:w="5"/><text x="82.9651%" y="607.50"></text></g><g><title>rustc_resolve::ModuleData::for_each_child (5 samples, 0.39%)</title><rect x="82.7151%" y="581" width="0.3946%" height="15" fill="rgb(235,36,11)" fg:x="1048" fg:w="5"/><text x="82.9651%" y="591.50"></text></g><g><title>rustc_resolve::Resolver::resolutions (5 samples, 0.39%)</title><rect x="82.7151%" y="565" width="0.3946%" height="15" fill="rgb(213,189,28)" fg:x="1048" fg:w="5"/><text x="82.9651%" y="575.50"></text></g><g><title>rustc_resolve::build_reduced_graph::BuildReducedGraphVisitor::build_reduced_graph_for_external_crate_res (5 samples, 0.39%)</title><rect x="82.7151%" y="549" width="0.3946%" height="15" fill="rgb(227,203,42)" fg:x="1048" fg:w="5"/><text x="82.9651%" y="559.50"></text></g><g><title>rustc_resolve::build_reduced_graph::&lt;impl rustc_resolve::Resolver&gt;::get_module (5 samples, 0.39%)</title><rect x="82.7151%" y="533" width="0.3946%" height="15" fill="rgb(244,72,36)" fg:x="1048" fg:w="5"/><text x="82.9651%" y="543.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::&lt;impl rustc_metadata::creader::CStore&gt;::module_expansion_untracked (4 samples, 0.32%)</title><rect x="82.7940%" y="517" width="0.3157%" height="15" fill="rgb(213,53,17)" fg:x="1049" fg:w="4"/><text x="83.0440%" y="527.50"></text></g><g><title>rustc_metadata::rmeta::_DERIVE_rustc_serialize_Decodable_DecodeContext_a_tcx_FOR_ModData::&lt;impl rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt; for rustc_metadata::rmeta::ModData&gt;::decode (4 samples, 0.32%)</title><rect x="82.7940%" y="501" width="0.3157%" height="15" fill="rgb(207,167,3)" fg:x="1049" fg:w="4"/><text x="83.0440%" y="511.50"></text></g><g><title>rustc_metadata::rmeta::decoder::&lt;impl rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt; for rustc_span::hygiene::ExpnId&gt;::decode (4 samples, 0.32%)</title><rect x="82.7940%" y="485" width="0.3157%" height="15" fill="rgb(216,98,30)" fg:x="1049" fg:w="4"/><text x="83.0440%" y="495.50"></text></g><g><title>rustc_span::hygiene::_DERIVE_rustc_serialize_Decodable_D_FOR_ExpnData::&lt;impl rustc_serialize::serialize::Decodable&lt;__D&gt; for rustc_span::hygiene::ExpnData&gt;::decode (4 samples, 0.32%)</title><rect x="82.7940%" y="469" width="0.3157%" height="15" fill="rgb(236,123,15)" fg:x="1049" fg:w="4"/><text x="83.0440%" y="479.50"></text></g><g><title>rustc_metadata::rmeta::decoder::&lt;impl rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt; for rustc_span::span_encoding::Span&gt;::decode (4 samples, 0.32%)</title><rect x="82.7940%" y="453" width="0.3157%" height="15" fill="rgb(248,81,50)" fg:x="1049" fg:w="4"/><text x="83.0440%" y="463.50"></text></g><g><title>rustc_metadata::rmeta::decoder::&lt;impl rustc_metadata::creader::CrateMetadataRef&gt;::imported_source_files (4 samples, 0.32%)</title><rect x="82.7940%" y="437" width="0.3157%" height="15" fill="rgb(214,120,4)" fg:x="1049" fg:w="4"/><text x="83.0440%" y="447.50"></text></g><g><title>core::lazy::OnceCell&lt;T&gt;::get_or_try_init::outlined_call (4 samples, 0.32%)</title><rect x="82.7940%" y="421" width="0.3157%" height="15" fill="rgb(208,179,34)" fg:x="1049" fg:w="4"/><text x="83.0440%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="82.7940%" y="405" width="0.3157%" height="15" fill="rgb(227,140,7)" fg:x="1049" fg:w="4"/><text x="83.0440%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="82.7940%" y="389" width="0.3157%" height="15" fill="rgb(214,22,6)" fg:x="1049" fg:w="4"/><text x="83.0440%" y="399.50"></text></g><g><title>std::path::Path::_starts_with (2 samples, 0.16%)</title><rect x="82.9519%" y="373" width="0.1579%" height="15" fill="rgb(207,137,27)" fg:x="1051" fg:w="2"/><text x="83.2019%" y="383.50"></text></g><g><title>std::path::iter_after (1 samples, 0.08%)</title><rect x="83.0308%" y="357" width="0.0789%" height="15" fill="rgb(210,8,46)" fg:x="1052" fg:w="1"/><text x="83.2808%" y="367.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.0308%" y="341" width="0.0789%" height="15" fill="rgb(240,16,54)" fg:x="1052" fg:w="1"/><text x="83.2808%" y="351.50"></text></g><g><title>std::path::Components::parse_next_component (1 samples, 0.08%)</title><rect x="83.0308%" y="325" width="0.0789%" height="15" fill="rgb(211,209,29)" fg:x="1052" fg:w="1"/><text x="83.2808%" y="335.50"></text></g><g><title>std::path::Components::parse_single_component (1 samples, 0.08%)</title><rect x="83.0308%" y="309" width="0.0789%" height="15" fill="rgb(226,228,24)" fg:x="1052" fg:w="1"/><text x="83.2808%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustc_interface::queries::Queries&gt; (2 samples, 0.16%)</title><rect x="83.1097%" y="677" width="0.1579%" height="15" fill="rgb(222,84,9)" fg:x="1053" fg:w="2"/><text x="83.3597%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustc_middle::ty::ResolverOutputs&gt; (2 samples, 0.16%)</title><rect x="83.1097%" y="661" width="0.1579%" height="15" fill="rgb(234,203,30)" fg:x="1053" fg:w="2"/><text x="83.3597%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustc_metadata::creader::CStore&gt; (2 samples, 0.16%)</title><rect x="83.1097%" y="645" width="0.1579%" height="15" fill="rgb(238,109,14)" fg:x="1053" fg:w="2"/><text x="83.3597%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="83.1097%" y="629" width="0.1579%" height="15" fill="rgb(233,206,34)" fg:x="1053" fg:w="2"/><text x="83.3597%" y="639.50"></text></g><g><title>&lt;memmap2::unix::MmapInner as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="83.1097%" y="613" width="0.1579%" height="15" fill="rgb(220,167,47)" fg:x="1053" fg:w="2"/><text x="83.3597%" y="623.50"></text></g><g><title>__GI_munmap (2 samples, 0.16%)</title><rect x="83.1097%" y="597" width="0.1579%" height="15" fill="rgb(238,105,10)" fg:x="1053" fg:w="2"/><text x="83.3597%" y="607.50"></text></g><g><title>&lt;memmap2::unix::MmapInner as core::ops::drop::Drop&gt;::drop (6 samples, 0.47%)</title><rect x="83.2676%" y="597" width="0.4736%" height="15" fill="rgb(213,227,17)" fg:x="1055" fg:w="6"/><text x="83.5176%" y="607.50"></text></g><g><title>__GI_munmap (6 samples, 0.47%)</title><rect x="83.2676%" y="581" width="0.4736%" height="15" fill="rgb(217,132,38)" fg:x="1055" fg:w="6"/><text x="83.5176%" y="591.50"></text></g><g><title>&lt;rustc_query_impl::on_disk_cache::OnDiskCache as rustc_middle::ty::context::OnDiskCache&gt;::drop_serialized_data (7 samples, 0.55%)</title><rect x="83.2676%" y="613" width="0.5525%" height="15" fill="rgb(242,146,4)" fg:x="1055" fg:w="7"/><text x="83.5176%" y="623.50"></text></g><g><title>rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::exec_cache_promotions (1 samples, 0.08%)</title><rect x="83.7411%" y="597" width="0.0789%" height="15" fill="rgb(212,61,9)" fg:x="1061" fg:w="1"/><text x="83.9911%" y="607.50"></text></g><g><title>rustc_query_impl::query_callbacks::impl_trait_ref::try_load_from_on_disk_cache (1 samples, 0.08%)</title><rect x="83.7411%" y="581" width="0.0789%" height="15" fill="rgb(247,126,22)" fg:x="1061" fg:w="1"/><text x="83.9911%" y="591.50"></text></g><g><title>rustc_middle::dep_graph::dep_node::&lt;impl rustc_query_system::dep_graph::dep_node::DepNodeParams&lt;rustc_middle::ty::context::TyCtxt&gt; for rustc_span::def_id::DefId&gt;::recover (1 samples, 0.08%)</title><rect x="83.7411%" y="565" width="0.0789%" height="15" fill="rgb(220,196,2)" fg:x="1061" fg:w="1"/><text x="83.9911%" y="575.50"></text></g><g><title>&lt;rustc_query_impl::on_disk_cache::OnDiskCache as rustc_middle::ty::context::OnDiskCache&gt;::def_path_hash_to_def_id (1 samples, 0.08%)</title><rect x="83.7411%" y="549" width="0.0789%" height="15" fill="rgb(208,46,4)" fg:x="1061" fg:w="1"/><text x="83.9911%" y="559.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::&lt;impl rustc_session::cstore::CrateStore for rustc_metadata::creader::CStore&gt;::def_path_hash_to_def_id (1 samples, 0.08%)</title><rect x="83.7411%" y="533" width="0.0789%" height="15" fill="rgb(252,104,46)" fg:x="1061" fg:w="1"/><text x="83.9911%" y="543.50"></text></g><g><title>rustc_incremental::persist::file_format::write_file_header (1 samples, 0.08%)</title><rect x="83.8200%" y="597" width="0.0789%" height="15" fill="rgb(237,152,48)" fg:x="1062" fg:w="1"/><text x="84.0700%" y="607.50"></text></g><g><title>__memcpy_sse2_unaligned (1 samples, 0.08%)</title><rect x="83.8200%" y="581" width="0.0789%" height="15" fill="rgb(221,59,37)" fg:x="1062" fg:w="1"/><text x="84.0700%" y="591.50"></text></g><g><title>rustc_middle::ty::context::TyCtxt::serialize_query_result_cache (1 samples, 0.08%)</title><rect x="83.8990%" y="597" width="0.0789%" height="15" fill="rgb(209,202,51)" fg:x="1063" fg:w="1"/><text x="84.1490%" y="607.50"></text></g><g><title>&lt;rustc_query_impl::on_disk_cache::OnDiskCache as rustc_middle::ty::context::OnDiskCache&gt;::serialize (1 samples, 0.08%)</title><rect x="83.8990%" y="581" width="0.0789%" height="15" fill="rgb(228,81,30)" fg:x="1063" fg:w="1"/><text x="84.1490%" y="591.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (1 samples, 0.08%)</title><rect x="83.8990%" y="565" width="0.0789%" height="15" fill="rgb(227,42,39)" fg:x="1063" fg:w="1"/><text x="84.1490%" y="575.50"></text></g><g><title>rustc_query_impl::on_disk_cache::CacheEncoder&lt;E&gt;::encode_tagged (1 samples, 0.08%)</title><rect x="83.8990%" y="549" width="0.0789%" height="15" fill="rgb(221,26,2)" fg:x="1063" fg:w="1"/><text x="84.1490%" y="559.50"></text></g><g><title>rustc_serialize::serialize::Encoder::emit_map (1 samples, 0.08%)</title><rect x="83.8990%" y="533" width="0.0789%" height="15" fill="rgb(254,61,31)" fg:x="1063" fg:w="1"/><text x="84.1490%" y="543.50"></text></g><g><title>rustc_serialize::opaque::FileEncoder::flush (1 samples, 0.08%)</title><rect x="83.8990%" y="517" width="0.0789%" height="15" fill="rgb(222,173,38)" fg:x="1063" fg:w="1"/><text x="84.1490%" y="527.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.08%)</title><rect x="83.8990%" y="501" width="0.0789%" height="15" fill="rgb(218,50,12)" fg:x="1063" fg:w="1"/><text x="84.1490%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::write (1 samples, 0.08%)</title><rect x="83.8990%" y="485" width="0.0789%" height="15" fill="rgb(223,88,40)" fg:x="1063" fg:w="1"/><text x="84.1490%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.08%)</title><rect x="83.8990%" y="469" width="0.0789%" height="15" fill="rgb(237,54,19)" fg:x="1063" fg:w="1"/><text x="84.1490%" y="479.50"></text></g><g><title>__libc_write (1 samples, 0.08%)</title><rect x="83.8990%" y="453" width="0.0789%" height="15" fill="rgb(251,129,25)" fg:x="1063" fg:w="1"/><text x="84.1490%" y="463.50"></text></g><g><title>rustc_incremental::persist::save::save_dep_graph (10 samples, 0.79%)</title><rect x="83.2676%" y="677" width="0.7893%" height="15" fill="rgb(238,97,19)" fg:x="1055" fg:w="10"/><text x="83.5176%" y="687.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (10 samples, 0.79%)</title><rect x="83.2676%" y="661" width="0.7893%" height="15" fill="rgb(240,169,18)" fg:x="1055" fg:w="10"/><text x="83.5176%" y="671.50"></text></g><g><title>rustc_data_structures::sync::join (10 samples, 0.79%)</title><rect x="83.2676%" y="645" width="0.7893%" height="15" fill="rgb(230,187,49)" fg:x="1055" fg:w="10"/><text x="83.5176%" y="655.50"></text></g><g><title>rustc_session::utils::&lt;impl rustc_session::session::Session&gt;::time (10 samples, 0.79%)</title><rect x="83.2676%" y="629" width="0.7893%" height="15" fill="rgb(209,44,26)" fg:x="1055" fg:w="10"/><text x="83.5176%" y="639.50"></text></g><g><title>rustc_incremental::persist::file_format::save_in (3 samples, 0.24%)</title><rect x="83.8200%" y="613" width="0.2368%" height="15" fill="rgb(244,0,6)" fg:x="1062" fg:w="3"/><text x="84.0700%" y="623.50"></text></g><g><title>std::sys::unix::fs::unlink (1 samples, 0.08%)</title><rect x="83.9779%" y="597" width="0.0789%" height="15" fill="rgb(248,18,21)" fg:x="1064" fg:w="1"/><text x="84.2279%" y="607.50"></text></g><g><title>std::sys::unix::fs::cstr (1 samples, 0.08%)</title><rect x="83.9779%" y="581" width="0.0789%" height="15" fill="rgb(245,180,19)" fg:x="1064" fg:w="1"/><text x="84.2279%" y="591.50"></text></g><g><title>std::ffi::c_str::CString::new (1 samples, 0.08%)</title><rect x="83.9779%" y="565" width="0.0789%" height="15" fill="rgb(252,118,36)" fg:x="1064" fg:w="1"/><text x="84.2279%" y="575.50"></text></g><g><title>&lt;&amp;[u8] as std::ffi::c_str::CString::new::SpecIntoVec&gt;::into_vec (1 samples, 0.08%)</title><rect x="83.9779%" y="549" width="0.0789%" height="15" fill="rgb(210,224,19)" fg:x="1064" fg:w="1"/><text x="84.2279%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="83.9779%" y="533" width="0.0789%" height="15" fill="rgb(218,30,24)" fg:x="1064" fg:w="1"/><text x="84.2279%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="83.9779%" y="517" width="0.0789%" height="15" fill="rgb(219,75,50)" fg:x="1064" fg:w="1"/><text x="84.2279%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="83.9779%" y="501" width="0.0789%" height="15" fill="rgb(234,72,50)" fg:x="1064" fg:w="1"/><text x="84.2279%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="83.9779%" y="485" width="0.0789%" height="15" fill="rgb(219,100,48)" fg:x="1064" fg:w="1"/><text x="84.2279%" y="495.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="83.9779%" y="469" width="0.0789%" height="15" fill="rgb(253,5,41)" fg:x="1064" fg:w="1"/><text x="84.2279%" y="479.50"></text></g><g><title>rustc_interface::passes::QueryContext::enter (1 samples, 0.08%)</title><rect x="84.0568%" y="677" width="0.0789%" height="15" fill="rgb(247,181,11)" fg:x="1065" fg:w="1"/><text x="84.3068%" y="687.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::analysis (1 samples, 0.08%)</title><rect x="84.0568%" y="661" width="0.0789%" height="15" fill="rgb(222,223,25)" fg:x="1065" fg:w="1"/><text x="84.3068%" y="671.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="84.0568%" y="645" width="0.0789%" height="15" fill="rgb(214,198,28)" fg:x="1065" fg:w="1"/><text x="84.3068%" y="655.50"></text></g><g><title>rustc_data_structures::stack::ensure_sufficient_stack (1 samples, 0.08%)</title><rect x="84.0568%" y="629" width="0.0789%" height="15" fill="rgb(230,46,43)" fg:x="1065" fg:w="1"/><text x="84.3068%" y="639.50"></text></g><g><title>rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_task (1 samples, 0.08%)</title><rect x="84.0568%" y="613" width="0.0789%" height="15" fill="rgb(233,65,53)" fg:x="1065" fg:w="1"/><text x="84.3068%" y="623.50"></text></g><g><title>rustc_interface::passes::analysis (1 samples, 0.08%)</title><rect x="84.0568%" y="597" width="0.0789%" height="15" fill="rgb(221,121,27)" fg:x="1065" fg:w="1"/><text x="84.3068%" y="607.50"></text></g><g><title>rustc_typeck::check_crate (1 samples, 0.08%)</title><rect x="84.0568%" y="581" width="0.0789%" height="15" fill="rgb(247,70,47)" fg:x="1065" fg:w="1"/><text x="84.3068%" y="591.50"></text></g><g><title>rustc_typeck::check_for_entry_fn (1 samples, 0.08%)</title><rect x="84.0568%" y="565" width="0.0789%" height="15" fill="rgb(228,85,35)" fg:x="1065" fg:w="1"/><text x="84.3068%" y="575.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::asyncness (1 samples, 0.08%)</title><rect x="84.0568%" y="549" width="0.0789%" height="15" fill="rgb(209,50,18)" fg:x="1065" fg:w="1"/><text x="84.3068%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="84.0568%" y="533" width="0.0789%" height="15" fill="rgb(250,19,35)" fg:x="1065" fg:w="1"/><text x="84.3068%" y="543.50"></text></g><g><title>rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory (1 samples, 0.08%)</title><rect x="84.0568%" y="517" width="0.0789%" height="15" fill="rgb(253,107,29)" fg:x="1065" fg:w="1"/><text x="84.3068%" y="527.50"></text></g><g><title>rustc_query_system::query::plumbing::incremental_verify_ich (1 samples, 0.08%)</title><rect x="84.0568%" y="501" width="0.0789%" height="15" fill="rgb(252,179,29)" fg:x="1065" fg:w="1"/><text x="84.3068%" y="511.50"></text></g><g><title>rustc_interface::queries::Queries::ongoing_codegen (7 samples, 0.55%)</title><rect x="84.1358%" y="677" width="0.5525%" height="15" fill="rgb(238,194,6)" fg:x="1066" fg:w="7"/><text x="84.3858%" y="687.50"></text></g><g><title>&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend&gt;::codegen_crate (7 samples, 0.55%)</title><rect x="84.1358%" y="661" width="0.5525%" height="15" fill="rgb(238,164,29)" fg:x="1066" fg:w="7"/><text x="84.3858%" y="671.50"></text></g><g><title>rustc_codegen_ssa::base::codegen_crate (7 samples, 0.55%)</title><rect x="84.1358%" y="645" width="0.5525%" height="15" fill="rgb(224,25,9)" fg:x="1066" fg:w="7"/><text x="84.3858%" y="655.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (7 samples, 0.55%)</title><rect x="84.1358%" y="629" width="0.5525%" height="15" fill="rgb(244,153,23)" fg:x="1066" fg:w="7"/><text x="84.3858%" y="639.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (7 samples, 0.55%)</title><rect x="84.1358%" y="613" width="0.5525%" height="15" fill="rgb(212,203,14)" fg:x="1066" fg:w="7"/><text x="84.3858%" y="623.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (7 samples, 0.55%)</title><rect x="84.1358%" y="597" width="0.5525%" height="15" fill="rgb(220,164,20)" fg:x="1066" fg:w="7"/><text x="84.3858%" y="607.50"></text></g><g><title>std::thread::park (7 samples, 0.55%)</title><rect x="84.1358%" y="581" width="0.5525%" height="15" fill="rgb(222,203,48)" fg:x="1066" fg:w="7"/><text x="84.3858%" y="591.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (7 samples, 0.55%)</title><rect x="84.1358%" y="565" width="0.5525%" height="15" fill="rgb(215,159,22)" fg:x="1066" fg:w="7"/><text x="84.3858%" y="575.50"></text></g><g><title>std::sys::unix::futex::futex_wait (7 samples, 0.55%)</title><rect x="84.1358%" y="549" width="0.5525%" height="15" fill="rgb(216,183,47)" fg:x="1066" fg:w="7"/><text x="84.3858%" y="559.50"></text></g><g><title>syscall (7 samples, 0.55%)</title><rect x="84.1358%" y="533" width="0.5525%" height="15" fill="rgb(229,195,25)" fg:x="1066" fg:w="7"/><text x="84.3858%" y="543.50"></text></g><g><title>rustc_interface::queries::Queries::prepare_outputs (1 samples, 0.08%)</title><rect x="84.6882%" y="677" width="0.0789%" height="15" fill="rgb(224,132,51)" fg:x="1073" fg:w="1"/><text x="84.9382%" y="687.50"></text></g><g><title>std::path::Path::is_dir (1 samples, 0.08%)</title><rect x="84.6882%" y="661" width="0.0789%" height="15" fill="rgb(240,63,7)" fg:x="1073" fg:w="1"/><text x="84.9382%" y="671.50"></text></g><g><title>std::fs::metadata (1 samples, 0.08%)</title><rect x="84.6882%" y="645" width="0.0789%" height="15" fill="rgb(249,182,41)" fg:x="1073" fg:w="1"/><text x="84.9382%" y="655.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 0.08%)</title><rect x="84.6882%" y="629" width="0.0789%" height="15" fill="rgb(243,47,26)" fg:x="1073" fg:w="1"/><text x="84.9382%" y="639.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.08%)</title><rect x="84.6882%" y="613" width="0.0789%" height="15" fill="rgb(233,48,2)" fg:x="1073" fg:w="1"/><text x="84.9382%" y="623.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.08%)</title><rect x="84.6882%" y="597" width="0.0789%" height="15" fill="rgb(244,165,34)" fg:x="1073" fg:w="1"/><text x="84.9382%" y="607.50"></text></g><g><title>statx (1 samples, 0.08%)</title><rect x="84.6882%" y="581" width="0.0789%" height="15" fill="rgb(207,89,7)" fg:x="1073" fg:w="1"/><text x="84.9382%" y="591.50"></text></g><g><title>rustc_incremental::persist::fs::prepare_session_directory (1 samples, 0.08%)</title><rect x="84.7672%" y="661" width="0.0789%" height="15" fill="rgb(244,117,36)" fg:x="1074" fg:w="1"/><text x="85.0172%" y="671.50"></text></g><g><title>std::sys::unix::fs::canonicalize (1 samples, 0.08%)</title><rect x="84.7672%" y="645" width="0.0789%" height="15" fill="rgb(226,144,34)" fg:x="1074" fg:w="1"/><text x="85.0172%" y="655.50"></text></g><g><title>__realpath (1 samples, 0.08%)</title><rect x="84.7672%" y="629" width="0.0789%" height="15" fill="rgb(213,23,19)" fg:x="1074" fg:w="1"/><text x="85.0172%" y="639.50"></text></g><g><title>realpath_stk (1 samples, 0.08%)</title><rect x="84.7672%" y="613" width="0.0789%" height="15" fill="rgb(217,75,12)" fg:x="1074" fg:w="1"/><text x="85.0172%" y="623.50"></text></g><g><title>__GI___readlink (1 samples, 0.08%)</title><rect x="84.7672%" y="597" width="0.0789%" height="15" fill="rgb(224,159,17)" fg:x="1074" fg:w="1"/><text x="85.0172%" y="607.50"></text></g><g><title>rustc_interface::queries::&lt;impl rustc_interface::interface::Compiler&gt;::enter (23 samples, 1.82%)</title><rect x="83.1097%" y="693" width="1.8153%" height="15" fill="rgb(217,118,1)" fg:x="1053" fg:w="23"/><text x="83.3597%" y="703.50">r..</text></g><g><title>rustc_interface::queries::Queries::register_plugins (2 samples, 0.16%)</title><rect x="84.7672%" y="677" width="0.1579%" height="15" fill="rgb(232,180,48)" fg:x="1074" fg:w="2"/><text x="85.0172%" y="687.50"></text></g><g><title>rustc_interface::queries::Queries::dep_graph_future (1 samples, 0.08%)</title><rect x="84.8461%" y="661" width="0.0789%" height="15" fill="rgb(230,27,33)" fg:x="1075" fg:w="1"/><text x="85.0961%" y="671.50"></text></g><g><title>rustc_incremental::persist::load::load_dep_graph (1 samples, 0.08%)</title><rect x="84.8461%" y="645" width="0.0789%" height="15" fill="rgb(205,31,21)" fg:x="1075" fg:w="1"/><text x="85.0961%" y="655.50"></text></g><g><title>rustc_session::options::Options::dep_tracking_hash (1 samples, 0.08%)</title><rect x="84.8461%" y="629" width="0.0789%" height="15" fill="rgb(253,59,4)" fg:x="1075" fg:w="1"/><text x="85.0961%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1 samples, 0.08%)</title><rect x="84.8461%" y="613" width="0.0789%" height="15" fill="rgb(224,201,9)" fg:x="1075" fg:w="1"/><text x="85.0961%" y="623.50"></text></g><g><title>__memcmp_sse4_1 (1 samples, 0.08%)</title><rect x="84.8461%" y="597" width="0.0789%" height="15" fill="rgb(229,206,30)" fg:x="1075" fg:w="1"/><text x="85.0961%" y="607.50"></text></g><g><title>rustc_interface::queries::Queries::ongoing_codegen (1 samples, 0.08%)</title><rect x="84.9250%" y="693" width="0.0789%" height="15" fill="rgb(212,67,47)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="703.50"></text></g><g><title>&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend&gt;::codegen_crate (1 samples, 0.08%)</title><rect x="84.9250%" y="677" width="0.0789%" height="15" fill="rgb(211,96,50)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="687.50"></text></g><g><title>rustc_codegen_ssa::base::codegen_crate (1 samples, 0.08%)</title><rect x="84.9250%" y="661" width="0.0789%" height="15" fill="rgb(252,114,18)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="671.50"></text></g><g><title>rustc_codegen_ssa::back::write::start_async_codegen (1 samples, 0.08%)</title><rect x="84.9250%" y="645" width="0.0789%" height="15" fill="rgb(223,58,37)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="655.50"></text></g><g><title>rustc_codegen_ssa::base::&lt;impl rustc_codegen_ssa::CrateInfo&gt;::new (1 samples, 0.08%)</title><rect x="84.9250%" y="629" width="0.0789%" height="15" fill="rgb(237,70,4)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.9250%" y="613" width="0.0789%" height="15" fill="rgb(244,85,46)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="623.50"></text></g><g><title>rustc_codegen_ssa::back::linker::exported_symbols (1 samples, 0.08%)</title><rect x="84.9250%" y="597" width="0.0789%" height="15" fill="rgb(223,39,52)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="607.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query (1 samples, 0.08%)</title><rect x="84.9250%" y="581" width="0.0789%" height="15" fill="rgb(218,200,14)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="591.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="84.9250%" y="565" width="0.0789%" height="15" fill="rgb(208,171,16)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="575.50"></text></g><g><title>rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory (1 samples, 0.08%)</title><rect x="84.9250%" y="549" width="0.0789%" height="15" fill="rgb(234,200,18)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="559.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (1 samples, 0.08%)</title><rect x="84.9250%" y="533" width="0.0789%" height="15" fill="rgb(228,45,11)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.08%)</title><rect x="84.9250%" y="517" width="0.0789%" height="15" fill="rgb(237,182,11)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="84.9250%" y="501" width="0.0789%" height="15" fill="rgb(241,175,49)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="511.50"></text></g><g><title>rustc_metadata::dependency_format::calculate_type (1 samples, 0.08%)</title><rect x="84.9250%" y="485" width="0.0789%" height="15" fill="rgb(247,38,35)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="495.50"></text></g><g><title>rustc_metadata::dependency_format::attempt_static::{{closure}} (1 samples, 0.08%)</title><rect x="84.9250%" y="469" width="0.0789%" height="15" fill="rgb(228,39,49)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="479.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::is_panic_runtime (1 samples, 0.08%)</title><rect x="84.9250%" y="453" width="0.0789%" height="15" fill="rgb(226,101,26)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="463.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="84.9250%" y="437" width="0.0789%" height="15" fill="rgb(206,141,19)" fg:x="1076" fg:w="1"/><text x="85.1750%" y="447.50"></text></g><g><title>rustc_metadata::creader::CrateLoader::load (1 samples, 0.08%)</title><rect x="85.0039%" y="693" width="0.0789%" height="15" fill="rgb(211,200,13)" fg:x="1077" fg:w="1"/><text x="85.2539%" y="703.50"></text></g><g><title>rustc_metadata::locator::CrateLocator::maybe_load_library_crate (1 samples, 0.08%)</title><rect x="85.0039%" y="677" width="0.0789%" height="15" fill="rgb(241,121,6)" fg:x="1077" fg:w="1"/><text x="85.2539%" y="687.50"></text></g><g><title>rustc_metadata::locator::CrateLocator::find_library_crate (1 samples, 0.08%)</title><rect x="85.0039%" y="661" width="0.0789%" height="15" fill="rgb(234,221,29)" fg:x="1077" fg:w="1"/><text x="85.2539%" y="671.50"></text></g><g><title>rustc_metadata::locator::CrateLocator::extract_lib (1 samples, 0.08%)</title><rect x="85.0039%" y="645" width="0.0789%" height="15" fill="rgb(229,136,5)" fg:x="1077" fg:w="1"/><text x="85.2539%" y="655.50"></text></g><g><title>rustc_metadata::locator::CrateLocator::extract_one (1 samples, 0.08%)</title><rect x="85.0039%" y="629" width="0.0789%" height="15" fill="rgb(238,36,11)" fg:x="1077" fg:w="1"/><text x="85.2539%" y="639.50"></text></g><g><title>rustc_metadata::rmeta::decoder::MetadataBlob::get_root (1 samples, 0.08%)</title><rect x="85.0039%" y="613" width="0.0789%" height="15" fill="rgb(251,55,41)" fg:x="1077" fg:w="1"/><text x="85.2539%" y="623.50"></text></g><g><title>rustc_metadata::rmeta::_DERIVE_rustc_serialize_Decodable_DecodeContext_a_tcx_FOR_CrateRoot::&lt;impl rustc_serialize::serialize::Decodable&lt;rustc_metadata::rmeta::decoder::DecodeContext&gt; for rustc_metadata::rmeta::CrateRoot&gt;::decode (1 samples, 0.08%)</title><rect x="85.0039%" y="597" width="0.0789%" height="15" fill="rgb(242,34,40)" fg:x="1077" fg:w="1"/><text x="85.2539%" y="607.50"></text></g><g><title>rustc_target::spec::_DERIVE_rustc_serialize_Decodable_D_FOR_TargetTriple::&lt;impl rustc_serialize::serialize::Decodable&lt;__D&gt; for rustc_target::spec::TargetTriple&gt;::decode (1 samples, 0.08%)</title><rect x="85.0039%" y="581" width="0.0789%" height="15" fill="rgb(215,42,17)" fg:x="1077" fg:w="1"/><text x="85.2539%" y="591.50"></text></g><g><title>rustc_metadata::locator::CrateLocator::extract_lib (1 samples, 0.08%)</title><rect x="85.0829%" y="629" width="0.0789%" height="15" fill="rgb(207,44,46)" fg:x="1078" fg:w="1"/><text x="85.3329%" y="639.50"></text></g><g><title>rustc_metadata::locator::CrateLocator::extract_one (1 samples, 0.08%)</title><rect x="85.0829%" y="613" width="0.0789%" height="15" fill="rgb(211,206,28)" fg:x="1078" fg:w="1"/><text x="85.3329%" y="623.50"></text></g><g><title>rustc_metadata::locator::get_metadata_section (1 samples, 0.08%)</title><rect x="85.0829%" y="597" width="0.0789%" height="15" fill="rgb(237,167,16)" fg:x="1078" fg:w="1"/><text x="85.3329%" y="607.50"></text></g><g><title>&lt;rustc_codegen_ssa::back::metadata::DefaultMetadataLoader as rustc_session::cstore::MetadataLoader&gt;::get_rlib_metadata (1 samples, 0.08%)</title><rect x="85.0829%" y="581" width="0.0789%" height="15" fill="rgb(233,66,6)" fg:x="1078" fg:w="1"/><text x="85.3329%" y="591.50"></text></g><g><title>rustc_data_structures::owning_ref::OwningRef&lt;O,T&gt;::try_map (1 samples, 0.08%)</title><rect x="85.0829%" y="565" width="0.0789%" height="15" fill="rgb(246,123,29)" fg:x="1078" fg:w="1"/><text x="85.3329%" y="575.50"></text></g><g><title>object::read::archive::ArchiveMember::parse (1 samples, 0.08%)</title><rect x="85.0829%" y="549" width="0.0789%" height="15" fill="rgb(209,62,40)" fg:x="1078" fg:w="1"/><text x="85.3329%" y="559.50"></text></g><g><title>rustc_metadata::creader::CrateLoader::maybe_resolve_crate (6 samples, 0.47%)</title><rect x="85.0829%" y="693" width="0.4736%" height="15" fill="rgb(218,4,25)" fg:x="1078" fg:w="6"/><text x="85.3329%" y="703.50"></text></g><g><title>rustc_metadata::creader::CrateLoader::load (6 samples, 0.47%)</title><rect x="85.0829%" y="677" width="0.4736%" height="15" fill="rgb(253,91,49)" fg:x="1078" fg:w="6"/><text x="85.3329%" y="687.50"></text></g><g><title>rustc_metadata::locator::CrateLocator::maybe_load_library_crate (6 samples, 0.47%)</title><rect x="85.0829%" y="661" width="0.4736%" height="15" fill="rgb(228,155,29)" fg:x="1078" fg:w="6"/><text x="85.3329%" y="671.50"></text></g><g><title>rustc_metadata::locator::CrateLocator::find_library_crate (6 samples, 0.47%)</title><rect x="85.0829%" y="645" width="0.4736%" height="15" fill="rgb(243,57,37)" fg:x="1078" fg:w="6"/><text x="85.3329%" y="655.50"></text></g><g><title>rustc_session::filesearch::FileSearch::search (5 samples, 0.39%)</title><rect x="85.1618%" y="629" width="0.3946%" height="15" fill="rgb(244,167,17)" fg:x="1079" fg:w="5"/><text x="85.4118%" y="639.50"></text></g><g><title>__memcmp_sse4_1 (4 samples, 0.32%)</title><rect x="85.2407%" y="613" width="0.3157%" height="15" fill="rgb(207,181,38)" fg:x="1080" fg:w="4"/><text x="85.4907%" y="623.50"></text></g><g><title>rustc_monomorphize::collector::collect_crate_mono_items (1 samples, 0.08%)</title><rect x="85.5564%" y="693" width="0.0789%" height="15" fill="rgb(211,8,23)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="703.50"></text></g><g><title>rustc_session::utils::&lt;impl rustc_session::session::Session&gt;::time (1 samples, 0.08%)</title><rect x="85.5564%" y="677" width="0.0789%" height="15" fill="rgb(235,11,44)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="687.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.08%)</title><rect x="85.5564%" y="661" width="0.0789%" height="15" fill="rgb(248,18,52)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="671.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.08%)</title><rect x="85.5564%" y="645" width="0.0789%" height="15" fill="rgb(208,4,7)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="655.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.08%)</title><rect x="85.5564%" y="629" width="0.0789%" height="15" fill="rgb(240,17,39)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="639.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.08%)</title><rect x="85.5564%" y="613" width="0.0789%" height="15" fill="rgb(207,170,3)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="623.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.08%)</title><rect x="85.5564%" y="597" width="0.0789%" height="15" fill="rgb(236,100,52)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="607.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.08%)</title><rect x="85.5564%" y="581" width="0.0789%" height="15" fill="rgb(246,78,51)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="591.50"></text></g><g><title>&lt;rustc_monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor&gt;::visit_terminator (1 samples, 0.08%)</title><rect x="85.5564%" y="565" width="0.0789%" height="15" fill="rgb(211,17,15)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="575.50"></text></g><g><title>rustc_monomorphize::collector::visit_instance_use (1 samples, 0.08%)</title><rect x="85.5564%" y="549" width="0.0789%" height="15" fill="rgb(209,59,46)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="559.50"></text></g><g><title>rustc_monomorphize::collector::should_codegen_locally (1 samples, 0.08%)</title><rect x="85.5564%" y="533" width="0.0789%" height="15" fill="rgb(210,92,25)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="543.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::is_reachable_non_generic (1 samples, 0.08%)</title><rect x="85.5564%" y="517" width="0.0789%" height="15" fill="rgb(238,174,52)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="527.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="85.5564%" y="501" width="0.0789%" height="15" fill="rgb(230,73,7)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory (1 samples, 0.08%)</title><rect x="85.5564%" y="485" width="0.0789%" height="15" fill="rgb(243,124,40)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="495.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (1 samples, 0.08%)</title><rect x="85.5564%" y="469" width="0.0789%" height="15" fill="rgb(244,170,11)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="479.50"></text></g><g><title>rustc_codegen_ssa::back::symbol_export::is_reachable_non_generic_provider_extern (1 samples, 0.08%)</title><rect x="85.5564%" y="453" width="0.0789%" height="15" fill="rgb(207,114,54)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="463.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::reachable_non_generics (1 samples, 0.08%)</title><rect x="85.5564%" y="437" width="0.0789%" height="15" fill="rgb(205,42,20)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="447.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="85.5564%" y="421" width="0.0789%" height="15" fill="rgb(230,30,28)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="431.50"></text></g><g><title>rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory (1 samples, 0.08%)</title><rect x="85.5564%" y="405" width="0.0789%" height="15" fill="rgb(205,73,54)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="415.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (1 samples, 0.08%)</title><rect x="85.5564%" y="389" width="0.0789%" height="15" fill="rgb(254,227,23)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="399.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::reachable_non_generics (1 samples, 0.08%)</title><rect x="85.5564%" y="373" width="0.0789%" height="15" fill="rgb(228,202,34)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="383.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="85.5564%" y="357" width="0.0789%" height="15" fill="rgb(222,225,37)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="85.5564%" y="341" width="0.0789%" height="15" fill="rgb(221,14,54)" fg:x="1084" fg:w="1"/><text x="85.8064%" y="351.50"></text></g><g><title>&lt;rustc_monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor&gt;::visit_rvalue (1 samples, 0.08%)</title><rect x="85.6354%" y="581" width="0.0789%" height="15" fill="rgb(254,102,2)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="85.6354%" y="565" width="0.0789%" height="15" fill="rgb(232,104,17)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="575.50"></text></g><g><title>rustc_monomorphize::collector::should_codegen_locally (1 samples, 0.08%)</title><rect x="85.6354%" y="549" width="0.0789%" height="15" fill="rgb(250,220,14)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="559.50"></text></g><g><title>rustc_middle::ty::instance::Instance::upstream_monomorphization (1 samples, 0.08%)</title><rect x="85.6354%" y="533" width="0.0789%" height="15" fill="rgb(241,158,9)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="543.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query (1 samples, 0.08%)</title><rect x="85.6354%" y="517" width="0.0789%" height="15" fill="rgb(246,9,43)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="527.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="85.6354%" y="501" width="0.0789%" height="15" fill="rgb(206,73,33)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory (1 samples, 0.08%)</title><rect x="85.6354%" y="485" width="0.0789%" height="15" fill="rgb(222,79,8)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="495.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (1 samples, 0.08%)</title><rect x="85.6354%" y="469" width="0.0789%" height="15" fill="rgb(234,8,54)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="479.50"></text></g><g><title>rustc_codegen_ssa::back::symbol_export::upstream_monomorphizations_for_provider (1 samples, 0.08%)</title><rect x="85.6354%" y="453" width="0.0789%" height="15" fill="rgb(209,134,38)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="463.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::upstream_monomorphizations (1 samples, 0.08%)</title><rect x="85.6354%" y="437" width="0.0789%" height="15" fill="rgb(230,127,29)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="447.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="85.6354%" y="421" width="0.0789%" height="15" fill="rgb(242,44,41)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="431.50"></text></g><g><title>rustc_data_structures::stack::ensure_sufficient_stack (1 samples, 0.08%)</title><rect x="85.6354%" y="405" width="0.0789%" height="15" fill="rgb(222,56,43)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="415.50"></text></g><g><title>rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory (1 samples, 0.08%)</title><rect x="85.6354%" y="389" width="0.0789%" height="15" fill="rgb(238,39,47)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="399.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (1 samples, 0.08%)</title><rect x="85.6354%" y="373" width="0.0789%" height="15" fill="rgb(226,79,43)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="383.50"></text></g><g><title>rustc_codegen_ssa::back::symbol_export::upstream_monomorphizations_provider (1 samples, 0.08%)</title><rect x="85.6354%" y="357" width="0.0789%" height="15" fill="rgb(242,105,53)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="367.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query (1 samples, 0.08%)</title><rect x="85.6354%" y="341" width="0.0789%" height="15" fill="rgb(251,132,46)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="351.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="85.6354%" y="325" width="0.0789%" height="15" fill="rgb(231,77,14)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="335.50"></text></g><g><title>rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory (1 samples, 0.08%)</title><rect x="85.6354%" y="309" width="0.0789%" height="15" fill="rgb(240,135,9)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="319.50"></text></g><g><title>rustc_query_system::query::plumbing::incremental_verify_ich (1 samples, 0.08%)</title><rect x="85.6354%" y="293" width="0.0789%" height="15" fill="rgb(248,109,14)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="303.50"></text></g><g><title>rustc_query_impl::&lt;impl rustc_query_system::query::config::QueryAccessors&lt;rustc_query_impl::plumbing::QueryCtxt&gt; for rustc_query_impl::queries::exported_symbols&gt;::hash_result (1 samples, 0.08%)</title><rect x="85.6354%" y="277" width="0.0789%" height="15" fill="rgb(227,146,52)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="287.50"></text></g><g><title>&lt;[T] as rustc_data_structures::stable_hasher::HashStable&lt;CTX&gt;&gt;::hash_stable (1 samples, 0.08%)</title><rect x="85.6354%" y="261" width="0.0789%" height="15" fill="rgb(232,54,3)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="271.50"></text></g><g><title>rustc_data_structures::sip128::SipHasher128::short_write_process_buffer (1 samples, 0.08%)</title><rect x="85.6354%" y="245" width="0.0789%" height="15" fill="rgb(229,201,43)" fg:x="1085" fg:w="1"/><text x="85.8854%" y="255.50"></text></g><g><title>rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_task (2 samples, 0.16%)</title><rect x="85.6354%" y="693" width="0.1579%" height="15" fill="rgb(252,161,33)" fg:x="1085" fg:w="2"/><text x="85.8854%" y="703.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (2 samples, 0.16%)</title><rect x="85.6354%" y="677" width="0.1579%" height="15" fill="rgb(226,146,40)" fg:x="1085" fg:w="2"/><text x="85.8854%" y="687.50"></text></g><g><title>rustc_monomorphize::partitioning::collect_and_partition_mono_items (2 samples, 0.16%)</title><rect x="85.6354%" y="661" width="0.1579%" height="15" fill="rgb(219,47,25)" fg:x="1085" fg:w="2"/><text x="85.8854%" y="671.50"></text></g><g><title>rustc_monomorphize::collector::collect_crate_mono_items (2 samples, 0.16%)</title><rect x="85.6354%" y="645" width="0.1579%" height="15" fill="rgb(250,135,13)" fg:x="1085" fg:w="2"/><text x="85.8854%" y="655.50"></text></g><g><title>rustc_session::utils::&lt;impl rustc_session::session::Session&gt;::time (2 samples, 0.16%)</title><rect x="85.6354%" y="629" width="0.1579%" height="15" fill="rgb(219,229,18)" fg:x="1085" fg:w="2"/><text x="85.8854%" y="639.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (2 samples, 0.16%)</title><rect x="85.6354%" y="613" width="0.1579%" height="15" fill="rgb(217,152,27)" fg:x="1085" fg:w="2"/><text x="85.8854%" y="623.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (2 samples, 0.16%)</title><rect x="85.6354%" y="597" width="0.1579%" height="15" fill="rgb(225,71,47)" fg:x="1085" fg:w="2"/><text x="85.8854%" y="607.50"></text></g><g><title>rustc_middle::ty::&lt;impl rustc_middle::ty::context::TyCtxt&gt;::instance_mir (1 samples, 0.08%)</title><rect x="85.7143%" y="581" width="0.0789%" height="15" fill="rgb(220,139,14)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="591.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::optimized_mir (1 samples, 0.08%)</title><rect x="85.7143%" y="565" width="0.0789%" height="15" fill="rgb(247,54,32)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="575.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="85.7143%" y="549" width="0.0789%" height="15" fill="rgb(252,131,39)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="559.50"></text></g><g><title>rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory (1 samples, 0.08%)</title><rect x="85.7143%" y="533" width="0.0789%" height="15" fill="rgb(210,108,39)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="543.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (1 samples, 0.08%)</title><rect x="85.7143%" y="517" width="0.0789%" height="15" fill="rgb(205,23,29)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="527.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::optimized_mir (1 samples, 0.08%)</title><rect x="85.7143%" y="501" width="0.0789%" height="15" fill="rgb(246,139,46)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="511.50"></text></g><g><title>rustc_metadata::rmeta::decoder::&lt;impl rustc_metadata::creader::CrateMetadataRef&gt;::get_optimized_mir (1 samples, 0.08%)</title><rect x="85.7143%" y="485" width="0.0789%" height="15" fill="rgb(250,81,26)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="495.50"></text></g><g><title>rustc_middle::mir::_DERIVE_rustc_serialize_Decodable_D_FOR_Body::&lt;impl rustc_serialize::serialize::Decodable&lt;__D&gt; for rustc_middle::mir::Body&gt;::decode (1 samples, 0.08%)</title><rect x="85.7143%" y="469" width="0.0789%" height="15" fill="rgb(214,104,7)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="479.50"></text></g><g><title>rustc_serialize::serialize::Decoder::read_seq (1 samples, 0.08%)</title><rect x="85.7143%" y="453" width="0.0789%" height="15" fill="rgb(233,189,8)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="463.50"></text></g><g><title>rustc_middle::mir::_DERIVE_rustc_serialize_Decodable_D_FOR_LocalDecl::&lt;impl rustc_serialize::serialize::Decodable&lt;__D&gt; for rustc_middle::mir::LocalDecl&gt;::decode (1 samples, 0.08%)</title><rect x="85.7143%" y="437" width="0.0789%" height="15" fill="rgb(228,141,17)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="447.50"></text></g><g><title>rustc_middle::ty::codec::&lt;impl rustc_serialize::serialize::Decodable&lt;D&gt; for &amp;rustc_middle::ty::TyS&gt;::decode (1 samples, 0.08%)</title><rect x="85.7143%" y="421" width="0.0789%" height="15" fill="rgb(247,157,1)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="431.50"></text></g><g><title>rustc_middle::ty::sty::_DERIVE_rustc_serialize_Decodable_D_FOR_TyKind::&lt;impl rustc_serialize::serialize::Decodable&lt;__D&gt; for rustc_middle::ty::sty::TyKind&gt;::decode (1 samples, 0.08%)</title><rect x="85.7143%" y="405" width="0.0789%" height="15" fill="rgb(249,225,5)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="415.50"></text></g><g><title>&lt;rustc_middle::ty::adt::AdtDef as rustc_middle::ty::codec::RefDecodable&lt;D&gt;&gt;::decode (1 samples, 0.08%)</title><rect x="85.7143%" y="389" width="0.0789%" height="15" fill="rgb(242,55,13)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="399.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::adt_def (1 samples, 0.08%)</title><rect x="85.7143%" y="373" width="0.0789%" height="15" fill="rgb(230,49,50)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="383.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="85.7143%" y="357" width="0.0789%" height="15" fill="rgb(241,111,38)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="367.50"></text></g><g><title>rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory (1 samples, 0.08%)</title><rect x="85.7143%" y="341" width="0.0789%" height="15" fill="rgb(252,155,4)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="351.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (1 samples, 0.08%)</title><rect x="85.7143%" y="325" width="0.0789%" height="15" fill="rgb(212,69,32)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="335.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::provide_extern::adt_def (1 samples, 0.08%)</title><rect x="85.7143%" y="309" width="0.0789%" height="15" fill="rgb(243,107,47)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="319.50"></text></g><g><title>rustc_metadata::rmeta::decoder::&lt;impl rustc_metadata::creader::CrateMetadataRef&gt;::get_adt_def (1 samples, 0.08%)</title><rect x="85.7143%" y="293" width="0.0789%" height="15" fill="rgb(247,130,12)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="303.50"></text></g><g><title>rustc_metadata::rmeta::table::&lt;impl rustc_metadata::rmeta::Lazy&lt;rustc_metadata::rmeta::table::Table&lt;I,T&gt;&gt;&gt;::get (1 samples, 0.08%)</title><rect x="85.7143%" y="277" width="0.0789%" height="15" fill="rgb(233,74,16)" fg:x="1086" fg:w="1"/><text x="85.9643%" y="287.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="85.7932%" y="693" width="0.0789%" height="15" fill="rgb(208,58,18)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="703.50"></text></g><g><title>rustc_data_structures::stack::ensure_sufficient_stack (1 samples, 0.08%)</title><rect x="85.7932%" y="677" width="0.0789%" height="15" fill="rgb(242,225,1)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="687.50"></text></g><g><title>rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_task (1 samples, 0.08%)</title><rect x="85.7932%" y="661" width="0.0789%" height="15" fill="rgb(249,39,40)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="671.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (1 samples, 0.08%)</title><rect x="85.7932%" y="645" width="0.0789%" height="15" fill="rgb(207,72,44)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="655.50"></text></g><g><title>rustc_monomorphize::partitioning::collect_and_partition_mono_items (1 samples, 0.08%)</title><rect x="85.7932%" y="629" width="0.0789%" height="15" fill="rgb(215,193,12)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="639.50"></text></g><g><title>rustc_monomorphize::collector::collect_crate_mono_items (1 samples, 0.08%)</title><rect x="85.7932%" y="613" width="0.0789%" height="15" fill="rgb(248,41,39)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="623.50"></text></g><g><title>rustc_session::utils::&lt;impl rustc_session::session::Session&gt;::time (1 samples, 0.08%)</title><rect x="85.7932%" y="597" width="0.0789%" height="15" fill="rgb(253,85,4)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="607.50"></text></g><g><title>rustc_monomorphize::collector::collect_items_rec (1 samples, 0.08%)</title><rect x="85.7932%" y="581" width="0.0789%" height="15" fill="rgb(243,70,31)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="591.50"></text></g><g><title>rustc_monomorphize::collector::collect_neighbours (1 samples, 0.08%)</title><rect x="85.7932%" y="565" width="0.0789%" height="15" fill="rgb(253,195,26)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="575.50"></text></g><g><title>&lt;rustc_monomorphize::collector::MirNeighborCollector as rustc_middle::mir::visit::Visitor&gt;::visit_rvalue (1 samples, 0.08%)</title><rect x="85.7932%" y="549" width="0.0789%" height="15" fill="rgb(243,42,11)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="559.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::vtable_entries (1 samples, 0.08%)</title><rect x="85.7932%" y="533" width="0.0789%" height="15" fill="rgb(239,66,17)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="543.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query (1 samples, 0.08%)</title><rect x="85.7932%" y="517" width="0.0789%" height="15" fill="rgb(217,132,21)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="527.50"></text></g><g><title>rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory (1 samples, 0.08%)</title><rect x="85.7932%" y="501" width="0.0789%" height="15" fill="rgb(252,202,21)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="511.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (1 samples, 0.08%)</title><rect x="85.7932%" y="485" width="0.0789%" height="15" fill="rgb(233,98,36)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="495.50"></text></g><g><title>rustc_trait_selection::traits::vtable_entries (1 samples, 0.08%)</title><rect x="85.7932%" y="469" width="0.0789%" height="15" fill="rgb(216,153,54)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="479.50"></text></g><g><title>rustc_trait_selection::traits::vtable_entries::{{closure}} (1 samples, 0.08%)</title><rect x="85.7932%" y="453" width="0.0789%" height="15" fill="rgb(250,99,7)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="85.7932%" y="437" width="0.0789%" height="15" fill="rgb(207,56,50)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="447.50"></text></g><g><title>rustc_middle::ty::instance::Instance::resolve_for_vtable (1 samples, 0.08%)</title><rect x="85.7932%" y="421" width="0.0789%" height="15" fill="rgb(244,61,34)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="431.50"></text></g><g><title>rustc_middle::ty::instance::InstanceDef::requires_caller_location (1 samples, 0.08%)</title><rect x="85.7932%" y="405" width="0.0789%" height="15" fill="rgb(241,50,38)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="415.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::codegen_fn_attrs (1 samples, 0.08%)</title><rect x="85.7932%" y="389" width="0.0789%" height="15" fill="rgb(212,166,30)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="399.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="85.7932%" y="373" width="0.0789%" height="15" fill="rgb(249,127,32)" fg:x="1087" fg:w="1"/><text x="86.0432%" y="383.50"></text></g><g><title>std::env::current_exe (1 samples, 0.08%)</title><rect x="85.8721%" y="661" width="0.0789%" height="15" fill="rgb(209,103,0)" fg:x="1088" fg:w="1"/><text x="86.1221%" y="671.50"></text></g><g><title>std::sys::unix::os::current_exe (1 samples, 0.08%)</title><rect x="85.8721%" y="645" width="0.0789%" height="15" fill="rgb(238,209,51)" fg:x="1088" fg:w="1"/><text x="86.1221%" y="655.50"></text></g><g><title>std::fs::read_link (1 samples, 0.08%)</title><rect x="85.8721%" y="629" width="0.0789%" height="15" fill="rgb(237,56,23)" fg:x="1088" fg:w="1"/><text x="86.1221%" y="639.50"></text></g><g><title>std::sys::unix::fs::readlink (1 samples, 0.08%)</title><rect x="85.8721%" y="613" width="0.0789%" height="15" fill="rgb(215,153,46)" fg:x="1088" fg:w="1"/><text x="86.1221%" y="623.50"></text></g><g><title>__GI___readlink (1 samples, 0.08%)</title><rect x="85.8721%" y="597" width="0.0789%" height="15" fill="rgb(224,49,31)" fg:x="1088" fg:w="1"/><text x="86.1221%" y="607.50"></text></g><g><title>rustc_session::session::build_session (2 samples, 0.16%)</title><rect x="85.8721%" y="693" width="0.1579%" height="15" fill="rgb(250,18,42)" fg:x="1088" fg:w="2"/><text x="86.1221%" y="703.50"></text></g><g><title>rustc_session::filesearch::get_or_default_sysroot (2 samples, 0.16%)</title><rect x="85.8721%" y="677" width="0.1579%" height="15" fill="rgb(215,176,39)" fg:x="1088" fg:w="2"/><text x="86.1221%" y="687.50"></text></g><g><title>std::sys::unix::fs::canonicalize (1 samples, 0.08%)</title><rect x="85.9511%" y="661" width="0.0789%" height="15" fill="rgb(223,77,29)" fg:x="1089" fg:w="1"/><text x="86.2011%" y="671.50"></text></g><g><title>__realpath (1 samples, 0.08%)</title><rect x="85.9511%" y="645" width="0.0789%" height="15" fill="rgb(234,94,52)" fg:x="1089" fg:w="1"/><text x="86.2011%" y="655.50"></text></g><g><title>realpath_stk (1 samples, 0.08%)</title><rect x="85.9511%" y="629" width="0.0789%" height="15" fill="rgb(220,154,50)" fg:x="1089" fg:w="1"/><text x="86.2011%" y="639.50"></text></g><g><title>__GI___readlink (1 samples, 0.08%)</title><rect x="85.9511%" y="613" width="0.0789%" height="15" fill="rgb(212,11,10)" fg:x="1089" fg:w="1"/><text x="86.2011%" y="623.50"></text></g><g><title>rustc_trait_selection::traits::select::SelectionContext::evaluate_predicate_recursively (1 samples, 0.08%)</title><rect x="86.0300%" y="693" width="0.0789%" height="15" fill="rgb(205,166,19)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="703.50"></text></g><g><title>rustc_data_structures::stack::ensure_sufficient_stack (1 samples, 0.08%)</title><rect x="86.0300%" y="677" width="0.0789%" height="15" fill="rgb(244,198,16)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="687.50"></text></g><g><title>rustc_trait_selection::traits::select::SelectionContext::evaluate_trait_predicate_recursively (1 samples, 0.08%)</title><rect x="86.0300%" y="661" width="0.0789%" height="15" fill="rgb(219,69,12)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="671.50"></text></g><g><title>rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_anon_task (1 samples, 0.08%)</title><rect x="86.0300%" y="645" width="0.0789%" height="15" fill="rgb(245,30,7)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="655.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (1 samples, 0.08%)</title><rect x="86.0300%" y="629" width="0.0789%" height="15" fill="rgb(218,221,48)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="639.50"></text></g><g><title>rustc_trait_selection::traits::select::SelectionContext::evaluate_stack (1 samples, 0.08%)</title><rect x="86.0300%" y="613" width="0.0789%" height="15" fill="rgb(216,66,15)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="623.50"></text></g><g><title>rustc_trait_selection::traits::select::candidate_assembly::&lt;impl rustc_trait_selection::traits::select::SelectionContext&gt;::candidate_from_obligation (1 samples, 0.08%)</title><rect x="86.0300%" y="597" width="0.0789%" height="15" fill="rgb(226,122,50)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="607.50"></text></g><g><title>rustc_query_system::dep_graph::graph::DepGraph&lt;K&gt;::with_anon_task (1 samples, 0.08%)</title><rect x="86.0300%" y="581" width="0.0789%" height="15" fill="rgb(239,156,16)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="591.50"></text></g><g><title>rustc_trait_selection::traits::select::candidate_assembly::&lt;impl rustc_trait_selection::traits::select::SelectionContext&gt;::candidate_from_obligation_no_cache (1 samples, 0.08%)</title><rect x="86.0300%" y="565" width="0.0789%" height="15" fill="rgb(224,27,38)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="575.50"></text></g><g><title>rustc_trait_selection::traits::select::candidate_assembly::&lt;impl rustc_trait_selection::traits::select::SelectionContext&gt;::assemble_candidates (1 samples, 0.08%)</title><rect x="86.0300%" y="549" width="0.0789%" height="15" fill="rgb(224,39,27)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="559.50"></text></g><g><title>rustc_trait_selection::traits::select::candidate_assembly::&lt;impl rustc_trait_selection::traits::select::SelectionContext&gt;::assemble_candidates_from_impls (1 samples, 0.08%)</title><rect x="86.0300%" y="533" width="0.0789%" height="15" fill="rgb(215,92,29)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="543.50"></text></g><g><title>rustc_middle::ty::trait_def::&lt;impl rustc_middle::ty::context::TyCtxt&gt;::for_each_relevant_impl (1 samples, 0.08%)</title><rect x="86.0300%" y="517" width="0.0789%" height="15" fill="rgb(207,159,16)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="527.50"></text></g><g><title>&lt;rustc_query_impl::Queries as rustc_middle::ty::query::QueryEngine&gt;::trait_impls_of (1 samples, 0.08%)</title><rect x="86.0300%" y="501" width="0.0789%" height="15" fill="rgb(238,163,47)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="511.50"></text></g><g><title>rustc_query_system::query::plumbing::try_execute_query (1 samples, 0.08%)</title><rect x="86.0300%" y="485" width="0.0789%" height="15" fill="rgb(219,91,49)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="495.50"></text></g><g><title>rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory (1 samples, 0.08%)</title><rect x="86.0300%" y="469" width="0.0789%" height="15" fill="rgb(227,167,31)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="479.50"></text></g><g><title>rustc_middle::dep_graph::&lt;impl rustc_query_system::dep_graph::DepKind for rustc_middle::dep_graph::dep_node::DepKind&gt;::with_deps (1 samples, 0.08%)</title><rect x="86.0300%" y="453" width="0.0789%" height="15" fill="rgb(234,80,54)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="463.50"></text></g><g><title>rustc_middle::ty::trait_def::trait_impls_of_provider (1 samples, 0.08%)</title><rect x="86.0300%" y="437" width="0.0789%" height="15" fill="rgb(212,114,2)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="447.50"></text></g><g><title>rustc_query_system::query::plumbing::get_query (1 samples, 0.08%)</title><rect x="86.0300%" y="421" width="0.0789%" height="15" fill="rgb(234,50,24)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="431.50"></text></g><g><title>rustc_query_system::query::plumbing::try_load_from_disk_and_cache_in_memory (1 samples, 0.08%)</title><rect x="86.0300%" y="405" width="0.0789%" height="15" fill="rgb(221,68,8)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="415.50"></text></g><g><title>rustc_query_system::query::plumbing::incremental_verify_ich (1 samples, 0.08%)</title><rect x="86.0300%" y="389" width="0.0789%" height="15" fill="rgb(254,180,31)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="399.50"></text></g><g><title>rustc_query_impl::&lt;impl rustc_query_system::query::config::QueryAccessors&lt;rustc_query_impl::plumbing::QueryCtxt&gt; for rustc_query_impl::queries::implementations_of_trait&gt;::hash_result (1 samples, 0.08%)</title><rect x="86.0300%" y="373" width="0.0789%" height="15" fill="rgb(247,130,50)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="383.50"></text></g><g><title>&lt;[T] as rustc_data_structures::stable_hasher::HashStable&lt;CTX&gt;&gt;::hash_stable (1 samples, 0.08%)</title><rect x="86.0300%" y="357" width="0.0789%" height="15" fill="rgb(211,109,4)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="367.50"></text></g><g><title>&lt;rustc_middle::ty::fast_reject::SimplifiedTypeGen&lt;D&gt; as rustc_data_structures::stable_hasher::HashStable&lt;rustc_query_system::ich::hcx::StableHashingContext&gt;&gt;::hash_stable (1 samples, 0.08%)</title><rect x="86.0300%" y="341" width="0.0789%" height="15" fill="rgb(238,50,21)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="351.50"></text></g><g><title>rustc_metadata::rmeta::decoder::cstore_impl::&lt;impl rustc_session::cstore::CrateStore for rustc_metadata::creader::CStore&gt;::def_path_hash (1 samples, 0.08%)</title><rect x="86.0300%" y="325" width="0.0789%" height="15" fill="rgb(225,57,45)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="335.50"></text></g><g><title>rustc_metadata::rmeta::decoder::&lt;impl rustc_metadata::creader::CrateMetadataRef&gt;::def_path_hash (1 samples, 0.08%)</title><rect x="86.0300%" y="309" width="0.0789%" height="15" fill="rgb(209,196,50)" fg:x="1090" fg:w="1"/><text x="86.2800%" y="319.50"></text></g><g><title>&lt;rustc_codegen_llvm::LlvmCodegenBackend as rustc_codegen_ssa::traits::backend::CodegenBackend&gt;::link (1 samples, 0.08%)</title><rect x="86.1089%" y="645" width="0.0789%" height="15" fill="rgb(242,140,13)" fg:x="1091" fg:w="1"/><text x="86.3589%" y="655.50"></text></g><g><title>rustc_codegen_ssa::back::link::link_binary (1 samples, 0.08%)</title><rect x="86.1089%" y="629" width="0.0789%" height="15" fill="rgb(217,111,7)" fg:x="1091" fg:w="1"/><text x="86.3589%" y="639.50"></text></g><g><title>rustc_codegen_ssa::back::link::link_natively (1 samples, 0.08%)</title><rect x="86.1089%" y="613" width="0.0789%" height="15" fill="rgb(253,193,51)" fg:x="1091" fg:w="1"/><text x="86.3589%" y="623.50"></text></g><g><title>rustc_codegen_ssa::back::link::exec_linker (1 samples, 0.08%)</title><rect x="86.1089%" y="597" width="0.0789%" height="15" fill="rgb(252,70,29)" fg:x="1091" fg:w="1"/><text x="86.3589%" y="607.50"></text></g><g><title>std::process::Child::wait_with_output (1 samples, 0.08%)</title><rect x="86.1089%" y="581" width="0.0789%" height="15" fill="rgb(232,127,12)" fg:x="1091" fg:w="1"/><text x="86.3589%" y="591.50"></text></g><g><title>std::process::Child::wait (1 samples, 0.08%)</title><rect x="86.1089%" y="565" width="0.0789%" height="15" fill="rgb(211,180,21)" fg:x="1091" fg:w="1"/><text x="86.3589%" y="575.50"></text></g><g><title>std::sys::unix::process::process_inner::Process::wait (1 samples, 0.08%)</title><rect x="86.1089%" y="549" width="0.0789%" height="15" fill="rgb(229,72,13)" fg:x="1091" fg:w="1"/><text x="86.3589%" y="559.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.08%)</title><rect x="86.1089%" y="533" width="0.0789%" height="15" fill="rgb(240,211,49)" fg:x="1091" fg:w="1"/><text x="86.3589%" y="543.50"></text></g><g><title>std::sys::unix::process::process_inner::Process::wait::{{closure}} (1 samples, 0.08%)</title><rect x="86.1089%" y="517" width="0.0789%" height="15" fill="rgb(219,149,40)" fg:x="1091" fg:w="1"/><text x="86.3589%" y="527.50"></text></g><g><title>__wait4 (1 samples, 0.08%)</title><rect x="86.1089%" y="501" width="0.0789%" height="15" fill="rgb(210,127,46)" fg:x="1091" fg:w="1"/><text x="86.3589%" y="511.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::set (2 samples, 0.16%)</title><rect x="86.1089%" y="693" width="0.1579%" height="15" fill="rgb(220,106,7)" fg:x="1091" fg:w="2"/><text x="86.3589%" y="703.50"></text></g><g><title>rustc_span::with_source_map (2 samples, 0.16%)</title><rect x="86.1089%" y="677" width="0.1579%" height="15" fill="rgb(249,31,22)" fg:x="1091" fg:w="2"/><text x="86.3589%" y="687.50"></text></g><g><title>rustc_interface::queries::Linker::link (2 samples, 0.16%)</title><rect x="86.1089%" y="661" width="0.1579%" height="15" fill="rgb(253,1,49)" fg:x="1091" fg:w="2"/><text x="86.3589%" y="671.50"></text></g><g><title>rustc_incremental::persist::fs::finalize_session_directory (1 samples, 0.08%)</title><rect x="86.1878%" y="645" width="0.0789%" height="15" fill="rgb(227,144,33)" fg:x="1092" fg:w="1"/><text x="86.4378%" y="655.50"></text></g><g><title>rustc_incremental::persist::fs::garbage_collect_session_directories (1 samples, 0.08%)</title><rect x="86.1878%" y="629" width="0.0789%" height="15" fill="rgb(249,163,44)" fg:x="1092" fg:w="1"/><text x="86.4378%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1878%" y="613" width="0.0789%" height="15" fill="rgb(234,15,39)" fg:x="1092" fg:w="1"/><text x="86.4378%" y="623.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.08%)</title><rect x="86.2668%" y="693" width="0.0789%" height="15" fill="rgb(207,66,16)" fg:x="1093" fg:w="1"/><text x="86.5168%" y="703.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.08%)</title><rect x="86.2668%" y="677" width="0.0789%" height="15" fill="rgb(233,112,24)" fg:x="1093" fg:w="1"/><text x="86.5168%" y="687.50"></text></g><g><title>rustc_span::with_source_map (1 samples, 0.08%)</title><rect x="86.2668%" y="661" width="0.0789%" height="15" fill="rgb(230,90,22)" fg:x="1093" fg:w="1"/><text x="86.5168%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustc_interface::interface::Compiler&gt; (1 samples, 0.08%)</title><rect x="86.2668%" y="645" width="0.0789%" height="15" fill="rgb(229,61,13)" fg:x="1093" fg:w="1"/><text x="86.5168%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.2668%" y="629" width="0.0789%" height="15" fill="rgb(225,57,24)" fg:x="1093" fg:w="1"/><text x="86.5168%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustc_session::options::Options&gt; (1 samples, 0.08%)</title><rect x="86.2668%" y="613" width="0.0789%" height="15" fill="rgb(208,169,48)" fg:x="1093" fg:w="1"/><text x="86.5168%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.2668%" y="597" width="0.0789%" height="15" fill="rgb(244,218,51)" fg:x="1093" fg:w="1"/><text x="86.5168%" y="607.50"></text></g><g><title>[unknown] (273 samples, 21.55%)</title><rect x="64.8777%" y="709" width="21.5470%" height="15" fill="rgb(214,148,10)" fg:x="822" fg:w="273"/><text x="65.1277%" y="719.50">[unknown]</text></g><g><title>std::sys_common::mutex::MovableMutex::new (1 samples, 0.08%)</title><rect x="86.3457%" y="693" width="0.0789%" height="15" fill="rgb(225,174,27)" fg:x="1094" fg:w="1"/><text x="86.5957%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::init (1 samples, 0.08%)</title><rect x="86.3457%" y="677" width="0.0789%" height="15" fill="rgb(230,96,26)" fg:x="1094" fg:w="1"/><text x="86.5957%" y="687.50"></text></g><g><title>_GLOBAL__sub_I_HexagonGenExtract.cpp (1 samples, 0.08%)</title><rect x="86.4246%" y="709" width="0.0789%" height="15" fill="rgb(232,10,30)" fg:x="1095" fg:w="1"/><text x="86.6746%" y="719.50"></text></g><g><title>_GLOBAL__sub_I_locale_inst.cc (1 samples, 0.08%)</title><rect x="86.5036%" y="709" width="0.0789%" height="15" fill="rgb(222,8,50)" fg:x="1096" fg:w="1"/><text x="86.7536%" y="719.50"></text></g><g><title>_GLOBAL__sub_I_locale_inst.cc (1 samples, 0.08%)</title><rect x="86.5036%" y="693" width="0.0789%" height="15" fill="rgb(213,81,27)" fg:x="1096" fg:w="1"/><text x="86.7536%" y="703.50"></text></g><g><title>__nptl_deallocate_tsd.part.0 (1 samples, 0.08%)</title><rect x="92.9755%" y="677" width="0.0789%" height="15" fill="rgb(245,50,10)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="687.50"></text></g><g><title>_rjem_je_tsd_cleanup (1 samples, 0.08%)</title><rect x="92.9755%" y="661" width="0.0789%" height="15" fill="rgb(216,100,18)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="671.50"></text></g><g><title>tsd_do_data_cleanup (1 samples, 0.08%)</title><rect x="92.9755%" y="645" width="0.0789%" height="15" fill="rgb(236,147,54)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="655.50"></text></g><g><title>tcache_destroy (1 samples, 0.08%)</title><rect x="92.9755%" y="629" width="0.0789%" height="15" fill="rgb(205,143,26)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="639.50"></text></g><g><title>_rjem_je_arena_decay (1 samples, 0.08%)</title><rect x="92.9755%" y="613" width="0.0789%" height="15" fill="rgb(236,26,9)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="623.50"></text></g><g><title>arena_decay_dirty (1 samples, 0.08%)</title><rect x="92.9755%" y="597" width="0.0789%" height="15" fill="rgb(221,165,53)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="607.50"></text></g><g><title>arena_decay_impl (1 samples, 0.08%)</title><rect x="92.9755%" y="581" width="0.0789%" height="15" fill="rgb(214,110,17)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="591.50"></text></g><g><title>arena_decay_to_limit (1 samples, 0.08%)</title><rect x="92.9755%" y="565" width="0.0789%" height="15" fill="rgb(237,197,12)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="575.50"></text></g><g><title>arena_stash_decayed (1 samples, 0.08%)</title><rect x="92.9755%" y="549" width="0.0789%" height="15" fill="rgb(205,84,17)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="559.50"></text></g><g><title>_rjem_je_extents_evict (1 samples, 0.08%)</title><rect x="92.9755%" y="533" width="0.0789%" height="15" fill="rgb(237,18,45)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="543.50"></text></g><g><title>extent_try_delayed_coalesce (1 samples, 0.08%)</title><rect x="92.9755%" y="517" width="0.0789%" height="15" fill="rgb(221,87,14)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="527.50"></text></g><g><title>extent_try_coalesce (1 samples, 0.08%)</title><rect x="92.9755%" y="501" width="0.0789%" height="15" fill="rgb(238,186,15)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="511.50"></text></g><g><title>extent_try_coalesce_impl (1 samples, 0.08%)</title><rect x="92.9755%" y="485" width="0.0789%" height="15" fill="rgb(208,115,11)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="495.50"></text></g><g><title>extent_coalesce (1 samples, 0.08%)</title><rect x="92.9755%" y="469" width="0.0789%" height="15" fill="rgb(254,175,0)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="479.50"></text></g><g><title>extent_activate_locked (1 samples, 0.08%)</title><rect x="92.9755%" y="453" width="0.0789%" height="15" fill="rgb(227,24,42)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="463.50"></text></g><g><title>extents_remove_locked (1 samples, 0.08%)</title><rect x="92.9755%" y="437" width="0.0789%" height="15" fill="rgb(223,211,37)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="447.50"></text></g><g><title>sz_psz2ind (1 samples, 0.08%)</title><rect x="92.9755%" y="421" width="0.0789%" height="15" fill="rgb(235,49,27)" fg:x="1178" fg:w="1"/><text x="93.2255%" y="431.50"></text></g><g><title>__GI___prctl (1 samples, 0.08%)</title><rect x="93.0545%" y="613" width="0.0789%" height="15" fill="rgb(254,97,51)" fg:x="1179" fg:w="1"/><text x="93.3045%" y="623.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.08%)</title><rect x="93.1334%" y="613" width="0.0789%" height="15" fill="rgb(249,51,40)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="623.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.08%)</title><rect x="93.1334%" y="597" width="0.0789%" height="15" fill="rgb(210,128,45)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.1334%" y="581" width="0.0789%" height="15" fill="rgb(224,137,50)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="591.50"></text></g><g><title>imalloc (1 samples, 0.08%)</title><rect x="93.1334%" y="565" width="0.0789%" height="15" fill="rgb(242,15,9)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="575.50"></text></g><g><title>tsd_fetch (1 samples, 0.08%)</title><rect x="93.1334%" y="549" width="0.0789%" height="15" fill="rgb(233,187,41)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="559.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.08%)</title><rect x="93.1334%" y="533" width="0.0789%" height="15" fill="rgb(227,2,29)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="543.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (1 samples, 0.08%)</title><rect x="93.1334%" y="517" width="0.0789%" height="15" fill="rgb(222,70,3)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="527.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (1 samples, 0.08%)</title><rect x="93.1334%" y="501" width="0.0789%" height="15" fill="rgb(213,11,42)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="511.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (1 samples, 0.08%)</title><rect x="93.1334%" y="485" width="0.0789%" height="15" fill="rgb(225,150,9)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="495.50"></text></g><g><title>arena_choose (1 samples, 0.08%)</title><rect x="93.1334%" y="469" width="0.0789%" height="15" fill="rgb(230,162,45)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="479.50"></text></g><g><title>arena_choose_impl (1 samples, 0.08%)</title><rect x="93.1334%" y="453" width="0.0789%" height="15" fill="rgb(222,14,52)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="463.50"></text></g><g><title>_rjem_je_arena_choose_hard (1 samples, 0.08%)</title><rect x="93.1334%" y="437" width="0.0789%" height="15" fill="rgb(254,198,14)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="447.50"></text></g><g><title>arena_init_locked (1 samples, 0.08%)</title><rect x="93.1334%" y="421" width="0.0789%" height="15" fill="rgb(220,217,30)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="431.50"></text></g><g><title>_rjem_je_arena_new (1 samples, 0.08%)</title><rect x="93.1334%" y="405" width="0.0789%" height="15" fill="rgb(215,146,41)" fg:x="1180" fg:w="1"/><text x="93.3834%" y="415.50"></text></g><g><title>__pthread_cond_wait (6 samples, 0.47%)</title><rect x="93.2123%" y="581" width="0.4736%" height="15" fill="rgb(217,27,36)" fg:x="1181" fg:w="6"/><text x="93.4623%" y="591.50"></text></g><g><title>__futex_abstimed_wait_common64 (6 samples, 0.47%)</title><rect x="93.2123%" y="565" width="0.4736%" height="15" fill="rgb(219,218,39)" fg:x="1181" fg:w="6"/><text x="93.4623%" y="575.50"></text></g><g><title>jobserver::imp::Client::acquire_allow_interrupts (8 samples, 0.63%)</title><rect x="93.6859%" y="581" width="0.6314%" height="15" fill="rgb(219,4,42)" fg:x="1187" fg:w="8"/><text x="93.9359%" y="591.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (8 samples, 0.63%)</title><rect x="93.6859%" y="565" width="0.6314%" height="15" fill="rgb(249,119,36)" fg:x="1187" fg:w="8"/><text x="93.9359%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::read (8 samples, 0.63%)</title><rect x="93.6859%" y="549" width="0.6314%" height="15" fill="rgb(209,23,33)" fg:x="1187" fg:w="8"/><text x="93.9359%" y="559.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (8 samples, 0.63%)</title><rect x="93.6859%" y="533" width="0.6314%" height="15" fill="rgb(211,10,0)" fg:x="1187" fg:w="8"/><text x="93.9359%" y="543.50"></text></g><g><title>__libc_read (8 samples, 0.63%)</title><rect x="93.6859%" y="517" width="0.6314%" height="15" fill="rgb(208,99,37)" fg:x="1187" fg:w="8"/><text x="93.9359%" y="527.50"></text></g><g><title>jobserver::HelperState::for_each_request (15 samples, 1.18%)</title><rect x="93.2123%" y="597" width="1.1839%" height="15" fill="rgb(213,132,31)" fg:x="1181" fg:w="15"/><text x="93.4623%" y="607.50"></text></g><g><title>rustc_codegen_ssa::back::write::start_executing_work::{{closure}} (1 samples, 0.08%)</title><rect x="94.3173%" y="581" width="0.0789%" height="15" fill="rgb(243,129,40)" fg:x="1195" fg:w="1"/><text x="94.5673%" y="591.50"></text></g><g><title>std::sync::mpsc::Sender&lt;T&gt;::send (1 samples, 0.08%)</title><rect x="94.3173%" y="565" width="0.0789%" height="15" fill="rgb(210,66,33)" fg:x="1195" fg:w="1"/><text x="94.5673%" y="575.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::send (1 samples, 0.08%)</title><rect x="94.3173%" y="549" width="0.0789%" height="15" fill="rgb(209,189,4)" fg:x="1195" fg:w="1"/><text x="94.5673%" y="559.50"></text></g><g><title>std::sync::mpsc::blocking::SignalToken::signal (1 samples, 0.08%)</title><rect x="94.3173%" y="533" width="0.0789%" height="15" fill="rgb(214,107,37)" fg:x="1195" fg:w="1"/><text x="94.5673%" y="543.50"></text></g><g><title>std::thread::Thread::unpark (1 samples, 0.08%)</title><rect x="94.3173%" y="517" width="0.0789%" height="15" fill="rgb(245,88,54)" fg:x="1195" fg:w="1"/><text x="94.5673%" y="527.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (1 samples, 0.08%)</title><rect x="94.3173%" y="501" width="0.0789%" height="15" fill="rgb(205,146,20)" fg:x="1195" fg:w="1"/><text x="94.5673%" y="511.50"></text></g><g><title>std::sys::unix::futex::futex_wake (1 samples, 0.08%)</title><rect x="94.3173%" y="485" width="0.0789%" height="15" fill="rgb(220,161,25)" fg:x="1195" fg:w="1"/><text x="94.5673%" y="495.50"></text></g><g><title>syscall (1 samples, 0.08%)</title><rect x="94.3173%" y="469" width="0.0789%" height="15" fill="rgb(215,152,15)" fg:x="1195" fg:w="1"/><text x="94.5673%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustc_codegen_ssa::back::write::start_executing_work&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;::{{closure}}&gt; (2 samples, 0.16%)</title><rect x="94.3962%" y="581" width="0.1579%" height="15" fill="rgb(233,192,44)" fg:x="1196" fg:w="2"/><text x="94.6462%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rustc_codegen_ssa::back::write::CodegenContext&lt;rustc_codegen_llvm::LlvmCodegenBackend&gt;&gt; (2 samples, 0.16%)</title><rect x="94.3962%" y="565" width="0.1579%" height="15" fill="rgb(240,170,46)" fg:x="1196" fg:w="2"/><text x="94.6462%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="94.3962%" y="549" width="0.1579%" height="15" fill="rgb(207,104,33)" fg:x="1196" fg:w="2"/><text x="94.6462%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="94.3962%" y="533" width="0.1579%" height="15" fill="rgb(219,21,39)" fg:x="1196" fg:w="2"/><text x="94.6462%" y="543.50"></text></g><g><title>_rjem_je_free_default (1 samples, 0.08%)</title><rect x="94.4751%" y="517" width="0.0789%" height="15" fill="rgb(214,133,29)" fg:x="1197" fg:w="1"/><text x="94.7251%" y="527.50"></text></g><g><title>ifree (1 samples, 0.08%)</title><rect x="94.4751%" y="501" width="0.0789%" height="15" fill="rgb(226,93,6)" fg:x="1197" fg:w="1"/><text x="94.7251%" y="511.50"></text></g><g><title>idalloctm (1 samples, 0.08%)</title><rect x="94.4751%" y="485" width="0.0789%" height="15" fill="rgb(252,222,34)" fg:x="1197" fg:w="1"/><text x="94.7251%" y="495.50"></text></g><g><title>arena_dalloc (1 samples, 0.08%)</title><rect x="94.4751%" y="469" width="0.0789%" height="15" fill="rgb(252,92,48)" fg:x="1197" fg:w="1"/><text x="94.7251%" y="479.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.08%)</title><rect x="94.4751%" y="453" width="0.0789%" height="15" fill="rgb(245,223,24)" fg:x="1197" fg:w="1"/><text x="94.7251%" y="463.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.08%)</title><rect x="94.4751%" y="437" width="0.0789%" height="15" fill="rgb(205,176,3)" fg:x="1197" fg:w="1"/><text x="94.7251%" y="447.50"></text></g><g><title>rustc_codegen_ssa::back::write::spawn_work (1 samples, 0.08%)</title><rect x="94.5541%" y="581" width="0.0789%" height="15" fill="rgb(235,151,15)" fg:x="1198" fg:w="1"/><text x="94.8041%" y="591.50"></text></g><g><title>std::thread::Builder::spawn (1 samples, 0.08%)</title><rect x="94.5541%" y="565" width="0.0789%" height="15" fill="rgb(237,209,11)" fg:x="1198" fg:w="1"/><text x="94.8041%" y="575.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.08%)</title><rect x="94.5541%" y="549" width="0.0789%" height="15" fill="rgb(243,227,24)" fg:x="1198" fg:w="1"/><text x="94.8041%" y="559.50"></text></g><g><title>__pthread_create_2_1 (1 samples, 0.08%)</title><rect x="94.5541%" y="533" width="0.0789%" height="15" fill="rgb(239,193,16)" fg:x="1198" fg:w="1"/><text x="94.8041%" y="543.50"></text></g><g><title>__GI__dl_allocate_tls_init (1 samples, 0.08%)</title><rect x="94.5541%" y="517" width="0.0789%" height="15" fill="rgb(231,27,9)" fg:x="1198" fg:w="1"/><text x="94.8041%" y="527.50"></text></g><g><title>memmove (1 samples, 0.08%)</title><rect x="94.5541%" y="501" width="0.0789%" height="15" fill="rgb(219,169,10)" fg:x="1198" fg:w="1"/><text x="94.8041%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mpsc::blocking::WaitToken&gt; (1 samples, 0.08%)</title><rect x="94.6330%" y="549" width="0.0789%" height="15" fill="rgb(244,229,43)" fg:x="1199" fg:w="1"/><text x="94.8830%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::mpsc::blocking::Inner&gt;&gt; (1 samples, 0.08%)</title><rect x="94.6330%" y="533" width="0.0789%" height="15" fill="rgb(254,38,20)" fg:x="1199" fg:w="1"/><text x="94.8830%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.6330%" y="517" width="0.0789%" height="15" fill="rgb(250,47,30)" fg:x="1199" fg:w="1"/><text x="94.8830%" y="527.50"></text></g><g><title>free (1 samples, 0.08%)</title><rect x="94.6330%" y="501" width="0.0789%" height="15" fill="rgb(224,124,36)" fg:x="1199" fg:w="1"/><text x="94.8830%" y="511.50"></text></g><g><title>free_fastpath (1 samples, 0.08%)</title><rect x="94.6330%" y="485" width="0.0789%" height="15" fill="rgb(246,68,51)" fg:x="1199" fg:w="1"/><text x="94.8830%" y="495.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::recv (12 samples, 0.95%)</title><rect x="94.6330%" y="581" width="0.9471%" height="15" fill="rgb(253,43,49)" fg:x="1199" fg:w="12"/><text x="94.8830%" y="591.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (12 samples, 0.95%)</title><rect x="94.6330%" y="565" width="0.9471%" height="15" fill="rgb(219,54,36)" fg:x="1199" fg:w="12"/><text x="94.8830%" y="575.50"></text></g><g><title>std::thread::park (11 samples, 0.87%)</title><rect x="94.7119%" y="549" width="0.8682%" height="15" fill="rgb(227,133,34)" fg:x="1200" fg:w="11"/><text x="94.9619%" y="559.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (11 samples, 0.87%)</title><rect x="94.7119%" y="533" width="0.8682%" height="15" fill="rgb(247,227,15)" fg:x="1200" fg:w="11"/><text x="94.9619%" y="543.50"></text></g><g><title>std::sys::unix::futex::futex_wait (11 samples, 0.87%)</title><rect x="94.7119%" y="517" width="0.8682%" height="15" fill="rgb(229,96,14)" fg:x="1200" fg:w="11"/><text x="94.9619%" y="527.50"></text></g><g><title>syscall (11 samples, 0.87%)</title><rect x="94.7119%" y="501" width="0.8682%" height="15" fill="rgb(220,79,17)" fg:x="1200" fg:w="11"/><text x="94.9619%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (33 samples, 2.60%)</title><rect x="93.0545%" y="661" width="2.6046%" height="15" fill="rgb(205,131,53)" fg:x="1179" fg:w="33"/><text x="93.3045%" y="671.50">&lt;a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (33 samples, 2.60%)</title><rect x="93.0545%" y="645" width="2.6046%" height="15" fill="rgb(209,50,29)" fg:x="1179" fg:w="33"/><text x="93.3045%" y="655.50">&lt;a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (33 samples, 2.60%)</title><rect x="93.0545%" y="629" width="2.6046%" height="15" fill="rgb(245,86,46)" fg:x="1179" fg:w="33"/><text x="93.3045%" y="639.50">co..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (31 samples, 2.45%)</title><rect x="93.2123%" y="613" width="2.4467%" height="15" fill="rgb(235,66,46)" fg:x="1181" fg:w="31"/><text x="93.4623%" y="623.50">st..</text></g><g><title>rustc_codegen_ssa::back::write::start_executing_work::{{closure}} (16 samples, 1.26%)</title><rect x="94.3962%" y="597" width="1.2628%" height="15" fill="rgb(232,148,31)" fg:x="1196" fg:w="16"/><text x="94.6462%" y="607.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::send (1 samples, 0.08%)</title><rect x="95.5801%" y="581" width="0.0789%" height="15" fill="rgb(217,149,8)" fg:x="1211" fg:w="1"/><text x="95.8301%" y="591.50"></text></g><g><title>std::sync::mpsc::blocking::SignalToken::signal (1 samples, 0.08%)</title><rect x="95.5801%" y="565" width="0.0789%" height="15" fill="rgb(209,183,11)" fg:x="1211" fg:w="1"/><text x="95.8301%" y="575.50"></text></g><g><title>std::thread::Thread::unpark (1 samples, 0.08%)</title><rect x="95.5801%" y="549" width="0.0789%" height="15" fill="rgb(208,55,20)" fg:x="1211" fg:w="1"/><text x="95.8301%" y="559.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::unpark (1 samples, 0.08%)</title><rect x="95.5801%" y="533" width="0.0789%" height="15" fill="rgb(218,39,14)" fg:x="1211" fg:w="1"/><text x="95.8301%" y="543.50"></text></g><g><title>std::sys::unix::futex::futex_wake (1 samples, 0.08%)</title><rect x="95.5801%" y="517" width="0.0789%" height="15" fill="rgb(216,169,33)" fg:x="1211" fg:w="1"/><text x="95.8301%" y="527.50"></text></g><g><title>syscall (1 samples, 0.08%)</title><rect x="95.5801%" y="501" width="0.0789%" height="15" fill="rgb(233,80,24)" fg:x="1211" fg:w="1"/><text x="95.8301%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (1 samples, 0.08%)</title><rect x="95.6590%" y="661" width="0.0789%" height="15" fill="rgb(213,179,31)" fg:x="1212" fg:w="1"/><text x="95.9090%" y="671.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.6590%" y="645" width="0.0789%" height="15" fill="rgb(209,19,5)" fg:x="1212" fg:w="1"/><text x="95.9090%" y="655.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (1 samples, 0.08%)</title><rect x="95.6590%" y="629" width="0.0789%" height="15" fill="rgb(219,18,35)" fg:x="1212" fg:w="1"/><text x="95.9090%" y="639.50"></text></g><g><title>__GI_munmap (1 samples, 0.08%)</title><rect x="95.6590%" y="613" width="0.0789%" height="15" fill="rgb(209,169,16)" fg:x="1212" fg:w="1"/><text x="95.9090%" y="623.50"></text></g><g><title>__GI___mmap64 (4 samples, 0.32%)</title><rect x="95.7380%" y="597" width="0.3157%" height="15" fill="rgb(245,90,51)" fg:x="1213" fg:w="4"/><text x="95.9880%" y="607.50"></text></g><g><title>__GI___mprotect (1 samples, 0.08%)</title><rect x="96.0537%" y="597" width="0.0789%" height="15" fill="rgb(220,99,45)" fg:x="1217" fg:w="1"/><text x="96.3037%" y="607.50"></text></g><g><title>__GI___clone (124 samples, 9.79%)</title><rect x="86.5825%" y="709" width="9.7869%" height="15" fill="rgb(249,89,25)" fg:x="1097" fg:w="124"/><text x="86.8325%" y="719.50">__GI___clone</text></g><g><title>start_thread (46 samples, 3.63%)</title><rect x="92.7388%" y="693" width="3.6306%" height="15" fill="rgb(239,193,0)" fg:x="1175" fg:w="46"/><text x="92.9888%" y="703.50">star..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (42 samples, 3.31%)</title><rect x="93.0545%" y="677" width="3.3149%" height="15" fill="rgb(231,126,1)" fg:x="1179" fg:w="42"/><text x="93.3045%" y="687.50">std..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (8 samples, 0.63%)</title><rect x="95.7380%" y="661" width="0.6314%" height="15" fill="rgb(243,166,3)" fg:x="1213" fg:w="8"/><text x="95.9880%" y="671.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (8 samples, 0.63%)</title><rect x="95.7380%" y="645" width="0.6314%" height="15" fill="rgb(223,22,34)" fg:x="1213" fg:w="8"/><text x="95.9880%" y="655.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (8 samples, 0.63%)</title><rect x="95.7380%" y="629" width="0.6314%" height="15" fill="rgb(251,52,51)" fg:x="1213" fg:w="8"/><text x="95.9880%" y="639.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (8 samples, 0.63%)</title><rect x="95.7380%" y="613" width="0.6314%" height="15" fill="rgb(221,165,28)" fg:x="1213" fg:w="8"/><text x="95.9880%" y="623.50"></text></g><g><title>std::sys::unix::os::page_size (3 samples, 0.24%)</title><rect x="96.1326%" y="597" width="0.2368%" height="15" fill="rgb(218,121,47)" fg:x="1218" fg:w="3"/><text x="96.3826%" y="607.50"></text></g><g><title>__GI___sysconf (3 samples, 0.24%)</title><rect x="96.1326%" y="581" width="0.2368%" height="15" fill="rgb(209,120,9)" fg:x="1218" fg:w="3"/><text x="96.3826%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.08%)</title><rect x="96.3694%" y="709" width="0.0789%" height="15" fill="rgb(236,68,12)" fg:x="1221" fg:w="1"/><text x="96.6194%" y="719.50"></text></g><g><title>_dl_map_object_deps (6 samples, 0.47%)</title><rect x="96.6062%" y="645" width="0.4736%" height="15" fill="rgb(225,194,26)" fg:x="1224" fg:w="6"/><text x="96.8562%" y="655.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.47%)</title><rect x="96.6062%" y="629" width="0.4736%" height="15" fill="rgb(231,84,39)" fg:x="1224" fg:w="6"/><text x="96.8562%" y="639.50"></text></g><g><title>openaux (6 samples, 0.47%)</title><rect x="96.6062%" y="613" width="0.4736%" height="15" fill="rgb(210,11,45)" fg:x="1224" fg:w="6"/><text x="96.8562%" y="623.50"></text></g><g><title>_dl_map_object (6 samples, 0.47%)</title><rect x="96.6062%" y="597" width="0.4736%" height="15" fill="rgb(224,54,52)" fg:x="1224" fg:w="6"/><text x="96.8562%" y="607.50"></text></g><g><title>_dl_map_object_from_fd (6 samples, 0.47%)</title><rect x="96.6062%" y="581" width="0.4736%" height="15" fill="rgb(238,102,14)" fg:x="1224" fg:w="6"/><text x="96.8562%" y="591.50"></text></g><g><title>__mmap (3 samples, 0.24%)</title><rect x="96.8429%" y="565" width="0.2368%" height="15" fill="rgb(243,160,52)" fg:x="1227" fg:w="3"/><text x="97.0929%" y="575.50"></text></g><g><title>_dl_lookup_symbol_x (13 samples, 1.03%)</title><rect x="98.3425%" y="629" width="1.0260%" height="15" fill="rgb(216,114,19)" fg:x="1246" fg:w="13"/><text x="98.5925%" y="639.50"></text></g><g><title>do_lookup_x (7 samples, 0.55%)</title><rect x="98.8161%" y="613" width="0.5525%" height="15" fill="rgb(244,166,37)" fg:x="1252" fg:w="7"/><text x="99.0661%" y="623.50"></text></g><g><title>_start (38 samples, 3.00%)</title><rect x="96.4483%" y="709" width="2.9992%" height="15" fill="rgb(246,29,44)" fg:x="1222" fg:w="38"/><text x="96.6983%" y="719.50">_st..</text></g><g><title>_dl_start (36 samples, 2.84%)</title><rect x="96.6062%" y="693" width="2.8414%" height="15" fill="rgb(215,56,53)" fg:x="1224" fg:w="36"/><text x="96.8562%" y="703.50">_d..</text></g><g><title>_dl_sysdep_start (36 samples, 2.84%)</title><rect x="96.6062%" y="677" width="2.8414%" height="15" fill="rgb(217,60,2)" fg:x="1224" fg:w="36"/><text x="96.8562%" y="687.50">_d..</text></g><g><title>dl_main (36 samples, 2.84%)</title><rect x="96.6062%" y="661" width="2.8414%" height="15" fill="rgb(207,26,24)" fg:x="1224" fg:w="36"/><text x="96.8562%" y="671.50">dl..</text></g><g><title>_dl_relocate_object (30 samples, 2.37%)</title><rect x="97.0797%" y="645" width="2.3678%" height="15" fill="rgb(252,210,15)" fg:x="1230" fg:w="30"/><text x="97.3297%" y="655.50">_d..</text></g><g><title>_dl_protect_relro (1 samples, 0.08%)</title><rect x="99.3686%" y="629" width="0.0789%" height="15" fill="rgb(253,209,26)" fg:x="1259" fg:w="1"/><text x="99.6186%" y="639.50"></text></g><g><title>__mprotect (1 samples, 0.08%)</title><rect x="99.3686%" y="613" width="0.0789%" height="15" fill="rgb(238,170,14)" fg:x="1259" fg:w="1"/><text x="99.6186%" y="623.50"></text></g><g><title>llvm::StringMapImpl::LookupBucketFor (2 samples, 0.16%)</title><rect x="99.4475%" y="709" width="0.1579%" height="15" fill="rgb(216,178,15)" fg:x="1260" fg:w="2"/><text x="99.6975%" y="719.50"></text></g><g><title>llvm::Twine::toNullTerminatedStringRef (1 samples, 0.08%)</title><rect x="99.6054%" y="709" width="0.0789%" height="15" fill="rgb(250,197,2)" fg:x="1262" fg:w="1"/><text x="99.8554%" y="719.50"></text></g><g><title>llvm::initializeAnalysis (1 samples, 0.08%)</title><rect x="99.6843%" y="709" width="0.0789%" height="15" fill="rgb(212,70,42)" fg:x="1263" fg:w="1"/><text x="99.9343%" y="719.50"></text></g><g><title>_rjem_je_malloc_default (1 samples, 0.08%)</title><rect x="99.7632%" y="693" width="0.0789%" height="15" fill="rgb(227,213,9)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="703.50"></text></g><g><title>imalloc (1 samples, 0.08%)</title><rect x="99.7632%" y="677" width="0.0789%" height="15" fill="rgb(245,99,25)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="687.50"></text></g><g><title>imalloc_body (1 samples, 0.08%)</title><rect x="99.7632%" y="661" width="0.0789%" height="15" fill="rgb(250,82,29)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="671.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.08%)</title><rect x="99.7632%" y="645" width="0.0789%" height="15" fill="rgb(241,226,54)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="655.50"></text></g><g><title>iallocztm (1 samples, 0.08%)</title><rect x="99.7632%" y="629" width="0.0789%" height="15" fill="rgb(221,99,41)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="639.50"></text></g><g><title>arena_malloc (1 samples, 0.08%)</title><rect x="99.7632%" y="613" width="0.0789%" height="15" fill="rgb(213,90,21)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="623.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.08%)</title><rect x="99.7632%" y="597" width="0.0789%" height="15" fill="rgb(205,208,24)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.08%)</title><rect x="99.7632%" y="581" width="0.0789%" height="15" fill="rgb(246,31,12)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="591.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.08%)</title><rect x="99.7632%" y="565" width="0.0789%" height="15" fill="rgb(213,154,6)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="575.50"></text></g><g><title>arena_bin_malloc_hard (1 samples, 0.08%)</title><rect x="99.7632%" y="549" width="0.0789%" height="15" fill="rgb(222,163,29)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="559.50"></text></g><g><title>arena_bin_nonfull_slab_get (1 samples, 0.08%)</title><rect x="99.7632%" y="533" width="0.0789%" height="15" fill="rgb(227,201,8)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="543.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.08%)</title><rect x="99.7632%" y="517" width="0.0789%" height="15" fill="rgb(233,9,32)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="527.50"></text></g><g><title>arena_slab_alloc_hard (1 samples, 0.08%)</title><rect x="99.7632%" y="501" width="0.0789%" height="15" fill="rgb(217,54,24)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="511.50"></text></g><g><title>_rjem_je_extent_alloc_wrapper (1 samples, 0.08%)</title><rect x="99.7632%" y="485" width="0.0789%" height="15" fill="rgb(235,192,0)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="495.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.08%)</title><rect x="99.7632%" y="469" width="0.0789%" height="15" fill="rgb(235,45,9)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="479.50"></text></g><g><title>extent_recycle (1 samples, 0.08%)</title><rect x="99.7632%" y="453" width="0.0789%" height="15" fill="rgb(246,42,40)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="463.50"></text></g><g><title>extent_recycle_split (1 samples, 0.08%)</title><rect x="99.7632%" y="437" width="0.0789%" height="15" fill="rgb(248,111,24)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="447.50"></text></g><g><title>extent_split_interior (1 samples, 0.08%)</title><rect x="99.7632%" y="421" width="0.0789%" height="15" fill="rgb(249,65,22)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="431.50"></text></g><g><title>extent_split_impl (1 samples, 0.08%)</title><rect x="99.7632%" y="405" width="0.0789%" height="15" fill="rgb(238,111,51)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="415.50"></text></g><g><title>_rjem_je_base_alloc_extent (1 samples, 0.08%)</title><rect x="99.7632%" y="389" width="0.0789%" height="15" fill="rgb(250,118,22)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="399.50"></text></g><g><title>extent_esn_set (1 samples, 0.08%)</title><rect x="99.7632%" y="373" width="0.0789%" height="15" fill="rgb(234,84,26)" fg:x="1264" fg:w="1"/><text x="100.0132%" y="383.50"></text></g><g><title>operator new (2 samples, 0.16%)</title><rect x="99.7632%" y="709" width="0.1579%" height="15" fill="rgb(243,172,12)" fg:x="1264" fg:w="2"/><text x="100.0132%" y="719.50"></text></g><g><title>malloc (1 samples, 0.08%)</title><rect x="99.8421%" y="693" width="0.0789%" height="15" fill="rgb(236,150,49)" fg:x="1265" fg:w="1"/><text x="100.0921%" y="703.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.08%)</title><rect x="99.8421%" y="677" width="0.0789%" height="15" fill="rgb(225,197,26)" fg:x="1265" fg:w="1"/><text x="100.0921%" y="687.50"></text></g><g><title>all (1,267 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(214,17,42)" fg:x="0" fg:w="1267"/><text x="0.2500%" y="751.50"></text></g><g><title>rustc (485 samples, 38.28%)</title><rect x="61.7206%" y="725" width="38.2794%" height="15" fill="rgb(224,165,40)" fg:x="782" fg:w="485"/><text x="61.9706%" y="735.50">rustc</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt;::_M_insert_&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; const&amp;, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, unsigned int&gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.08%)</title><rect x="99.9211%" y="709" width="0.0789%" height="15" fill="rgb(246,100,4)" fg:x="1266" fg:w="1"/><text x="100.1711%" y="719.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="99.9211%" y="693" width="0.0789%" height="15" fill="rgb(222,103,0)" fg:x="1266" fg:w="1"/><text x="100.1711%" y="703.50"></text></g></svg></svg>